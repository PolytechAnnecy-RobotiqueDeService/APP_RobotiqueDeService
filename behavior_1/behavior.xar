<?xml version="1.0" encoding="UTF-8" ?>
<ChoregrapheProject xmlns="http://www.aldebaran-robotics.com/schema/choregraphe/project.xsd" xar_version="3">
    <Box name="root" id="-1" localization="8" tooltip="Root box of Choregraphe&apos;s behavior. Highest level possible." x="0" y="0">
        <bitmap>media/images/box/root.png</bitmap>
        <script language="4">
            <content>
                <![CDATA[]]>
</content>
        </script>
        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
        <Timeline enable="0">
            <BehaviorLayer name="behavior_layer1">
                <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                        <Box name="orga" id="12" localization="8" tooltip="" x="474" y="188">
                            <bitmap>media/images/box/box-timeLine.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="-1">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="init" index="1">
                                        <Diagram>
                                            <Box name="Goto (name)" id="1" localization="8" tooltip="Jump to the frame name set in parameters." x="286" y="292">
                                                <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onInput_onGo(self):
        self.getParentTimeline().goTo(self.getParameter("Frame name"))]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onGo" type="1" type_size="1" nature="1" inner="0" tooltip="Parent timeline gotoTimeline when a signal is received on this input." id="2" />
                                                <Parameter name="Frame name" inherits_from_parent="0" content_type="3" value="menu" default_value="" custom_choice="0" tooltip="Name of the frame you want to go to." id="3" />
                                            </Box>
                                            <Box name="Stop" id="2" localization="8" tooltip="Stop the parent timeline at the current frame index.&#x0A;&#x0A;!!Warning!! This box does not stop the behavior! It is only the timeline which will&#x0A;stop playing, the keyframes and boxes will still be running." x="297" y="69">
                                                <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onInput_onStop(self):
        self.getParentTimeline().pause()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStop" type="1" type_size="1" nature="1" inner="0" tooltip="Parent timeline stops when a signal is received on this input." id="2" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                            <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="menu" index="7">
                                        <Diagram scale="84.0896">
                                            <Box name="Switch Case" id="3" localization="8" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;matching output, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="594" y="722">
                                                <bitmap>media/images/box/interaction/choice.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("salut")):
			self.output_1(p)
		elif(p == self.typeConversion("cherche")):
			self.output_2(p)
		elif(p == self.typeConversion("debout")):
			self.output_3(p)
		elif(p == self.typeConversion("assis")):
			self.output_4(p)
		elif(p == self.typeConversion("macarena")):
			self.output_5(p)
		elif(p == self.typeConversion("lie le texte")):
			self.output_6(p)
		elif(p == self.typeConversion("python")):
			self.output_7(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
</content>
                                                </script>
                                                <pluginContent>
                                                    <keywords>
                                                        <keyword>&quot;salut&quot;</keyword>
                                                        <keyword>&quot;cherche&quot;</keyword>
                                                        <keyword>&quot;debout&quot;</keyword>
                                                        <keyword>&quot;assis&quot;</keyword>
                                                        <keyword>&quot;macarena&quot;</keyword>
                                                        <keyword>&quot;lie le texte&quot;</keyword>
                                                        <keyword>&quot;python&quot;</keyword>
                                                        <keyword></keyword>
                                                        <keyword></keyword>
                                                        <keyword></keyword>
                                                    </keywords>
                                                </pluginContent>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="0" type_size="1" nature="1" inner="0" tooltip="Value to test." id="2" />
                                                <Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
                                                <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
                                                <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" />
                                                <Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="6" />
                                                <Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="7" />
                                                <Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="8" />
                                                <Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="9" />
                                                <Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="10" />
                                                <Output name="output_8" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="11" />
                                                <Output name="output_9" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="12" />
                                            </Box>
                                            <Box name="Speech Reco." id="1" localization="8" tooltip="Recognize a word from a list of words set in the box parameters.&#x0A;&#x0A;V1.1.0&#x0A;" x="368" y="727">
                                                <bitmap>media/images/box/interaction/ear.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        try:
            self.asr = ALProxy("ALSpeechRecognition")
        except Exception as e:
            self.asr = None
            self.logger.error(e)
        self.memory = ALProxy("ALMemory")

    def onLoad(self):
        from threading import Lock
        self.bIsRunning = False
        self.mutex = Lock()
        self.hasPushed = False
        self.hasSubscribed = False
        self.BIND_PYTHON(self.getName(), "onWordRecognized")

    def onUnload(self):
        from threading import Lock
        self.mutex.acquire()
        try:
            if (self.bIsRunning):
                if (self.hasSubscribed):
                    self.memory.unsubscribeToEvent("WordRecognized", self.getName())
                if (self.hasPushed and self.asr):
                    self.asr.popContexts()
        except RuntimeError, e:
            self.mutex.release()
            raise e
        self.bIsRunning = False;
        self.mutex.release()

    def onInput_onStart(self):
        from threading import Lock
        self.mutex.acquire()
        if(self.bIsRunning):
            self.mutex.release()
            return
        self.bIsRunning = True
        try:
            if self.asr:
                self.asr.setVisualExpression(self.getParameter("Visual expression"))
                self.asr.pushContexts()
            self.hasPushed = True
            if self.asr:
                self.asr.setVocabulary( self.getParameter("Word list").split(';'), self.getParameter("Enable word spotting") )
            self.memory.subscribeToEvent("WordRecognized", self.getName(), "onWordRecognized")
            self.hasSubscribed = True
        except RuntimeError, e:
            self.mutex.release()
            self.onUnload()
            raise e
        self.mutex.release()

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()

    def onWordRecognized(self, key, value, message):
        if(len(value) > 1 and value[1] >= self.getParameter("Confidence threshold (%)")/100.):
            self.wordRecognized(value[0]) #~ activate output of the box
        else:
            self.onNothing()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Output name="wordRecognized" type="3" type_size="1" nature="2" inner="0" tooltip="Word recognized with a confidence higher than the threshold set in the box parameters." id="5" />
                                                <Output name="onNothing" type="1" type_size="1" nature="2" inner="0" tooltip="Nothing has been understood." id="6" />
                                                <Parameter name="Word list" inherits_from_parent="0" content_type="3" value="salut;cherche;debout;assis;macarena;python;lie le texte;" default_value="yes;no" custom_choice="0" tooltip="Try to recognize a word from a list of words set in the box parameters." id="7" />
                                                <Parameter name="Confidence threshold (%)" inherits_from_parent="0" content_type="1" value="44" default_value="30" min="0" max="100" tooltip="If the confidence associated with the word recognized is below this threshold, the robot will consider that it is not recognized." id="8" />
                                                <Parameter name="Visual expression" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Use the LEDs to show feedbacks from the robot during the recognition.&#x0A;&#x0A;For example:&#x0A;- Eyes leds get blue and turn when the speech recognition is launched.&#x0A;- They get yellow when the robot hears someone talking and analyses what it heard.&#x0A;- They flash in green when the robot understood and flash in red otherwise." id="9" />
                                                <Parameter name="Enable word spotting" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="If this option is not activated the robot will only understand exact expressions. If it is, he will spot the exact expressions even in the middle of a sentence.&#x0A;&#x0A;!!Warning!! This option is only available with the speech recognition module using Nuance (ie in Atom version of the robot)." id="10" />
                                                <Resource name="Speech recognition" type="Lock" timeout="0" />
                                            </Box>
                                            <Box name="Goto (name) (1)" id="4" localization="8" tooltip="Jump to the frame name set in parameters." x="1056" y="574">
                                                <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onInput_onGo(self):
        self.getParentTimeline().goTo(self.getParameter("Frame name"))]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onGo" type="1" type_size="1" nature="1" inner="0" tooltip="Parent timeline gotoTimeline when a signal is received on this input." id="2" />
                                                <Parameter name="Frame name" inherits_from_parent="0" content_type="3" value="salut" default_value="" custom_choice="0" tooltip="Name of the frame you want to go to." id="3" />
                                            </Box>
                                            <Box name="Goto (name) (2)" id="8" localization="8" tooltip="Jump to the frame name set in parameters." x="1176" y="701">
                                                <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onInput_onGo(self):
        self.getParentTimeline().goTo(self.getParameter("Frame name"))]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onGo" type="1" type_size="1" nature="1" inner="0" tooltip="Parent timeline gotoTimeline when a signal is received on this input." id="2" />
                                                <Parameter name="Frame name" inherits_from_parent="0" content_type="3" value="debout" default_value="" custom_choice="0" tooltip="Name of the frame you want to go to." id="3" />
                                            </Box>
                                            <Box name="Goto (name) (3)" id="10" localization="8" tooltip="Jump to the frame name set in parameters." x="1177" y="790">
                                                <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onInput_onGo(self):
        self.getParentTimeline().goTo(self.getParameter("Frame name"))]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onGo" type="1" type_size="1" nature="1" inner="0" tooltip="Parent timeline gotoTimeline when a signal is received on this input." id="2" />
                                                <Parameter name="Frame name" inherits_from_parent="0" content_type="3" value="assit" default_value="" custom_choice="0" tooltip="Name of the frame you want to go to." id="3" />
                                            </Box>
                                            <Box name="Goto (name) (4)" id="7" localization="8" tooltip="Jump to the frame name set in parameters." x="949" y="802">
                                                <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onInput_onGo(self):
        self.getParentTimeline().goTo(self.getParameter("Frame name"))]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onGo" type="1" type_size="1" nature="1" inner="0" tooltip="Parent timeline gotoTimeline when a signal is received on this input." id="2" />
                                                <Parameter name="Frame name" inherits_from_parent="0" content_type="3" value="macarena" default_value="" custom_choice="0" tooltip="Name of the frame you want to go to." id="3" />
                                            </Box>
                                            <Box name="Goto (name) (5)" id="2" localization="8" tooltip="Jump to the frame name set in parameters." x="1186" y="965">
                                                <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onInput_onGo(self):
        self.getParentTimeline().goTo(self.getParameter("Frame name"))]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onGo" type="1" type_size="1" nature="1" inner="0" tooltip="Parent timeline gotoTimeline when a signal is received on this input." id="2" />
                                                <Parameter name="Frame name" inherits_from_parent="0" content_type="3" value="marche" default_value="" custom_choice="0" tooltip="Name of the frame you want to go to." id="3" />
                                            </Box>
                                            <Box name="Goto (name) (6)" id="5" localization="8" tooltip="Jump to the frame name set in parameters." x="1190" y="1055">
                                                <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onInput_onGo(self):
        self.getParentTimeline().goTo(self.getParameter("Frame name"))]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onGo" type="1" type_size="1" nature="1" inner="0" tooltip="Parent timeline gotoTimeline when a signal is received on this input." id="2" />
                                                <Parameter name="Frame name" inherits_from_parent="0" content_type="3" value="tourne" default_value="" custom_choice="0" tooltip="Name of the frame you want to go to." id="3" />
                                            </Box>
                                            <Box name="Goto (name) (7)" id="9" localization="8" tooltip="Jump to the frame name set in parameters." x="204" y="22">
                                                <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onInput_onGo(self):
        self.getParentTimeline().goTo(self.getParameter("Frame name"))]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onGo" type="1" type_size="1" nature="1" inner="0" tooltip="Parent timeline gotoTimeline when a signal is received on this input." id="2" />
                                                <Parameter name="Frame name" inherits_from_parent="0" content_type="3" value="vocniv1" default_value="" custom_choice="0" tooltip="Name of the frame you want to go to." id="3" />
                                            </Box>
                                            <Box name="Goto (name)" id="11" localization="8" tooltip="Jump to the frame name set in parameters." x="1306" y="588">
                                                <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onInput_onGo(self):
        self.getParentTimeline().goTo(self.getParameter("Frame name"))]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onGo" type="1" type_size="1" nature="1" inner="0" tooltip="Parent timeline gotoTimeline when a signal is received on this input." id="2" />
                                                <Parameter name="Frame name" inherits_from_parent="0" content_type="3" value="cherche" default_value="" custom_choice="0" tooltip="Name of the frame you want to go to." id="3" />
                                            </Box>
                                            <Box name="Say (1)" id="6" localization="8" tooltip="Say some text. Note that you must open the box to enter the text." x="1174" y="595">
                                                <bitmap>media/images/box/interaction/say.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                                                <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram>
                                                                <Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65">
                                                                    <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                                    <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                                </Box>
                                                                <Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68">
                                                                    <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Arabic" : "  ",
			"Czech" : " Ahoj ",
			"Danish" : " Hej ",
			"German" : " Hallo ",
			"Greek" : "  ",
			"English" : " Hello ",
			"Spanish" : " Hola ",
			"Finnish" : " Hei ",
			"French" : " ok je cherche quelqu\'un ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Dutch" : " Hallo ",
			"Norwegian" : "  ",
			"Polish" : " Cześć ",
			"Brazilian" : " Olá ",
			"Portuguese" : " Olá ",
			"Russian" : " Привет ",
			"Swedish" : " Hallå ",
			"Turkish" : " Merhaba ",
			"Chinese" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <arabic>
                                                                            <![CDATA[]]>
</arabic>
                                                                        <czech>
                                                                            <![CDATA[Ahoj]]>
</czech>
                                                                        <danish>
                                                                            <![CDATA[Hej]]>
</danish>
                                                                        <german>
                                                                            <![CDATA[Hallo]]>
</german>
                                                                        <greek>
                                                                            <![CDATA[]]>
</greek>
                                                                        <english>
                                                                            <![CDATA[Hello]]>
</english>
                                                                        <spanish>
                                                                            <![CDATA[Hola]]>
</spanish>
                                                                        <finnish>
                                                                            <![CDATA[Hei]]>
</finnish>
                                                                        <french>
                                                                            <![CDATA[ok je cherche quelqu'un]]>
</french>
                                                                        <italian>
                                                                            <![CDATA[Ciao]]>
</italian>
                                                                        <japanese>
                                                                            <![CDATA[こんにちは]]>
</japanese>
                                                                        <korean>
                                                                            <![CDATA[안녕하세요]]>
</korean>
                                                                        <dutch>
                                                                            <![CDATA[Hallo]]>
</dutch>
                                                                        <norwegian>
                                                                            <![CDATA[]]>
</norwegian>
                                                                        <polish>
                                                                            <![CDATA[Cześć]]>
</polish>
                                                                        <brazilian>
                                                                            <![CDATA[Olá]]>
</brazilian>
                                                                        <portuguese>
                                                                            <![CDATA[Olá]]>
</portuguese>
                                                                        <russian>
                                                                            <![CDATA[Привет]]>
</russian>
                                                                        <swedish>
                                                                            <![CDATA[Hallå]]>
</swedish>
                                                                        <turkish>
                                                                            <![CDATA[Merhaba]]>
</turkish>
                                                                        <chinese>
                                                                            <![CDATA[]]>
</chinese>
                                                                        <language>-1</language>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                    <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                </Box>
                                                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                                <Resource name="Speech" type="Lock" timeout="0" />
                                            </Box>
                                            <Box name="Goto (name) (8)" id="12" localization="8" tooltip="Jump to the frame name set in parameters." x="969" y="940">
                                                <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onInput_onGo(self):
        self.getParentTimeline().goTo(self.getParameter("Frame name"))]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onGo" type="1" type_size="1" nature="1" inner="0" tooltip="Parent timeline gotoTimeline when a signal is received on this input." id="2" />
                                                <Parameter name="Frame name" inherits_from_parent="0" content_type="3" value="python" default_value="" custom_choice="0" tooltip="Name of the frame you want to go to." id="3" />
                                            </Box>
                                            <Box name="Goto (name) (9)" id="13" localization="8" tooltip="Jump to the frame name set in parameters." x="1067" y="872">
                                                <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onInput_onGo(self):
        self.getParentTimeline().goTo(self.getParameter("Frame name"))]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onGo" type="1" type_size="1" nature="1" inner="0" tooltip="Parent timeline gotoTimeline when a signal is received on this input." id="2" />
                                                <Parameter name="Frame name" inherits_from_parent="0" content_type="3" value="lie le texte" default_value="" custom_choice="0" tooltip="Name of the frame you want to go to." id="3" />
                                            </Box>
                                            <Box name="Speech Reco. (1)" id="14" localization="8" tooltip="Recognize a word from a list of words set in the box parameters.&#x0A;&#x0A;V1.1.0&#x0A;" x="977" y="63">
                                                <bitmap>media/images/box/interaction/ear.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        try:
            self.asr = ALProxy("ALSpeechRecognition")
        except Exception as e:
            self.asr = None
            self.logger.error(e)
        self.memory = ALProxy("ALMemory")

    def onLoad(self):
        from threading import Lock
        self.bIsRunning = False
        self.mutex = Lock()
        self.hasPushed = False
        self.hasSubscribed = False
        self.BIND_PYTHON(self.getName(), "onWordRecognized")

    def onUnload(self):
        from threading import Lock
        self.mutex.acquire()
        try:
            if (self.bIsRunning):
                if (self.hasSubscribed):
                    self.memory.unsubscribeToEvent("WordRecognized", self.getName())
                if (self.hasPushed and self.asr):
                    self.asr.popContexts()
        except RuntimeError, e:
            self.mutex.release()
            raise e
        self.bIsRunning = False;
        self.mutex.release()

    def onInput_onStart(self, p):
        from threading import Lock
        self.mutex.acquire()

        #self.log(self.getParameter("Word list"))

        if(self.bIsRunning):
            self.mutex.release()
            return
        self.bIsRunning = True
        try:
            if self.asr:
                self.asr.setVisualExpression(self.getParameter("Visual expression"))
                self.asr.pushContexts()
            self.hasPushed = True
            if self.asr:
                self.asr.setVocabulary( p.split(';'), self.getParameter("Enable word spotting") )
            self.memory.subscribeToEvent("WordRecognized", self.getName(), "onWordRecognized")
            self.hasSubscribed = True
        except RuntimeError, e:
            self.mutex.release()
            self.onUnload()
            raise e
        self.mutex.release()

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()

    def onWordRecognized(self, key, value, message):
        if(len(value) > 1 and value[1] >= self.getParameter("Confidence threshold (%)")/100.):
            self.wordRecognized(value[0]) #~ activate output of the box
        else:
            self.onNothing()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Output name="wordRecognized" type="3" type_size="1" nature="2" inner="0" tooltip="Word recognized with a confidence higher than the threshold set in the box parameters." id="5" />
                                                <Output name="onNothing" type="1" type_size="1" nature="2" inner="0" tooltip="Nothing has been understood." id="6" />
                                                <Parameter name="Word list" inherits_from_parent="0" content_type="3" value="" default_value="yes;no" custom_choice="0" tooltip="Try to recognize a word from a list of words set in the box parameters." id="7" />
                                                <Parameter name="Confidence threshold (%)" inherits_from_parent="0" content_type="1" value="44" default_value="30" min="0" max="100" tooltip="If the confidence associated with the word recognized is below this threshold, the robot will consider that it is not recognized." id="8" />
                                                <Parameter name="Visual expression" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="Use the LEDs to show feedbacks from the robot during the recognition.&#x0A;&#x0A;For example:&#x0A;- Eyes leds get blue and turn when the speech recognition is launched.&#x0A;- They get yellow when the robot hears someone talking and analyses what it heard.&#x0A;- They flash in green when the robot understood and flash in red otherwise." id="9" />
                                                <Parameter name="Enable word spotting" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="If this option is not activated the robot will only understand exact expressions. If it is, he will spot the exact expressions even in the middle of a sentence.&#x0A;&#x0A;!!Warning!! This option is only available with the speech recognition module using Nuance (ie in Atom version of the robot)." id="10" />
                                                <Resource name="Speech recognition" type="Lock" timeout="0" />
                                            </Box>
                                            <Box name="liste de mot" id="15" localization="8" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="639" y="66">
                                                <bitmap>media/images/box/folder.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.framemanager = ALProxy("ALFrameManager")

    def onInput_onStart(self):
        self.onStopped(self.framemanager.getBehaviorPath(self.behaviorId) + self.getParameter("File name"))]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" />
                                                <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" />
                                                <Parameter name="File name" inherits_from_parent="1" content_type="4" value="/../Liste mot.txt" default_value="" tooltip="Name of the file which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" />
                                            </Box>
                                            <Box name="envois liste de mot" id="16" localization="8" tooltip="" x="784" y="63">
                                                <bitmap>media/images/box/box-python-script.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        pass


    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, p):
        filin = open(p, "r")
        res = ''
        lignes = filin.readlines()

        filin.close()
        for i in range(len(lignes)):
            res = res + lignes[i] + ';'
        self.log(res)
        self.sortie(res)
        pass

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="sortie" type="3" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                            </Box>
                                            <Box name="Fichier texte" id="19" localization="8" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="1154" y="0">
                                                <bitmap>media/images/box/folder.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.framemanager = ALProxy("ALFrameManager")

    def onInput_onStart(self):
        self.onStopped(self.framemanager.getBehaviorPath(self.behaviorId) + self.getParameter("File name"))]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" />
                                                <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" />
                                                <Parameter name="File name" inherits_from_parent="1" content_type="4" value="/../mot reconu.txt" default_value="" tooltip="Name of the file which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" />
                                            </Box>
                                            <Box name="Tactile Head" id="18" localization="8" tooltip="Detect touch on head tactile sensor." x="737" y="192">
                                                <bitmap>media/images/box/sensors/tactileHead.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
            self.onStopped() #~ activate output of the box
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Input name="FrontTactilTouched" type="0" type_size="1" nature="4" stm_value_name="FrontTactilTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="4" />
                                                <Input name="MiddleTactilTouched" type="0" type_size="1" nature="4" stm_value_name="MiddleTactilTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="5" />
                                                <Input name="RearTactilTouched" type="0" type_size="1" nature="4" stm_value_name="RearTactilTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="6" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is stopped." id="7" />
                                                <Output name="frontTouched" type="1" type_size="1" nature="2" inner="0" tooltip="The front tactile head sensor was touched." id="8" />
                                                <Output name="middleTouched" type="1" type_size="1" nature="2" inner="0" tooltip="The middle tactile head sensor was touched." id="9" />
                                                <Output name="rearTouched" type="1" type_size="1" nature="2" inner="0" tooltip="The rear tactile head sensor was touched." id="10" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram>
                                                                <Box name="If &gt; 0" id="1" localization="8" tooltip="Transmit only if value is &gt; 0." x="260" y="17">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(p > 0):
            self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                </Box>
                                                                <Box name="If &gt; 0" id="2" localization="8" tooltip="Transmit only if value is &gt; 0." x="256" y="119">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(p > 0):
            self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                </Box>
                                                                <Box name="If &gt; 0" id="3" localization="8" tooltip="Transmit only if value is &gt; 0." x="261" y="223">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(p > 0):
            self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="4" />
                                                                <Link inputowner="0" indexofinput="8" outputowner="1" indexofoutput="4" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="5" />
                                                                <Link inputowner="0" indexofinput="9" outputowner="2" indexofoutput="4" />
                                                                <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="6" />
                                                                <Link inputowner="0" indexofinput="10" outputowner="3" indexofoutput="4" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                                <Resource name="Head-sequence" type="Lock" timeout="0" />
                                            </Box>
                                            <Box name="ecrit dans ficher text" id="17" localization="8" tooltip="" x="1340" y="41">
                                                <bitmap>media/images/box/box-python-script.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tab = [False]*2


    def onUnload(self):
        #put clean-up code here
        pass

    def onStart(self, nInput, p):
        self.tab[nInput] = p
        if( self.tab[0] != False and self.tab[1] != False):
            tab = self.tab
            self.log(tab)
            filout = open(tab[0], "a")
            filout.write(tab[1])
            self.log(tab[1])
            filout.close()
            self.tab = [False]*2
            self.output()

    def onInput_fichier(self, p):
        self.onStart(0, p)

    def onInput_mot(self, p):
        self.onStart(1, p)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="fichier" type="3" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="mot" type="3" type_size="1" nature="1" inner="0" tooltip="" id="3" />
                                                <Output name="output" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                            </Box>
                                            <Box name="Say Text" id="21" localization="8" tooltip="Say the text received on its input." x="1379" y="184">
                                                <bitmap>media/images/box/interaction/say.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                <Resource name="Speech" type="Lock" timeout="0" />
                                            </Box>
                                            <Box name="lie texte" id="22" localization="8" tooltip="" x="1191" y="185">
                                                <bitmap>media/images/box/box-python-script.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        pass


    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, p):
        filin = open(p, "r")
        res = ''
        lignes = filin.readlines()

        filin.close()
        for i in range(len(lignes)):
            res = res + lignes[i]
        self.log(res)
        self.sortie(res)
        pass

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="sortie" type="3" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                            </Box>
                                            <Box name="Get Attached File (3)" id="24" localization="8" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="768" y="394">
                                                <bitmap>media/images/box/folder.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.framemanager = ALProxy("ALFrameManager")

    def onInput_onStart(self):
        self.onStopped(self.framemanager.getBehaviorPath(self.behaviorId) + self.getParameter("File name"))]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" />
                                                <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" />
                                                <Parameter name="File name" inherits_from_parent="1" content_type="4" value="/../reponce.txt" default_value="" tooltip="Name of the file which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" />
                                            </Box>
                                            <Box name="Number Edit" id="25" localization="8" tooltip="Send the number you entered when the input is stimulated." plugin="numberedit_plugin" x="800" y="544">
                                                <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped(40)]]>
</content>
                                                </script>
                                                <pluginContent>
                                                    <number>40</number>
                                                </pluginContent>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the number on the output." id="2" />
                                                <Output name="onStopped" type="2" type_size="1" nature="2" inner="0" tooltip="The number you entered." id="3" />
                                            </Box>
                                            <Box name="lie une ligne precice" id="20" localization="8" tooltip="" x="968" y="407">
                                                <bitmap>media/images/box/box-python-script.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.tab = [False]*2


    def onUnload(self):
        #put clean-up code here
        pass

    def onStart(self, nInput, p):
        self.tab[nInput] = p
        if( self.tab[0] != False and self.tab[1]     != False):
            tab = self.tab
            filin = open(tab[0], "r")
            res = ''
            lignes = filin.readlines()[tab[1]]
            filin.close()
            self.tab = [False]*2
            self.log(lignes)
            self.sortie(lignes)

    def onInput_fichier(self, p):
        self.onStart(0, p)

    def onInput_numLigne(self, p):
        self.onStart(1, p)

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="fichier" type="3" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="numLigne" type="2" type_size="1" nature="1" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="sortie" type="3" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                            </Box>
                                            <Box name="Speech Reco. (2)" id="26" localization="8" tooltip="Recognize a word from a list of words set in the box parameters.&#x0A;&#x0A;V1.1.0&#x0A;" x="642" y="475">
                                                <bitmap>media/images/box/interaction/ear.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        try:
            self.asr = ALProxy("ALSpeechRecognition")
        except Exception as e:
            self.asr = None
            self.logger.error(e)
        self.memory = ALProxy("ALMemory")

    def onLoad(self):
        from threading import Lock
        self.bIsRunning = False
        self.mutex = Lock()
        self.hasPushed = False
        self.hasSubscribed = False
        self.BIND_PYTHON(self.getName(), "onWordRecognized")

    def onUnload(self):
        from threading import Lock
        self.mutex.acquire()
        try:
            if (self.bIsRunning):
                if (self.hasSubscribed):
                    self.memory.unsubscribeToEvent("WordRecognized", self.getName())
                if (self.hasPushed and self.asr):
                    self.asr.popContexts()
        except RuntimeError, e:
            self.mutex.release()
            raise e
        self.bIsRunning = False;
        self.mutex.release()

    def onInput_onStart(self, p):
        from threading import Lock
        self.mutex.acquire()

        #self.log(self.getParameter("Word list"))

        if(self.bIsRunning):
            self.mutex.release()
            return
        self.bIsRunning = True
        try:
            if self.asr:
                self.asr.setVisualExpression(self.getParameter("Visual expression"))
                self.asr.pushContexts()
            self.hasPushed = True
            if self.asr:
                self.asr.setVocabulary( p.split(';'), self.getParameter("Enable word spotting") )
            self.memory.subscribeToEvent("WordRecognized", self.getName(), "onWordRecognized")
            self.hasSubscribed = True
        except RuntimeError, e:
            self.mutex.release()
            self.onUnload()
            raise e
        self.mutex.release()

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()

    def onWordRecognized(self, key, value, message):
        if(len(value) > 1 and value[1] >= self.getParameter("Confidence threshold (%)")/100.):
            self.wordRecognized(int(value[0])) #~ activate output of the box
        else:
            self.onNothing()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Output name="wordRecognized" type="2" type_size="1" nature="2" inner="0" tooltip="Word recognized with a confidence higher than the threshold set in the box parameters." id="5" />
                                                <Output name="onNothing" type="1" type_size="1" nature="2" inner="0" tooltip="Nothing has been understood." id="6" />
                                                <Parameter name="Word list" inherits_from_parent="0" content_type="3" value="" default_value="yes;no" custom_choice="0" tooltip="Try to recognize a word from a list of words set in the box parameters." id="7" />
                                                <Parameter name="Confidence threshold (%)" inherits_from_parent="0" content_type="1" value="44" default_value="30" min="0" max="100" tooltip="If the confidence associated with the word recognized is below this threshold, the robot will consider that it is not recognized." id="8" />
                                                <Parameter name="Visual expression" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="Use the LEDs to show feedbacks from the robot during the recognition.&#x0A;&#x0A;For example:&#x0A;- Eyes leds get blue and turn when the speech recognition is launched.&#x0A;- They get yellow when the robot hears someone talking and analyses what it heard.&#x0A;- They flash in green when the robot understood and flash in red otherwise." id="9" />
                                                <Parameter name="Enable word spotting" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="If this option is not activated the robot will only understand exact expressions. If it is, he will spot the exact expressions even in the middle of a sentence.&#x0A;&#x0A;!!Warning!! This option is only available with the speech recognition module using Nuance (ie in Atom version of the robot)." id="10" />
                                                <Resource name="Speech recognition" type="Lock" timeout="0" />
                                            </Box>
                                            <Box name="envois text (1)" id="27" localization="8" tooltip="" x="488" y="463">
                                                <bitmap>media/images/box/box-python-script.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        pass


    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, p):
        filin = open(p, "r")
        res = ''
        lignes = filin.readlines()

        filin.close()
        for i in range(len(lignes)):
            res = res + lignes[i] + ';'
        self.log(res)
        self.sortie(res)
        pass

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="sortie" type="3" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                            </Box>
                                            <Box name="Get Attached File (4)" id="28" localization="8" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="305" y="442">
                                                <bitmap>media/images/box/folder.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.framemanager = ALProxy("ALFrameManager")

    def onInput_onStart(self):
        self.onStopped(self.framemanager.getBehaviorPath(self.behaviorId) + self.getParameter("File name"))]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" />
                                                <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" />
                                                <Parameter name="File name" inherits_from_parent="1" content_type="4" value="/../nombre.txt" default_value="" tooltip="Name of the file which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" />
                                            </Box>
                                            <Box name="Say Text (1)" id="29" localization="8" tooltip="Say the text received on its input." x="1231" y="463">
                                                <bitmap>media/images/box/interaction/say.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                <Resource name="Speech" type="Lock" timeout="0" />
                                            </Box>
                                            <Box name="fichier texte" id="23" localization="8" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="1013" y="183">
                                                <bitmap>media/images/box/folder.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.framemanager = ALProxy("ALFrameManager")

    def onInput_onStart(self):
        self.onStopped(self.framemanager.getBehaviorPath(self.behaviorId) + self.getParameter("File name"))]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" />
                                                <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" />
                                                <Parameter name="File name" inherits_from_parent="1" content_type="4" value="/../mot reconu.txt" default_value="" tooltip="Name of the file which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" />
                                            </Box>
                                            <Box name="Lire une ligne d&apos;un texte" id="30" localization="8" tooltip="" x="86" y="354">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram>
                                                                <Box name="Get Attached File" id="24" localization="8" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="802" y="154">
                                                                    <bitmap>media/images/box/folder.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.framemanager = ALProxy("ALFrameManager")

    def onInput_onStart(self):
        self.onStopped(self.framemanager.getBehaviorPath(self.behaviorId) + self.getParameter("File name"))]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" />
                                                                    <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" />
                                                                    <Parameter name="File name" inherits_from_parent="1" content_type="4" value="/../reponce.txt" default_value="" tooltip="Name of the file which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" />
                                                                </Box>
                                                                <Box name="Number Edit" id="25" localization="8" tooltip="Send the number you entered when the input is stimulated." plugin="numberedit_plugin" x="833" y="331">
                                                                    <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped(40)]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <number>40</number>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the number on the output." id="2" />
                                                                    <Output name="onStopped" type="2" type_size="1" nature="2" inner="0" tooltip="The number you entered." id="3" />
                                                                </Box>
                                                                <Box name="lie une ligne precice" id="20" localization="8" tooltip="" x="1002" y="167">
                                                                    <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.tab = [False]*2


    def onUnload(self):
        #put clean-up code here
        pass

    def onStart(self, nInput, p):
        self.tab[nInput] = p
        if( self.tab[0] != False and self.tab[1]     != False):
            tab = self.tab
            filin = open(tab[0], "r")
            res = ''
            lignes = filin.readlines()[tab[1]]
            filin.close()
            self.tab = [False]*2
            self.log(lignes)
            self.sortie(lignes)

    def onInput_fichier(self, p):
        self.onStart(0, p)

    def onInput_numLigne(self, p):
        self.onStart(1, p)

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="fichier" type="3" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="numLigne" type="2" type_size="1" nature="1" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="sortie" type="3" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                                                </Box>
                                                                <Box name="Speech Reco." id="26" localization="8" tooltip="Recognize a word from a list of words set in the box parameters.&#x0A;&#x0A;V1.1.0&#x0A;" x="676" y="235">
                                                                    <bitmap>media/images/box/interaction/ear.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        try:
            self.asr = ALProxy("ALSpeechRecognition")
        except Exception as e:
            self.asr = None
            self.logger.error(e)
        self.memory = ALProxy("ALMemory")

    def onLoad(self):
        from threading import Lock
        self.bIsRunning = False
        self.mutex = Lock()
        self.hasPushed = False
        self.hasSubscribed = False
        self.BIND_PYTHON(self.getName(), "onWordRecognized")

    def onUnload(self):
        from threading import Lock
        self.mutex.acquire()
        try:
            if (self.bIsRunning):
                if (self.hasSubscribed):
                    self.memory.unsubscribeToEvent("WordRecognized", self.getName())
                if (self.hasPushed and self.asr):
                    self.asr.popContexts()
        except RuntimeError, e:
            self.mutex.release()
            raise e
        self.bIsRunning = False;
        self.mutex.release()

    def onInput_onStart(self, p):
        from threading import Lock
        self.mutex.acquire()

        #self.log(self.getParameter("Word list"))

        if(self.bIsRunning):
            self.mutex.release()
            return
        self.bIsRunning = True
        try:
            if self.asr:
                self.asr.setVisualExpression(self.getParameter("Visual expression"))
                self.asr.pushContexts()
            self.hasPushed = True
            if self.asr:
                self.asr.setVocabulary( p.split(';'), self.getParameter("Enable word spotting") )
            self.memory.subscribeToEvent("WordRecognized", self.getName(), "onWordRecognized")
            self.hasSubscribed = True
        except RuntimeError, e:
            self.mutex.release()
            self.onUnload()
            raise e
        self.mutex.release()

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()

    def onWordRecognized(self, key, value, message):
        if(len(value) > 1 and value[1] >= self.getParameter("Confidence threshold (%)")/100.):
            self.wordRecognized(int(value[0])) #~ activate output of the box
        else:
            self.onNothing()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                    <Output name="wordRecognized" type="2" type_size="1" nature="2" inner="0" tooltip="Word recognized with a confidence higher than the threshold set in the box parameters." id="5" />
                                                                    <Output name="onNothing" type="1" type_size="1" nature="2" inner="0" tooltip="Nothing has been understood." id="6" />
                                                                    <Parameter name="Word list" inherits_from_parent="0" content_type="3" value="" default_value="yes;no" custom_choice="0" tooltip="Try to recognize a word from a list of words set in the box parameters." id="7" />
                                                                    <Parameter name="Confidence threshold (%)" inherits_from_parent="0" content_type="1" value="44" default_value="30" min="0" max="100" tooltip="If the confidence associated with the word recognized is below this threshold, the robot will consider that it is not recognized." id="8" />
                                                                    <Parameter name="Visual expression" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="Use the LEDs to show feedbacks from the robot during the recognition.&#x0A;&#x0A;For example:&#x0A;- Eyes leds get blue and turn when the speech recognition is launched.&#x0A;- They get yellow when the robot hears someone talking and analyses what it heard.&#x0A;- They flash in green when the robot understood and flash in red otherwise." id="9" />
                                                                    <Parameter name="Enable word spotting" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="If this option is not activated the robot will only understand exact expressions. If it is, he will spot the exact expressions even in the middle of a sentence.&#x0A;&#x0A;!!Warning!! This option is only available with the speech recognition module using Nuance (ie in Atom version of the robot)." id="10" />
                                                                    <Resource name="Speech recognition" type="Lock" timeout="0" />
                                                                </Box>
                                                                <Box name="envois text" id="27" localization="8" tooltip="" x="522" y="223">
                                                                    <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        pass


    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, p):
        filin = open(p, "r")
        res = ''
        lignes = filin.readlines()

        filin.close()
        for i in range(len(lignes)):
            res = res + lignes[i] + ';'
        self.log(res)
        self.sortie(res)
        pass

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="sortie" type="3" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                                                </Box>
                                                                <Box name="Get Attached File (1)" id="28" localization="8" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="342" y="240">
                                                                    <bitmap>media/images/box/folder.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.framemanager = ALProxy("ALFrameManager")

    def onInput_onStart(self):
        self.onStopped(self.framemanager.getBehaviorPath(self.behaviorId) + self.getParameter("File name"))]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" />
                                                                    <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" />
                                                                    <Parameter name="File name" inherits_from_parent="1" content_type="4" value="/../nombre.txt" default_value="" tooltip="Name of the file which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" />
                                                                </Box>
                                                                <Box name="Say Text" id="29" localization="8" tooltip="Say the text received on its input." x="1265" y="223">
                                                                    <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                                    <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                                    <Resource name="Speech" type="Lock" timeout="0" />
                                                                </Box>
                                                                <Link inputowner="20" indexofinput="2" outputowner="24" indexofoutput="3" />
                                                                <Link inputowner="20" indexofinput="3" outputowner="25" indexofoutput="3" />
                                                                <Link inputowner="26" indexofinput="2" outputowner="27" indexofoutput="4" />
                                                                <Link inputowner="27" indexofinput="2" outputowner="28" indexofoutput="3" />
                                                                <Link inputowner="20" indexofinput="3" outputowner="26" indexofoutput="5" />
                                                                <Link inputowner="28" indexofinput="2" outputowner="26" indexofoutput="6" />
                                                                <Link inputowner="29" indexofinput="2" outputowner="20" indexofoutput="4" />
                                                                <Link inputowner="24" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="25" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                            </Box>
                                            <Box name="liste de mot (1)" id="32" localization="8" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="50" y="190">
                                                <bitmap>media/images/box/folder.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.framemanager = ALProxy("ALFrameManager")

    def onInput_onStart(self):
        self.onStopped(self.framemanager.getBehaviorPath(self.behaviorId) + self.getParameter("File name"))]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" />
                                                <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" />
                                                <Parameter name="File name" inherits_from_parent="1" content_type="4" value="/../Liste mot.txt" default_value="" tooltip="Name of the file which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" />
                                            </Box>
                                            <Box name="envois liste de mot (1)" id="33" localization="8" tooltip="" x="195" y="187">
                                                <bitmap>media/images/box/box-python-script.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        pass


    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, p):
        filin = open(p, "r")
        res = ''
        lignes = filin.readlines()

        filin.close()
        for i in range(len(lignes)):
            res = res + lignes[i] + ';'
        self.log(res)
        self.sortie(res)
        pass

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="sortie" type="3" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="3" outputowner="1" indexofoutput="5" />
                                            <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="5" />
                                            <Link inputowner="4" indexofinput="2" outputowner="3" indexofoutput="4" />
                                            <Link inputowner="8" indexofinput="2" outputowner="3" indexofoutput="6" />
                                            <Link inputowner="10" indexofinput="2" outputowner="3" indexofoutput="7" />
                                            <Link inputowner="6" indexofinput="2" outputowner="3" indexofoutput="5" />
                                            <Link inputowner="11" indexofinput="2" outputowner="6" indexofoutput="4" />
                                            <Link inputowner="12" indexofinput="2" outputowner="3" indexofoutput="10" />
                                            <Link inputowner="13" indexofinput="2" outputowner="3" indexofoutput="9" />
                                            <Link inputowner="16" indexofinput="2" outputowner="15" indexofoutput="3" />
                                            <Link inputowner="14" indexofinput="2" outputowner="16" indexofoutput="4" />
                                            <Link inputowner="14" indexofinput="2" outputowner="14" indexofoutput="5" />
                                            <Link inputowner="14" indexofinput="3" outputowner="18" indexofoutput="8" />
                                            <Link inputowner="17" indexofinput="2" outputowner="19" indexofoutput="3" />
                                            <Link inputowner="21" indexofinput="2" outputowner="22" indexofoutput="4" />
                                            <Link inputowner="19" indexofinput="2" outputowner="14" indexofoutput="5" />
                                            <Link inputowner="17" indexofinput="3" outputowner="14" indexofoutput="5" />
                                            <Link inputowner="7" indexofinput="2" outputowner="3" indexofoutput="8" />
                                            <Link inputowner="20" indexofinput="2" outputowner="24" indexofoutput="3" />
                                            <Link inputowner="20" indexofinput="3" outputowner="25" indexofoutput="3" />
                                            <Link inputowner="26" indexofinput="2" outputowner="27" indexofoutput="4" />
                                            <Link inputowner="27" indexofinput="2" outputowner="28" indexofoutput="3" />
                                            <Link inputowner="20" indexofinput="3" outputowner="26" indexofoutput="5" />
                                            <Link inputowner="28" indexofinput="2" outputowner="26" indexofoutput="6" />
                                            <Link inputowner="29" indexofinput="2" outputowner="20" indexofoutput="4" />
                                            <Link inputowner="22" indexofinput="2" outputowner="23" indexofoutput="3" />
                                            <Link inputowner="23" indexofinput="2" outputowner="18" indexofoutput="8" />
                                            <Link inputowner="33" indexofinput="2" outputowner="32" indexofoutput="3" />
                                            <Link inputowner="9" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="salut" index="25">
                                        <Diagram>
                                            <Box name="Goto (name)" id="2" localization="8" tooltip="Jump to the frame name set in parameters." x="541" y="61">
                                                <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onInput_onGo(self):
        self.getParentTimeline().goTo(self.getParameter("Frame name"))]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onGo" type="1" type_size="1" nature="1" inner="0" tooltip="Parent timeline gotoTimeline when a signal is received on this input." id="2" />
                                                <Parameter name="Frame name" inherits_from_parent="0" content_type="3" value="menu" default_value="" custom_choice="0" tooltip="Name of the frame you want to go to." id="3" />
                                            </Box>
                                            <Box name="Say" id="4" localization="8" tooltip="Say some text. Note that you must open the box to enter the text." x="231" y="199">
                                                <bitmap>media/images/box/interaction/say.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                                                <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram>
                                                                <Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65">
                                                                    <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                                    <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                                </Box>
                                                                <Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68">
                                                                    <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Arabic" : "  ",
			"Czech" : " Ahoj ",
			"Danish" : " Hej ",
			"German" : " Hallo ",
			"Greek" : "  ",
			"English" : " Hello ",
			"Spanish" : " Hola ",
			"Finnish" : " Hei ",
			"French" : " salut, moi je suis nao et je suis la pour aider le groupe d\'app robot. ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Dutch" : " Hallo ",
			"Norwegian" : "  ",
			"Polish" : " Cześć ",
			"Brazilian" : " Olá ",
			"Portuguese" : " Olá ",
			"Russian" : " Привет ",
			"Swedish" : " Hallå ",
			"Turkish" : " Merhaba ",
			"Chinese" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <arabic>
                                                                            <![CDATA[]]>
</arabic>
                                                                        <czech>
                                                                            <![CDATA[Ahoj]]>
</czech>
                                                                        <danish>
                                                                            <![CDATA[Hej]]>
</danish>
                                                                        <german>
                                                                            <![CDATA[Hallo]]>
</german>
                                                                        <greek>
                                                                            <![CDATA[]]>
</greek>
                                                                        <english>
                                                                            <![CDATA[Hello]]>
</english>
                                                                        <spanish>
                                                                            <![CDATA[Hola]]>
</spanish>
                                                                        <finnish>
                                                                            <![CDATA[Hei]]>
</finnish>
                                                                        <french>
                                                                            <![CDATA[salut, moi je suis nao et je suis la pour aider le groupe d'app robot.]]>
</french>
                                                                        <italian>
                                                                            <![CDATA[Ciao]]>
</italian>
                                                                        <japanese>
                                                                            <![CDATA[こんにちは]]>
</japanese>
                                                                        <korean>
                                                                            <![CDATA[안녕하세요]]>
</korean>
                                                                        <dutch>
                                                                            <![CDATA[Hallo]]>
</dutch>
                                                                        <norwegian>
                                                                            <![CDATA[]]>
</norwegian>
                                                                        <polish>
                                                                            <![CDATA[Cześć]]>
</polish>
                                                                        <brazilian>
                                                                            <![CDATA[Olá]]>
</brazilian>
                                                                        <portuguese>
                                                                            <![CDATA[Olá]]>
</portuguese>
                                                                        <russian>
                                                                            <![CDATA[Привет]]>
</russian>
                                                                        <swedish>
                                                                            <![CDATA[Hallå]]>
</swedish>
                                                                        <turkish>
                                                                            <![CDATA[Merhaba]]>
</turkish>
                                                                        <chinese>
                                                                            <![CDATA[]]>
</chinese>
                                                                        <language>-1</language>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                    <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                </Box>
                                                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                                <Resource name="Speech" type="Lock" timeout="0" />
                                            </Box>
                                            <Box name="Hello" id="10" localization="8" tooltip="Simple hello animation.&#x0A;&#x0A;!!Warning!! There is no speech in this box. It is a just an animation box with some&#x0A;leds animation." x="237" y="100">
                                                <bitmap>media/images/box/movement/move.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="115">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="FaceLeds" index="1">
                                                            <Diagram>
                                                                <Box name="Light_AskForAttentionEyes" id="1" localization="8" tooltip="Set an animated gaze which calls for attention (purple eyes).&#x0A;&#x0A;Note: It is a never ending box. You must call onStop to stop it.&#x0A;&#x0A;*** state: 5a_release ***&#x0A;*** ref box in: 5a_release\Leds\Light_AskForAttentionEyes\Light_AskForAttentionEyes.xar ***&#x0A;*** last modification date(svn): Version it! ***" x="281" y="144">
                                                                    <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self, False)

  def onLoad(self):
    self.bIsRunning = False;
    self.leds = ALProxy("ALLeds")

  def onUnload(self):
    self.onInput_onStop(); # will stop current loop execution

  def onInput_onStart(self):
    #self.logger.info( self.getName() + ": start - begin" );

    if( self.bIsRunning ):
      #print( self.getName() + ": already started => nothing" );
      return;

    self.bIsRunning = True;
    self.bMustStop = False;

    rDuration = 0.2;
    self.leds.post.fadeRGB( "FaceLedsTop", 0xff00ff, rDuration );
    self.leds.post.fadeRGB( "FaceLedsInternal", 0xff00ff, rDuration );
    self.leds.post.fadeRGB( "FaceLedsBottom", 0xff00ff, rDuration );
    self.leds.fadeRGB( "FaceLedsExternal", 0xff00ff, rDuration );

    while( not self.bMustStop ):
      rTime = 0.1;
      self.leds.post.fadeRGB( "FaceLedsTop", 0xffffff, rTime );
      self.leds.fadeRGB( "FaceLedsBottom", 0xffffff, rTime );
      if( self.bMustStop ):
        break;
      rTime = 0.3
      self.leds.post.fadeRGB( "FaceLedsTop", 0xff00ff, rTime );
      self.leds.fadeRGB( "FaceLedsBottom", 0xff00ff, rTime );


    # end while
    self.bIsRunning = False;
    self.onStopped();

  def onInput_onStop(self):
    self.bMustStop = True; # will stop current loop execution]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                    <ActuatorList model="Nao">
                                                        <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" unit="-1">
                                                            <Key frame="20" value="-7.73688" />
                                                            <Key frame="39" value="-20.1296" />
                                                            <Key frame="56" value="-23.8211" />
                                                            <Key frame="70" value="-23.9968" />
                                                            <Key frame="87" value="-29.7977" />
                                                            <Key frame="115" value="-21.5359" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="20" value="16.9607" />
                                                            <Key frame="39" value="-9.75839" />
                                                            <Key frame="56" value="-19.5144" />
                                                            <Key frame="70" value="-3.43018" />
                                                            <Key frame="87" value="-11.0768" />
                                                            <Key frame="115" value="-0.617646" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="18" value="64.0707" />
                                                            <Key frame="37" value="53.1721" />
                                                            <Key frame="54" value="53.8752" />
                                                            <Key frame="68" value="49.3927" />
                                                            <Key frame="85" value="51.4143" />
                                                            <Key frame="113" value="48.2502" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="18" value="20.8279" />
                                                            <Key frame="37" value="13.0056" />
                                                            <Key frame="54" value="11.6872" />
                                                            <Key frame="68" value="12.4782" />
                                                            <Key frame="85" value="14.2361" />
                                                            <Key frame="113" value="13.0056" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" unit="-1">
                                                            <Key frame="18" value="-46.0577" />
                                                            <Key frame="37" value="-39.6416" />
                                                            <Key frame="54" value="-38.9384" />
                                                            <Key frame="68" value="-34.9833" />
                                                            <Key frame="85" value="-43.1572" />
                                                            <Key frame="113" value="-38.4111" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="18" value="-79.0123" />
                                                            <Key frame="37" value="-73.9145" />
                                                            <Key frame="54" value="-67.7621" />
                                                            <Key frame="68" value="-71.5415" />
                                                            <Key frame="85" value="-75.5845" />
                                                            <Key frame="113" value="-67.85" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" unit="-1">
                                                            <Key frame="37" value="8.4352" />
                                                            <Key frame="113" value="6.85315" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" unit="-1">
                                                            <Key frame="37" value="0.238207" />
                                                            <Key frame="113" value="0.240025" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="16" value="14.153" />
                                                            <Key frame="35" value="-67.1469" />
                                                            <Key frame="52" value="-62.4007" />
                                                            <Key frame="66" value="-72.2446" />
                                                            <Key frame="83" value="-65.8285" />
                                                            <Key frame="111" value="58.4504" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="16" value="-13.8893" />
                                                            <Key frame="35" value="-54.6711" />
                                                            <Key frame="52" value="-26.3699" />
                                                            <Key frame="66" value="-55.0226" />
                                                            <Key frame="83" value="-18.8112" />
                                                            <Key frame="111" value="-14.3288" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" unit="-1">
                                                            <Key frame="16" value="-17.9323" />
                                                            <Key frame="35" value="32.3418" />
                                                            <Key frame="52" value="22.41" />
                                                            <Key frame="66" value="19.949" />
                                                            <Key frame="83" value="21.8826" />
                                                            <Key frame="93" value="56" />
                                                            <Key frame="111" value="47.3712" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="16" value="79.3686" />
                                                            <Key frame="35" value="13.8893" />
                                                            <Key frame="42" value="20" />
                                                            <Key frame="52" value="53.5285" />
                                                            <Key frame="60" value="39" />
                                                            <Key frame="66" value="11" />
                                                            <Key frame="76" value="15" />
                                                            <Key frame="83" value="40.5205" />
                                                            <Key frame="93" value="58.4" />
                                                            <Key frame="111" value="72.5131" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" unit="-1">
                                                            <Key frame="35" value="-17.9323" />
                                                            <Key frame="83" value="-17.405" />
                                                            <Key frame="111" value="10.4567" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" unit="-1">
                                                            <Key frame="35" value="0.853478" />
                                                            <Key frame="83" value="0.854933" />
                                                            <Key frame="111" value="0.425116" />
                                                        </ActuatorCurve>
                                                    </ActuatorList>
                                                </Timeline>
                                                <Resource name="Head" type="Lock" timeout="0" />
                                                <Resource name="Arms" type="Lock" timeout="0" />
                                                <Resource name="Left eye leds" type="Lock" timeout="0" />
                                                <Resource name="Right eye leds" type="Lock" timeout="0" />
                                            </Box>
                                            <Link inputowner="10" indexofinput="2" outputowner="0" indexofoutput="1" />
                                            <Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="1" />
                                            <Link inputowner="2" indexofinput="2" outputowner="10" indexofoutput="4" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="debout" index="34">
                                        <Diagram>
                                            <Box name="Stand Up" id="8" localization="8" tooltip="the robot tries to stand up from any position for a number of tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." x="150" y="13">
                                                <bitmap>media/images/box/movement/stand.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated when the robot succeed in standing up." id="4" />
                                                <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot failed to stand up after n tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." id="5" />
                                                <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of stand up before stimulating the failure output." id="6" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="StandUpBehavior">
                                                        <BehaviorKeyframe name="DetectRobotPose" index="1">
                                                            <Diagram>
                                                                <Box name="Goto Posture" id="2" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="331" y="92">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nTries = 0
        self.postureProxy = ALProxy("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureProxy.stopMove()

    def onInput_onStart(self):
        if(self.nTries != self.getParameter("Maximum of tries")):
            self.nTries = self.getParameter("Maximum of tries")
            self.postureProxy.setMaxTryNumber(self.nTries)

        result = self.postureProxy.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                                                    <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                                                    <Parameter name="Name" inherits_from_parent="0" content_type="3" value="Stand" default_value="Stand" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                                                        <Choice value="Crouch" />
                                                                        <Choice value="LyingBack" />
                                                                        <Choice value="LyingBelly" />
                                                                        <Choice value="Sit" />
                                                                        <Choice value="SitRelax" />
                                                                        <Choice value="StandInit" />
                                                                        <Choice value="Stand" />
                                                                        <Choice value="StandZero" />
                                                                    </Parameter>
                                                                    <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="80" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                                                                    <Parameter name="Maximum of tries" inherits_from_parent="1" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of go to posture before stimulating the failure output." id="8" />
                                                                    <Resource name="All motors" type="Lock" timeout="0" />
                                                                    <Resource name="Stiffness" type="Lock" timeout="0" />
                                                                </Box>
                                                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                <Link inputowner="0" indexofinput="5" outputowner="2" indexofoutput="5" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                                <Resource name="All motors" type="Lock" timeout="0" />
                                            </Box>
                                            <Box name="Goto (name)" id="2" localization="8" tooltip="Jump to the frame name set in parameters." x="293" y="9">
                                                <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onInput_onGo(self):
        self.getParentTimeline().goTo(self.getParameter("Frame name"))]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onGo" type="1" type_size="1" nature="1" inner="0" tooltip="Parent timeline gotoTimeline when a signal is received on this input." id="2" />
                                                <Parameter name="Frame name" inherits_from_parent="0" content_type="3" value="menu" default_value="" custom_choice="0" tooltip="Name of the frame you want to go to." id="3" />
                                            </Box>
                                            <Link inputowner="8" indexofinput="2" outputowner="0" indexofoutput="1" />
                                            <Link inputowner="2" indexofinput="2" outputowner="8" indexofoutput="4" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="assit" index="40">
                                        <Diagram>
                                            <Box name="Sit Down" id="7" localization="8" tooltip="the robot tries to sit down from any position for a number of tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." x="282" y="17">
                                                <bitmap>media/images/box/movement/sit_ground.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated when the robot succeed in sitting down." id="4" />
                                                <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot failed to sit down after n tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." id="5" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="SitDownBehavior">
                                                        <BehaviorKeyframe name="DetectRobotPose" index="1">
                                                            <Diagram>
                                                                <Box name="Goto Posture" id="7" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="371" y="101">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.postureProxy = ALProxy("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureProxy.stopMove()

    def onInput_onStart(self):
        result = self.postureProxy.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                                                    <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                                                    <Parameter name="Name" inherits_from_parent="0" content_type="3" value="Sit" default_value="Sit" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                                                        <Choice value="Crouch" />
                                                                        <Choice value="LyingBack" />
                                                                        <Choice value="LyingBelly" />
                                                                        <Choice value="Sit" />
                                                                        <Choice value="SitRelax" />
                                                                        <Choice value="StandInit" />
                                                                        <Choice value="Stand" />
                                                                        <Choice value="StandZero" />
                                                                    </Parameter>
                                                                    <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="100" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                                                                    <Resource name="All motors" type="Lock" timeout="0" />
                                                                    <Resource name="Stiffness" type="Lock" timeout="0" />
                                                                </Box>
                                                                <Link inputowner="7" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="0" indexofinput="4" outputowner="7" indexofoutput="4" />
                                                                <Link inputowner="0" indexofinput="5" outputowner="7" indexofoutput="5" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                                <Resource name="All motors" type="Lock" timeout="0" />
                                            </Box>
                                            <Box name="Goto (name)" id="2" localization="8" tooltip="Jump to the frame name set in parameters." x="468" y="0">
                                                <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onInput_onGo(self):
        self.getParentTimeline().goTo(self.getParameter("Frame name"))]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onGo" type="1" type_size="1" nature="1" inner="0" tooltip="Parent timeline gotoTimeline when a signal is received on this input." id="2" />
                                                <Parameter name="Frame name" inherits_from_parent="0" content_type="3" value="menu" default_value="" custom_choice="0" tooltip="Name of the frame you want to go to." id="3" />
                                            </Box>
                                            <Link inputowner="2" indexofinput="2" outputowner="7" indexofoutput="4" />
                                            <Link inputowner="7" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="macarena" index="44">
                                        <Diagram>
                                            <Box name="Play Sound" id="12" localization="8" tooltip="Play a sound file. Select the file in parameters. The format of the file can be wav or ogg (on virtual robot) and also mp3 (on a real robot).&#x0A;&#x0A;Note: There can be some delay to play ogg or mp3 (on a robot) files. We advise you to use wav if&#x0A;you want a fast play of the file." x="480" y="112">
                                                <bitmap>media/images/box/interaction/play_music.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                <Parameter name="File name" inherits_from_parent="0" content_type="4" value="/macare.mp3" default_value="" tooltip="Name of the file you want to play.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="5" />
                                                <Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" />
                                                <Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="60" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" />
                                                <Parameter name="Balance L/R" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" />
                                                <Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram>
                                                                <Box name="Play Sound File" id="2" localization="8" tooltip="Play the sound." x="442" y="70">
                                                                    <bitmap>media/images/box/interaction/play_music.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.player = ALProxy('ALAudioPlayer')
        self.playerStop = ALProxy('ALAudioPlayer', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.post.playFileInLoop(p,self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            else :
               id = self.player.post.playFileFromPosition(p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            self.ids.append(id)
            self.player.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" />
                                                                    <Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" />
                                                                    <Parameter name="Balance L/R" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" />
                                                                    <Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" />
                                                                </Box>
                                                                <Box name="Get Attached File" id="1" localization="8" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="216" y="71">
                                                                    <bitmap>media/images/box/folder.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.framemanager = ALProxy("ALFrameManager")

    def onInput_onStart(self):
        self.onStopped(self.framemanager.getBehaviorPath(self.behaviorId) + self.getParameter("File name"))]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" />
                                                                    <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" />
                                                                    <Parameter name="File name" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Name of the file which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" />
                                                                </Box>
                                                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                                <Resource name="Audio player" type="Lock" timeout="0" />
                                            </Box>
                                            <Box name="Delay" id="14" localization="8" tooltip="Wait a moment before triggering the output. &#x0A;Can be stopped anytime. &#x0A;Multiple inputs will trigger multiple outputs." x="323" y="115">
                                                <bitmap>media/images/box/wait.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.delayed = []

    def onUnload(self):
        self.cancelDelays()

    def cancelDelays(self):
        cancel_list = list(self.delayed)
        for d in cancel_list:
            d.cancel()

    def cleanDelay(self, fut, fut_ref):
        self.delayed.remove(fut)

    def triggerOutput(self):
        self.timerOutput()

    def onInput_onStart(self):
        import qi
        import functools
        delay_future = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))
        # keep the async operation in an array for cancel
        # and remove it when it is finished in the callback
        self.delayed.append(delay_future)
        bound_clean = functools.partial(self.cleanDelay, delay_future)
        delay_future.addCallback(bound_clean)

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.delayed:
            self.timerOutput()
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Delay box with the configured timeout value." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                                                <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once delay set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                                                <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="2.5" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                                                <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently delaying at least one signal and cancelled, output will be stimulated." id="6" />
                                            </Box>
                                            <Box name="chore 2" id="13" localization="8" tooltip="" x="327" y="219">
                                                <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Timeline enable="1" fps="50" start_frame="1" end_frame="615" size="615">
                                                    <ActuatorList model="">
                                                        <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" unit="0">
                                                            <Key frame="13" value="-37.1758" />
                                                            <Key frame="26" value="-37.1758" />
                                                            <Key frame="38" value="-37.1758" />
                                                            <Key frame="51" value="-37.1758" />
                                                            <Key frame="63" value="-37.1758" />
                                                            <Key frame="76" value="-37.1758" />
                                                            <Key frame="88" value="-34.0996" />
                                                            <Key frame="101" value="-29.5292" />
                                                            <Key frame="113" value="-28.6503" />
                                                            <Key frame="126" value="-29.5292" />
                                                            <Key frame="138" value="-29.5292" />
                                                            <Key frame="151" value="-29.2655" />
                                                            <Key frame="163" value="-28.7382" />
                                                            <Key frame="176" value="-27.1561" />
                                                            <Key frame="188" value="-27.1561" />
                                                            <Key frame="201" value="-25.7499" />
                                                            <Key frame="213" value="-25.3983" />
                                                            <Key frame="226" value="-25.5741" />
                                                            <Key frame="238" value="-30.4081" />
                                                            <Key frame="251" value="-44.1192" />
                                                            <Key frame="263" value="-75.9361" />
                                                            <Key frame="276" value="-77.1665" />
                                                            <Key frame="288" value="-77.2544" />
                                                            <Key frame="301" value="-77.4302" />
                                                            <Key frame="313" value="-74.7056" />
                                                            <Key frame="326" value="-71.893" />
                                                            <Key frame="338" value="-71.2778" />
                                                            <Key frame="351" value="-81.8248" />
                                                            <Key frame="363" value="-81.7369" />
                                                            <Key frame="376" value="-81.2096" />
                                                            <Key frame="388" value="-79.9791" />
                                                            <Key frame="401" value="-69.6078" />
                                                            <Key frame="413" value="-58.7972" />
                                                            <Key frame="426" value="-56.1604" />
                                                            <Key frame="438" value="-55.721" />
                                                            <Key frame="451" value="-63.1917" />
                                                            <Key frame="463" value="-62.4886" />
                                                            <Key frame="476" value="-62.7523" />
                                                            <Key frame="488" value="-61.6097" />
                                                            <Key frame="501" value="-67.4106" />
                                                            <Key frame="513" value="-67.85" />
                                                            <Key frame="526" value="-66.7953" />
                                                            <Key frame="538" value="-61.5218" />
                                                            <Key frame="551" value="-43.4161" />
                                                            <Key frame="563" value="-41.043" />
                                                            <Key frame="576" value="-41.1309" />
                                                            <Key frame="588" value="-40.1641" />
                                                            <Key frame="601" value="-40.252" />
                                                            <Key frame="613" value="-38.5821" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" unit="0">
                                                            <Key frame="13" value="33.3965" />
                                                            <Key frame="26" value="33.3965" />
                                                            <Key frame="38" value="33.3965" />
                                                            <Key frame="51" value="33.3965" />
                                                            <Key frame="63" value="33.4843" />
                                                            <Key frame="76" value="33.3965" />
                                                            <Key frame="88" value="32.6933" />
                                                            <Key frame="101" value="32.4296" />
                                                            <Key frame="113" value="32.4296" />
                                                            <Key frame="126" value="32.3418" />
                                                            <Key frame="138" value="32.3418" />
                                                            <Key frame="151" value="31.9023" />
                                                            <Key frame="163" value="19.0701" />
                                                            <Key frame="176" value="-25.6668" />
                                                            <Key frame="188" value="-31.2919" />
                                                            <Key frame="201" value="-31.3797" />
                                                            <Key frame="213" value="-34.3681" />
                                                            <Key frame="226" value="-40.7842" />
                                                            <Key frame="238" value="-43.7725" />
                                                            <Key frame="251" value="-37.5322" />
                                                            <Key frame="263" value="-31.8192" />
                                                            <Key frame="276" value="-31.9071" />
                                                            <Key frame="288" value="-31.8192" />
                                                            <Key frame="301" value="-31.8192" />
                                                            <Key frame="313" value="-31.0282" />
                                                            <Key frame="326" value="-22.4148" />
                                                            <Key frame="338" value="2.54646" />
                                                            <Key frame="351" value="6.67737" />
                                                            <Key frame="363" value="6.85315" />
                                                            <Key frame="376" value="8.87466" />
                                                            <Key frame="388" value="10.0173" />
                                                            <Key frame="401" value="18.1912" />
                                                            <Key frame="413" value="32.166" />
                                                            <Key frame="426" value="43.1524" />
                                                            <Key frame="438" value="45.1739" />
                                                            <Key frame="451" value="45.0861" />
                                                            <Key frame="463" value="45.0861" />
                                                            <Key frame="476" value="45.0861" />
                                                            <Key frame="488" value="49.0412" />
                                                            <Key frame="501" value="49.7443" />
                                                            <Key frame="513" value="45.8771" />
                                                            <Key frame="526" value="44.9103" />
                                                            <Key frame="538" value="44.9982" />
                                                            <Key frame="551" value="44.9982" />
                                                            <Key frame="563" value="9.22623" />
                                                            <Key frame="576" value="-26.0183" />
                                                            <Key frame="588" value="-26.4578" />
                                                            <Key frame="601" value="-34.9833" />
                                                            <Key frame="613" value="-39.9052" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" unit="1">
                                                            <Key frame="13" value="0.2972" />
                                                            <Key frame="26" value="0.2972" />
                                                            <Key frame="38" value="0.2972" />
                                                            <Key frame="51" value="0.2972" />
                                                            <Key frame="63" value="0.2972" />
                                                            <Key frame="76" value="0.2972" />
                                                            <Key frame="88" value="0.2972" />
                                                            <Key frame="101" value="0.2972" />
                                                            <Key frame="113" value="0.2972" />
                                                            <Key frame="126" value="0.2972" />
                                                            <Key frame="138" value="0.2972" />
                                                            <Key frame="151" value="0.2972" />
                                                            <Key frame="163" value="0.2972" />
                                                            <Key frame="176" value="0.2972" />
                                                            <Key frame="188" value="0.2972" />
                                                            <Key frame="201" value="0.2972" />
                                                            <Key frame="213" value="0.2972" />
                                                            <Key frame="226" value="0.2972" />
                                                            <Key frame="238" value="0.2972" />
                                                            <Key frame="251" value="0.2972" />
                                                            <Key frame="263" value="0.2972" />
                                                            <Key frame="276" value="0.2972" />
                                                            <Key frame="288" value="0.2972" />
                                                            <Key frame="301" value="0.2972" />
                                                            <Key frame="313" value="0.2972" />
                                                            <Key frame="326" value="0.2972" />
                                                            <Key frame="338" value="0.2972" />
                                                            <Key frame="351" value="0.2972" />
                                                            <Key frame="363" value="0.2972" />
                                                            <Key frame="376" value="0.2972" />
                                                            <Key frame="388" value="0.2972" />
                                                            <Key frame="401" value="0.2972" />
                                                            <Key frame="413" value="0.2972" />
                                                            <Key frame="426" value="0.2972" />
                                                            <Key frame="438" value="0.2972" />
                                                            <Key frame="451" value="0.2972" />
                                                            <Key frame="463" value="0.2972" />
                                                            <Key frame="476" value="0.2972" />
                                                            <Key frame="488" value="0.2972" />
                                                            <Key frame="501" value="0.2972" />
                                                            <Key frame="513" value="0.2972" />
                                                            <Key frame="526" value="0.2972" />
                                                            <Key frame="538" value="0.2972" />
                                                            <Key frame="551" value="0.2972" />
                                                            <Key frame="563" value="0.2972" />
                                                            <Key frame="576" value="0.2972" />
                                                            <Key frame="588" value="0.2972" />
                                                            <Key frame="601" value="0.2972" />
                                                            <Key frame="613" value="0.2972" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" unit="0">
                                                            <Key frame="13" value="70.1352" />
                                                            <Key frame="26" value="70.1352" />
                                                            <Key frame="38" value="70.0473" />
                                                            <Key frame="51" value="70.1352" />
                                                            <Key frame="63" value="70.0473" />
                                                            <Key frame="76" value="70.1352" />
                                                            <Key frame="88" value="63.6312" />
                                                            <Key frame="101" value="44.8224" />
                                                            <Key frame="113" value="-1.23289" />
                                                            <Key frame="126" value="-14.0651" />
                                                            <Key frame="138" value="-13.274" />
                                                            <Key frame="151" value="-13.1862" />
                                                            <Key frame="163" value="-12.8346" />
                                                            <Key frame="176" value="-7.91266" />
                                                            <Key frame="188" value="4.48007" />
                                                            <Key frame="201" value="11.072" />
                                                            <Key frame="213" value="12.7419" />
                                                            <Key frame="226" value="11.7751" />
                                                            <Key frame="238" value="-23.03" />
                                                            <Key frame="251" value="-59.6809" />
                                                            <Key frame="263" value="-64.9544" />
                                                            <Key frame="276" value="-65.2181" />
                                                            <Key frame="288" value="-65.2181" />
                                                            <Key frame="301" value="-65.1302" />
                                                            <Key frame="313" value="-58.7141" />
                                                            <Key frame="326" value="-28.3914" />
                                                            <Key frame="338" value="-12.483" />
                                                            <Key frame="351" value="-9.58261" />
                                                            <Key frame="363" value="-9.40682" />
                                                            <Key frame="376" value="-9.14314" />
                                                            <Key frame="388" value="-7.38531" />
                                                            <Key frame="401" value="-7.38531" />
                                                            <Key frame="413" value="-4.83644" />
                                                            <Key frame="426" value="12.3024" />
                                                            <Key frame="438" value="56.7756" />
                                                            <Key frame="451" value="58.9729" />
                                                            <Key frame="463" value="60.1155" />
                                                            <Key frame="476" value="60.4671" />
                                                            <Key frame="488" value="69.4321" />
                                                            <Key frame="501" value="87.0983" />
                                                            <Key frame="513" value="89.7351" />
                                                            <Key frame="526" value="91.3171" />
                                                            <Key frame="538" value="91.1413" />
                                                            <Key frame="551" value="69.4321" />
                                                            <Key frame="563" value="26.0135" />
                                                            <Key frame="576" value="17.7517" />
                                                            <Key frame="588" value="82.7916" />
                                                            <Key frame="601" value="46.4044" />
                                                            <Key frame="613" value="41.2188" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" unit="0">
                                                            <Key frame="13" value="16.8728" />
                                                            <Key frame="26" value="16.8728" />
                                                            <Key frame="38" value="16.8728" />
                                                            <Key frame="51" value="16.6091" />
                                                            <Key frame="63" value="16.697" />
                                                            <Key frame="76" value="16.7849" />
                                                            <Key frame="88" value="16.8728" />
                                                            <Key frame="101" value="16.697" />
                                                            <Key frame="113" value="12.5661" />
                                                            <Key frame="126" value="10.1051" />
                                                            <Key frame="138" value="9.48991" />
                                                            <Key frame="151" value="7.55628" />
                                                            <Key frame="163" value="7.11683" />
                                                            <Key frame="176" value="8.17153" />
                                                            <Key frame="188" value="8.08364" />
                                                            <Key frame="201" value="8.08364" />
                                                            <Key frame="213" value="8.17153" />
                                                            <Key frame="226" value="9.05044" />
                                                            <Key frame="238" value="8.78677" />
                                                            <Key frame="251" value="8.17153" />
                                                            <Key frame="263" value="12.9177" />
                                                            <Key frame="276" value="13.2692" />
                                                            <Key frame="288" value="13.3571" />
                                                            <Key frame="301" value="13.5329" />
                                                            <Key frame="313" value="13.7087" />
                                                            <Key frame="326" value="11.5993" />
                                                            <Key frame="338" value="-13.5377" />
                                                            <Key frame="351" value="-18" />
                                                            <Key frame="363" value="-18" />
                                                            <Key frame="376" value="-18" />
                                                            <Key frame="388" value="-18" />
                                                            <Key frame="401" value="-5.62747" />
                                                            <Key frame="413" value="12.0388" />
                                                            <Key frame="426" value="29.7929" />
                                                            <Key frame="438" value="36.0332" />
                                                            <Key frame="451" value="30.8476" />
                                                            <Key frame="463" value="30.4081" />
                                                            <Key frame="476" value="30.496" />
                                                            <Key frame="488" value="36.3848" />
                                                            <Key frame="501" value="31.0234" />
                                                            <Key frame="513" value="13.1813" />
                                                            <Key frame="526" value="9.13833" />
                                                            <Key frame="538" value="12.4782" />
                                                            <Key frame="551" value="25.0467" />
                                                            <Key frame="563" value="25.3104" />
                                                            <Key frame="576" value="25.4862" />
                                                            <Key frame="588" value="25.5741" />
                                                            <Key frame="601" value="24.4315" />
                                                            <Key frame="613" value="25.2225" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" unit="0">
                                                            <Key frame="13" value="-36.3896" />
                                                            <Key frame="26" value="-36.3896" />
                                                            <Key frame="38" value="-36.4775" />
                                                            <Key frame="51" value="-36.4775" />
                                                            <Key frame="63" value="-36.3896" />
                                                            <Key frame="76" value="-36.4775" />
                                                            <Key frame="88" value="-36.4775" />
                                                            <Key frame="101" value="-36.4775" />
                                                            <Key frame="113" value="-36.4775" />
                                                            <Key frame="126" value="-36.5654" />
                                                            <Key frame="138" value="-36.6533" />
                                                            <Key frame="151" value="-104.5" />
                                                            <Key frame="163" value="-104.5" />
                                                            <Key frame="176" value="-104.5" />
                                                            <Key frame="188" value="-104.5" />
                                                            <Key frame="201" value="-104.5" />
                                                            <Key frame="213" value="-104.5" />
                                                            <Key frame="226" value="-104.5" />
                                                            <Key frame="238" value="-104.5" />
                                                            <Key frame="251" value="-104.5" />
                                                            <Key frame="263" value="-99.5837" />
                                                            <Key frame="276" value="-99.5837" />
                                                            <Key frame="288" value="-99.6716" />
                                                            <Key frame="301" value="-99.6716" />
                                                            <Key frame="313" value="-99.6716" />
                                                            <Key frame="326" value="-98.0896" />
                                                            <Key frame="338" value="-94.7497" />
                                                            <Key frame="351" value="-93.1676" />
                                                            <Key frame="363" value="-93.2555" />
                                                            <Key frame="376" value="-93.2555" />
                                                            <Key frame="388" value="-93.1676" />
                                                            <Key frame="401" value="-93.3434" />
                                                            <Key frame="413" value="-93.3434" />
                                                            <Key frame="426" value="-93.4313" />
                                                            <Key frame="438" value="-97.6501" />
                                                            <Key frame="451" value="-98.7048" />
                                                            <Key frame="463" value="-99.2322" />
                                                            <Key frame="476" value="-104.5" />
                                                            <Key frame="488" value="-104.5" />
                                                            <Key frame="501" value="-104.5" />
                                                            <Key frame="513" value="-104.5" />
                                                            <Key frame="526" value="-104.5" />
                                                            <Key frame="538" value="-104.5" />
                                                            <Key frame="551" value="-104.5" />
                                                            <Key frame="563" value="-104.5" />
                                                            <Key frame="576" value="-104.5" />
                                                            <Key frame="588" value="-104.5" />
                                                            <Key frame="601" value="-104.5" />
                                                            <Key frame="613" value="-104.5" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" unit="0">
                                                            <Key frame="13" value="12.7467" />
                                                            <Key frame="26" value="12.7467" />
                                                            <Key frame="38" value="12.7467" />
                                                            <Key frame="51" value="12.7467" />
                                                            <Key frame="63" value="12.7467" />
                                                            <Key frame="76" value="12.8346" />
                                                            <Key frame="88" value="12.7467" />
                                                            <Key frame="101" value="12.7467" />
                                                            <Key frame="113" value="12.7467" />
                                                            <Key frame="126" value="12.7467" />
                                                            <Key frame="138" value="12.8346" />
                                                            <Key frame="151" value="12.8346" />
                                                            <Key frame="163" value="12.7467" />
                                                            <Key frame="176" value="14.6803" />
                                                            <Key frame="188" value="17.0534" />
                                                            <Key frame="201" value="17.7565" />
                                                            <Key frame="213" value="42.7178" />
                                                            <Key frame="226" value="79.896" />
                                                            <Key frame="238" value="85.8726" />
                                                            <Key frame="251" value="86.0484" />
                                                            <Key frame="263" value="86.1363" />
                                                            <Key frame="276" value="85.4332" />
                                                            <Key frame="288" value="82.4448" />
                                                            <Key frame="301" value="76.3803" />
                                                            <Key frame="313" value="71.81" />
                                                            <Key frame="326" value="70.5795" />
                                                            <Key frame="338" value="68.4701" />
                                                            <Key frame="351" value="66.6243" />
                                                            <Key frame="363" value="66.1849" />
                                                            <Key frame="376" value="63.7239" />
                                                            <Key frame="388" value="63.7239" />
                                                            <Key frame="401" value="63.5481" />
                                                            <Key frame="413" value="63.1087" />
                                                            <Key frame="426" value="62.9329" />
                                                            <Key frame="438" value="62.6692" />
                                                            <Key frame="451" value="60.9114" />
                                                            <Key frame="463" value="59.7688" />
                                                            <Key frame="476" value="54.7589" />
                                                            <Key frame="488" value="51.4191" />
                                                            <Key frame="501" value="50.628" />
                                                            <Key frame="513" value="50.628" />
                                                            <Key frame="526" value="48.255" />
                                                            <Key frame="538" value="48.1671" />
                                                            <Key frame="551" value="48.0792" />
                                                            <Key frame="563" value="48.0792" />
                                                            <Key frame="576" value="47.9913" />
                                                            <Key frame="588" value="48.0792" />
                                                            <Key frame="601" value="48.255" />
                                                            <Key frame="613" value="47.5518" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" unit="0">
                                                            <Key frame="13" value="11.9509" />
                                                            <Key frame="26" value="11.9509" />
                                                            <Key frame="38" value="11.9509" />
                                                            <Key frame="51" value="11.9509" />
                                                            <Key frame="63" value="11.9509" />
                                                            <Key frame="76" value="11.863" />
                                                            <Key frame="88" value="11.7751" />
                                                            <Key frame="101" value="11.7751" />
                                                            <Key frame="113" value="11.7751" />
                                                            <Key frame="126" value="13.0056" />
                                                            <Key frame="138" value="14.0603" />
                                                            <Key frame="151" value="20.3006" />
                                                            <Key frame="163" value="64.1586" />
                                                            <Key frame="176" value="58.4456" />
                                                            <Key frame="188" value="57.7425" />
                                                            <Key frame="201" value="57.1272" />
                                                            <Key frame="213" value="53.3479" />
                                                            <Key frame="226" value="38.7579" />
                                                            <Key frame="238" value="36.209" />
                                                            <Key frame="251" value="36.1211" />
                                                            <Key frame="263" value="36.1211" />
                                                            <Key frame="276" value="34.3633" />
                                                            <Key frame="288" value="21.0916" />
                                                            <Key frame="301" value="12.0388" />
                                                            <Key frame="313" value="7.99575" />
                                                            <Key frame="326" value="6.4137" />
                                                            <Key frame="338" value="4.2164" />
                                                            <Key frame="351" value="2.107" />
                                                            <Key frame="363" value="-0.353968" />
                                                            <Key frame="376" value="0.788627" />
                                                            <Key frame="388" value="0.788627" />
                                                            <Key frame="401" value="0.788627" />
                                                            <Key frame="413" value="0.524941" />
                                                            <Key frame="426" value="0.524941" />
                                                            <Key frame="438" value="0.524941" />
                                                            <Key frame="451" value="0.261268" />
                                                            <Key frame="463" value="-1.145" />
                                                            <Key frame="476" value="2.0191" />
                                                            <Key frame="488" value="2.63435" />
                                                            <Key frame="501" value="2.72224" />
                                                            <Key frame="513" value="2.72224" />
                                                            <Key frame="526" value="2.89802" />
                                                            <Key frame="538" value="31.7265" />
                                                            <Key frame="551" value="39.3731" />
                                                            <Key frame="563" value="53.7873" />
                                                            <Key frame="576" value="59.1487" />
                                                            <Key frame="588" value="59.1487" />
                                                            <Key frame="601" value="60.1155" />
                                                            <Key frame="613" value="60.6429" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" unit="1">
                                                            <Key frame="13" value="0.306" />
                                                            <Key frame="26" value="0.306" />
                                                            <Key frame="38" value="0.306" />
                                                            <Key frame="51" value="0.306" />
                                                            <Key frame="63" value="0.306" />
                                                            <Key frame="76" value="0.306" />
                                                            <Key frame="88" value="0.306" />
                                                            <Key frame="101" value="0.3064" />
                                                            <Key frame="113" value="0.306" />
                                                            <Key frame="126" value="0.306" />
                                                            <Key frame="138" value="0.306" />
                                                            <Key frame="151" value="0.306" />
                                                            <Key frame="163" value="0.306" />
                                                            <Key frame="176" value="0.306" />
                                                            <Key frame="188" value="0.306" />
                                                            <Key frame="201" value="0.306" />
                                                            <Key frame="213" value="0.306" />
                                                            <Key frame="226" value="0.306" />
                                                            <Key frame="238" value="0.306" />
                                                            <Key frame="251" value="0.306" />
                                                            <Key frame="263" value="0.306" />
                                                            <Key frame="276" value="0.306" />
                                                            <Key frame="288" value="0.3064" />
                                                            <Key frame="301" value="0.306" />
                                                            <Key frame="313" value="0.306" />
                                                            <Key frame="326" value="0.306" />
                                                            <Key frame="338" value="0.306" />
                                                            <Key frame="351" value="0.306" />
                                                            <Key frame="363" value="0.306" />
                                                            <Key frame="376" value="0.306" />
                                                            <Key frame="388" value="0.306" />
                                                            <Key frame="401" value="0.312" />
                                                            <Key frame="413" value="0.3184" />
                                                            <Key frame="426" value="0.3216" />
                                                            <Key frame="438" value="0.3216" />
                                                            <Key frame="451" value="0.326" />
                                                            <Key frame="463" value="0.326" />
                                                            <Key frame="476" value="0.326" />
                                                            <Key frame="488" value="0.326" />
                                                            <Key frame="501" value="0.326" />
                                                            <Key frame="513" value="0.326" />
                                                            <Key frame="526" value="0.326" />
                                                            <Key frame="538" value="0.326" />
                                                            <Key frame="551" value="0.326" />
                                                            <Key frame="563" value="0.326" />
                                                            <Key frame="576" value="0.326" />
                                                            <Key frame="588" value="0.326" />
                                                            <Key frame="601" value="0.326" />
                                                            <Key frame="613" value="0.326" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" unit="0">
                                                            <Key frame="13" value="89.652" />
                                                            <Key frame="26" value="89.652" />
                                                            <Key frame="38" value="89.652" />
                                                            <Key frame="51" value="89.652" />
                                                            <Key frame="63" value="89.652" />
                                                            <Key frame="76" value="52.2101" />
                                                            <Key frame="88" value="-2.72224" />
                                                            <Key frame="101" value="-1.93121" />
                                                            <Key frame="113" value="-1.93121" />
                                                            <Key frame="126" value="-0.876518" />
                                                            <Key frame="138" value="-1.31597" />
                                                            <Key frame="151" value="-0.612832" />
                                                            <Key frame="163" value="4.92435" />
                                                            <Key frame="176" value="6.06693" />
                                                            <Key frame="188" value="-13.2692" />
                                                            <Key frame="201" value="-52.9084" />
                                                            <Key frame="213" value="-58.7093" />
                                                            <Key frame="226" value="-54.9299" />
                                                            <Key frame="238" value="-51.5022" />
                                                            <Key frame="251" value="-51.5022" />
                                                            <Key frame="263" value="-51.2385" />
                                                            <Key frame="276" value="-9.13833" />
                                                            <Key frame="288" value="27.8641" />
                                                            <Key frame="301" value="44.6514" />
                                                            <Key frame="313" value="49.6612" />
                                                            <Key frame="326" value="49.6612" />
                                                            <Key frame="338" value="49.837" />
                                                            <Key frame="351" value="51.1554" />
                                                            <Key frame="363" value="53.089" />
                                                            <Key frame="376" value="88.4215" />
                                                            <Key frame="388" value="92.7282" />
                                                            <Key frame="401" value="93.6071" />
                                                            <Key frame="413" value="93.6071" />
                                                            <Key frame="426" value="93.6071" />
                                                            <Key frame="438" value="93.6071" />
                                                            <Key frame="451" value="93.8708" />
                                                            <Key frame="463" value="112.24" />
                                                            <Key frame="476" value="116.635" />
                                                            <Key frame="488" value="116.195" />
                                                            <Key frame="501" value="116.195" />
                                                            <Key frame="513" value="116.107" />
                                                            <Key frame="526" value="117.514" />
                                                            <Key frame="538" value="102.133" />
                                                            <Key frame="551" value="74.7104" />
                                                            <Key frame="563" value="56.341" />
                                                            <Key frame="576" value="42.8936" />
                                                            <Key frame="588" value="84.8179" />
                                                            <Key frame="601" value="47.4639" />
                                                            <Key frame="613" value="63.8997" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" unit="0">
                                                            <Key frame="13" value="-9.58261" />
                                                            <Key frame="26" value="-9.58261" />
                                                            <Key frame="38" value="-9.58261" />
                                                            <Key frame="51" value="-9.49471" />
                                                            <Key frame="63" value="-9.49471" />
                                                            <Key frame="76" value="-9.31893" />
                                                            <Key frame="88" value="-7.56109" />
                                                            <Key frame="101" value="-7.29742" />
                                                            <Key frame="113" value="-6.85796" />
                                                            <Key frame="126" value="-6.3306" />
                                                            <Key frame="138" value="-5.18802" />
                                                            <Key frame="151" value="-4.39699" />
                                                            <Key frame="163" value="-4.74855" />
                                                            <Key frame="176" value="-4.39699" />
                                                            <Key frame="188" value="-3.86964" />
                                                            <Key frame="201" value="1.0523" />
                                                            <Key frame="213" value="-0.00240423" />
                                                            <Key frame="226" value="-13.0104" />
                                                            <Key frame="238" value="-16.5261" />
                                                            <Key frame="251" value="-16.5261" />
                                                            <Key frame="263" value="-16.5261" />
                                                            <Key frame="276" value="-20.7449" />
                                                            <Key frame="288" value="8.52309" />
                                                            <Key frame="301" value="13.2692" />
                                                            <Key frame="313" value="11.5114" />
                                                            <Key frame="326" value="11.5114" />
                                                            <Key frame="338" value="12.1267" />
                                                            <Key frame="351" value="12.0388" />
                                                            <Key frame="363" value="-24.5242" />
                                                            <Key frame="376" value="-52.0343" />
                                                            <Key frame="388" value="-38.5869" />
                                                            <Key frame="401" value="-37.708" />
                                                            <Key frame="413" value="-37.3564" />
                                                            <Key frame="426" value="-36.829" />
                                                            <Key frame="438" value="-36.3896" />
                                                            <Key frame="451" value="-35.247" />
                                                            <Key frame="463" value="-27.952" />
                                                            <Key frame="476" value="-10.3736" />
                                                            <Key frame="488" value="-9.75839" />
                                                            <Key frame="501" value="-9.31893" />
                                                            <Key frame="513" value="-9.23104" />
                                                            <Key frame="526" value="-18.6354" />
                                                            <Key frame="538" value="-33.9286" />
                                                            <Key frame="551" value="-19.2507" />
                                                            <Key frame="563" value="-9.75839" />
                                                            <Key frame="576" value="-9.6705" />
                                                            <Key frame="588" value="-9.6705" />
                                                            <Key frame="601" value="-9.40682" />
                                                            <Key frame="613" value="-9.75839" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" unit="0">
                                                            <Key frame="13" value="16.3455" />
                                                            <Key frame="26" value="16.3455" />
                                                            <Key frame="38" value="16.2576" />
                                                            <Key frame="51" value="16.2576" />
                                                            <Key frame="63" value="16.2576" />
                                                            <Key frame="76" value="16.3455" />
                                                            <Key frame="88" value="16.3455" />
                                                            <Key frame="101" value="16.3455" />
                                                            <Key frame="113" value="16.3455" />
                                                            <Key frame="126" value="31.6386" />
                                                            <Key frame="138" value="104.5" />
                                                            <Key frame="151" value="104.5" />
                                                            <Key frame="163" value="104.5" />
                                                            <Key frame="176" value="96.8543" />
                                                            <Key frame="188" value="77.7818" />
                                                            <Key frame="201" value="54.4026" />
                                                            <Key frame="213" value="56.3362" />
                                                            <Key frame="226" value="67.7621" />
                                                            <Key frame="238" value="68.2016" />
                                                            <Key frame="251" value="68.1137" />
                                                            <Key frame="263" value="68.2016" />
                                                            <Key frame="276" value="68.4652" />
                                                            <Key frame="288" value="51.59" />
                                                            <Key frame="301" value="50.3596" />
                                                            <Key frame="313" value="50.2717" />
                                                            <Key frame="326" value="50.2717" />
                                                            <Key frame="338" value="50.2717" />
                                                            <Key frame="351" value="50.3596" />
                                                            <Key frame="363" value="50.2717" />
                                                            <Key frame="376" value="50.008" />
                                                            <Key frame="388" value="62.0492" />
                                                            <Key frame="401" value="62.137" />
                                                            <Key frame="413" value="62.137" />
                                                            <Key frame="426" value="62.137" />
                                                            <Key frame="438" value="62.137" />
                                                            <Key frame="451" value="65.389" />
                                                            <Key frame="463" value="102.567" />
                                                            <Key frame="476" value="104.5" />
                                                            <Key frame="488" value="104.5" />
                                                            <Key frame="501" value="104.5" />
                                                            <Key frame="513" value="104.5" />
                                                            <Key frame="526" value="104.5" />
                                                            <Key frame="538" value="104.5" />
                                                            <Key frame="551" value="104.5" />
                                                            <Key frame="563" value="104.5" />
                                                            <Key frame="576" value="104.5" />
                                                            <Key frame="588" value="104.5" />
                                                            <Key frame="601" value="104.5" />
                                                            <Key frame="613" value="104.5" />
                                                        </ActuatorCurve>
                                                    </ActuatorList>
                                                </Timeline>
                                            </Box>
                                            <Box name="Move To" id="1" localization="8" tooltip="Make the robot move to a configured point relative to its current location." x="484" y="222">
                                                <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.motion = ALProxy("ALMotion")
        self.positionErrorThresholdPos = 0.01
        self.positionErrorThresholdAng = 0.03

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.moveToward(0.0, 0.0, 0.0)

    def onInput_onStart(self):
        import almath
        # The command position estimation will be set to the sensor position
        # when the robot starts moving, so we use sensors first and commands later.
        initPosition = almath.Pose2D(self.motion.getRobotPosition(True))
        targetDistance = almath.Pose2D(self.getParameter("Distance X (m)"),
            self.getParameter("Distance Y (m)"),
            self.getParameter("Theta (deg)") * almath.PI / 180)
        expectedEndPosition = initPosition * targetDistance
        enableArms = self.getParameter("Arms movement enabled")
        self.motion.setMoveArmsEnabled(enableArms, enableArms)
        self.motion.moveTo(self.getParameter("Distance X (m)"),
            self.getParameter("Distance Y (m)"),
            self.getParameter("Theta (deg)") * almath.PI / 180)

        # The move is finished so output
        realEndPosition = almath.Pose2D(self.motion.getRobotPosition(False))
        positionError = realEndPosition.diff(expectedEndPosition)
        positionError.theta = almath.modulo2PI(positionError.theta)
        if (abs(positionError.x) < self.positionErrorThresholdPos
            and abs(positionError.y) < self.positionErrorThresholdPos
            and abs(positionError.theta) < self.positionErrorThresholdAng):
            self.onArrivedAtDestination()
        else:
            self.onStoppedBeforeArriving(positionError.toVector())

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onArrivedAtDestination" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot arrives at its destination." id="4" />
                                                <Output name="onStoppedBeforeArriving" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot stops before arriving to its destination. Returns a vector [x (m), y (m), theta(rad)] with the remaining distance up to the destination. This distance is expressed in the ROBOT frame." id="5" />
                                                <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0.2" min="-5" max="10" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="6" />
                                                <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-5" max="5" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="7" />
                                                <Parameter name="Theta (deg)" inherits_from_parent="0" content_type="2" value="90" default_value="0" min="-180" max="180" tooltip="The orientation in degrees for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="8" />
                                                <Parameter name="Arms movement enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Enables natural motion of the arms." id="9" />
                                                <Resource name="Legs" type="Lock" timeout="0" />
                                            </Box>
                                            <Box name="Play Sound (1)" id="2" localization="8" tooltip="Play a sound file. Select the file in parameters. The format of the file can be wav or ogg (on virtual robot) and also mp3 (on a real robot).&#x0A;&#x0A;Note: There can be some delay to play ogg or mp3 (on a robot) files. We advise you to use wav if&#x0A;you want a fast play of the file." x="855" y="116">
                                                <bitmap>media/images/box/interaction/play_music.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                <Parameter name="File name" inherits_from_parent="0" content_type="4" value="/macare.mp3" default_value="" tooltip="Name of the file you want to play.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="5" />
                                                <Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" />
                                                <Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="60" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" />
                                                <Parameter name="Balance L/R" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" />
                                                <Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram>
                                                                <Box name="Play Sound File" id="2" localization="8" tooltip="Play the sound." x="442" y="70">
                                                                    <bitmap>media/images/box/interaction/play_music.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.player = ALProxy('ALAudioPlayer')
        self.playerStop = ALProxy('ALAudioPlayer', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.post.playFileInLoop(p,self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            else :
               id = self.player.post.playFileFromPosition(p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            self.ids.append(id)
            self.player.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" />
                                                                    <Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" />
                                                                    <Parameter name="Balance L/R" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" />
                                                                    <Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" />
                                                                </Box>
                                                                <Box name="Get Attached File" id="1" localization="8" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="216" y="71">
                                                                    <bitmap>media/images/box/folder.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.framemanager = ALProxy("ALFrameManager")

    def onInput_onStart(self):
        self.onStopped(self.framemanager.getBehaviorPath(self.behaviorId) + self.getParameter("File name"))]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" />
                                                                    <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" />
                                                                    <Parameter name="File name" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Name of the file which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" />
                                                                </Box>
                                                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                                <Resource name="Audio player" type="Lock" timeout="0" />
                                            </Box>
                                            <Box name="Delay (1)" id="3" localization="8" tooltip="Wait a moment before triggering the output. &#x0A;Can be stopped anytime. &#x0A;Multiple inputs will trigger multiple outputs." x="698" y="119">
                                                <bitmap>media/images/box/wait.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.delayed = []

    def onUnload(self):
        self.cancelDelays()

    def cancelDelays(self):
        cancel_list = list(self.delayed)
        for d in cancel_list:
            d.cancel()

    def cleanDelay(self, fut, fut_ref):
        self.delayed.remove(fut)

    def triggerOutput(self):
        self.timerOutput()

    def onInput_onStart(self):
        import qi
        import functools
        delay_future = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))
        # keep the async operation in an array for cancel
        # and remove it when it is finished in the callback
        self.delayed.append(delay_future)
        bound_clean = functools.partial(self.cleanDelay, delay_future)
        delay_future.addCallback(bound_clean)

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.delayed:
            self.timerOutput()
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Delay box with the configured timeout value." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                                                <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once delay set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                                                <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="2.5" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                                                <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently delaying at least one signal and cancelled, output will be stimulated." id="6" />
                                            </Box>
                                            <Box name="chore 2 (1)" id="4" localization="8" tooltip="" x="683" y="229">
                                                <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Timeline enable="1" fps="50" start_frame="1" end_frame="615" size="615">
                                                    <ActuatorList model="">
                                                        <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" unit="0">
                                                            <Key frame="13" value="-37.1758" />
                                                            <Key frame="26" value="-37.1758" />
                                                            <Key frame="38" value="-37.1758" />
                                                            <Key frame="51" value="-37.1758" />
                                                            <Key frame="63" value="-37.1758" />
                                                            <Key frame="76" value="-37.1758" />
                                                            <Key frame="88" value="-34.0996" />
                                                            <Key frame="101" value="-29.5292" />
                                                            <Key frame="113" value="-28.6503" />
                                                            <Key frame="126" value="-29.5292" />
                                                            <Key frame="138" value="-29.5292" />
                                                            <Key frame="151" value="-29.2655" />
                                                            <Key frame="163" value="-28.7382" />
                                                            <Key frame="176" value="-27.1561" />
                                                            <Key frame="188" value="-27.1561" />
                                                            <Key frame="201" value="-25.7499" />
                                                            <Key frame="213" value="-25.3983" />
                                                            <Key frame="226" value="-25.5741" />
                                                            <Key frame="238" value="-30.4081" />
                                                            <Key frame="251" value="-44.1192" />
                                                            <Key frame="263" value="-75.9361" />
                                                            <Key frame="276" value="-77.1665" />
                                                            <Key frame="288" value="-77.2544" />
                                                            <Key frame="301" value="-77.4302" />
                                                            <Key frame="313" value="-74.7056" />
                                                            <Key frame="326" value="-71.893" />
                                                            <Key frame="338" value="-71.2778" />
                                                            <Key frame="351" value="-81.8248" />
                                                            <Key frame="363" value="-81.7369" />
                                                            <Key frame="376" value="-81.2096" />
                                                            <Key frame="388" value="-79.9791" />
                                                            <Key frame="401" value="-69.6078" />
                                                            <Key frame="413" value="-58.7972" />
                                                            <Key frame="426" value="-56.1604" />
                                                            <Key frame="438" value="-55.721" />
                                                            <Key frame="451" value="-63.1917" />
                                                            <Key frame="463" value="-62.4886" />
                                                            <Key frame="476" value="-62.7523" />
                                                            <Key frame="488" value="-61.6097" />
                                                            <Key frame="501" value="-67.4106" />
                                                            <Key frame="513" value="-67.85" />
                                                            <Key frame="526" value="-66.7953" />
                                                            <Key frame="538" value="-61.5218" />
                                                            <Key frame="551" value="-43.4161" />
                                                            <Key frame="563" value="-41.043" />
                                                            <Key frame="576" value="-41.1309" />
                                                            <Key frame="588" value="-40.1641" />
                                                            <Key frame="601" value="-40.252" />
                                                            <Key frame="613" value="-38.5821" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" unit="0">
                                                            <Key frame="13" value="33.3965" />
                                                            <Key frame="26" value="33.3965" />
                                                            <Key frame="38" value="33.3965" />
                                                            <Key frame="51" value="33.3965" />
                                                            <Key frame="63" value="33.4843" />
                                                            <Key frame="76" value="33.3965" />
                                                            <Key frame="88" value="32.6933" />
                                                            <Key frame="101" value="32.4296" />
                                                            <Key frame="113" value="32.4296" />
                                                            <Key frame="126" value="32.3418" />
                                                            <Key frame="138" value="32.3418" />
                                                            <Key frame="151" value="31.9023" />
                                                            <Key frame="163" value="19.0701" />
                                                            <Key frame="176" value="-25.6668" />
                                                            <Key frame="188" value="-31.2919" />
                                                            <Key frame="201" value="-31.3797" />
                                                            <Key frame="213" value="-34.3681" />
                                                            <Key frame="226" value="-40.7842" />
                                                            <Key frame="238" value="-43.7725" />
                                                            <Key frame="251" value="-37.5322" />
                                                            <Key frame="263" value="-31.8192" />
                                                            <Key frame="276" value="-31.9071" />
                                                            <Key frame="288" value="-31.8192" />
                                                            <Key frame="301" value="-31.8192" />
                                                            <Key frame="313" value="-31.0282" />
                                                            <Key frame="326" value="-22.4148" />
                                                            <Key frame="338" value="2.54646" />
                                                            <Key frame="351" value="6.67737" />
                                                            <Key frame="363" value="6.85315" />
                                                            <Key frame="376" value="8.87466" />
                                                            <Key frame="388" value="10.0173" />
                                                            <Key frame="401" value="18.1912" />
                                                            <Key frame="413" value="32.166" />
                                                            <Key frame="426" value="43.1524" />
                                                            <Key frame="438" value="45.1739" />
                                                            <Key frame="451" value="45.0861" />
                                                            <Key frame="463" value="45.0861" />
                                                            <Key frame="476" value="45.0861" />
                                                            <Key frame="488" value="49.0412" />
                                                            <Key frame="501" value="49.7443" />
                                                            <Key frame="513" value="45.8771" />
                                                            <Key frame="526" value="44.9103" />
                                                            <Key frame="538" value="44.9982" />
                                                            <Key frame="551" value="44.9982" />
                                                            <Key frame="563" value="9.22623" />
                                                            <Key frame="576" value="-26.0183" />
                                                            <Key frame="588" value="-26.4578" />
                                                            <Key frame="601" value="-34.9833" />
                                                            <Key frame="613" value="-39.9052" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" unit="1">
                                                            <Key frame="13" value="0.2972" />
                                                            <Key frame="26" value="0.2972" />
                                                            <Key frame="38" value="0.2972" />
                                                            <Key frame="51" value="0.2972" />
                                                            <Key frame="63" value="0.2972" />
                                                            <Key frame="76" value="0.2972" />
                                                            <Key frame="88" value="0.2972" />
                                                            <Key frame="101" value="0.2972" />
                                                            <Key frame="113" value="0.2972" />
                                                            <Key frame="126" value="0.2972" />
                                                            <Key frame="138" value="0.2972" />
                                                            <Key frame="151" value="0.2972" />
                                                            <Key frame="163" value="0.2972" />
                                                            <Key frame="176" value="0.2972" />
                                                            <Key frame="188" value="0.2972" />
                                                            <Key frame="201" value="0.2972" />
                                                            <Key frame="213" value="0.2972" />
                                                            <Key frame="226" value="0.2972" />
                                                            <Key frame="238" value="0.2972" />
                                                            <Key frame="251" value="0.2972" />
                                                            <Key frame="263" value="0.2972" />
                                                            <Key frame="276" value="0.2972" />
                                                            <Key frame="288" value="0.2972" />
                                                            <Key frame="301" value="0.2972" />
                                                            <Key frame="313" value="0.2972" />
                                                            <Key frame="326" value="0.2972" />
                                                            <Key frame="338" value="0.2972" />
                                                            <Key frame="351" value="0.2972" />
                                                            <Key frame="363" value="0.2972" />
                                                            <Key frame="376" value="0.2972" />
                                                            <Key frame="388" value="0.2972" />
                                                            <Key frame="401" value="0.2972" />
                                                            <Key frame="413" value="0.2972" />
                                                            <Key frame="426" value="0.2972" />
                                                            <Key frame="438" value="0.2972" />
                                                            <Key frame="451" value="0.2972" />
                                                            <Key frame="463" value="0.2972" />
                                                            <Key frame="476" value="0.2972" />
                                                            <Key frame="488" value="0.2972" />
                                                            <Key frame="501" value="0.2972" />
                                                            <Key frame="513" value="0.2972" />
                                                            <Key frame="526" value="0.2972" />
                                                            <Key frame="538" value="0.2972" />
                                                            <Key frame="551" value="0.2972" />
                                                            <Key frame="563" value="0.2972" />
                                                            <Key frame="576" value="0.2972" />
                                                            <Key frame="588" value="0.2972" />
                                                            <Key frame="601" value="0.2972" />
                                                            <Key frame="613" value="0.2972" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" unit="0">
                                                            <Key frame="13" value="70.1352" />
                                                            <Key frame="26" value="70.1352" />
                                                            <Key frame="38" value="70.0473" />
                                                            <Key frame="51" value="70.1352" />
                                                            <Key frame="63" value="70.0473" />
                                                            <Key frame="76" value="70.1352" />
                                                            <Key frame="88" value="63.6312" />
                                                            <Key frame="101" value="44.8224" />
                                                            <Key frame="113" value="-1.23289" />
                                                            <Key frame="126" value="-14.0651" />
                                                            <Key frame="138" value="-13.274" />
                                                            <Key frame="151" value="-13.1862" />
                                                            <Key frame="163" value="-12.8346" />
                                                            <Key frame="176" value="-7.91266" />
                                                            <Key frame="188" value="4.48007" />
                                                            <Key frame="201" value="11.072" />
                                                            <Key frame="213" value="12.7419" />
                                                            <Key frame="226" value="11.7751" />
                                                            <Key frame="238" value="-23.03" />
                                                            <Key frame="251" value="-59.6809" />
                                                            <Key frame="263" value="-64.9544" />
                                                            <Key frame="276" value="-65.2181" />
                                                            <Key frame="288" value="-65.2181" />
                                                            <Key frame="301" value="-65.1302" />
                                                            <Key frame="313" value="-58.7141" />
                                                            <Key frame="326" value="-28.3914" />
                                                            <Key frame="338" value="-12.483" />
                                                            <Key frame="351" value="-9.58261" />
                                                            <Key frame="363" value="-9.40682" />
                                                            <Key frame="376" value="-9.14314" />
                                                            <Key frame="388" value="-7.38531" />
                                                            <Key frame="401" value="-7.38531" />
                                                            <Key frame="413" value="-4.83644" />
                                                            <Key frame="426" value="12.3024" />
                                                            <Key frame="438" value="56.7756" />
                                                            <Key frame="451" value="58.9729" />
                                                            <Key frame="463" value="60.1155" />
                                                            <Key frame="476" value="60.4671" />
                                                            <Key frame="488" value="69.4321" />
                                                            <Key frame="501" value="87.0983" />
                                                            <Key frame="513" value="89.7351" />
                                                            <Key frame="526" value="91.3171" />
                                                            <Key frame="538" value="91.1413" />
                                                            <Key frame="551" value="69.4321" />
                                                            <Key frame="563" value="26.0135" />
                                                            <Key frame="576" value="17.7517" />
                                                            <Key frame="588" value="82.7916" />
                                                            <Key frame="601" value="46.4044" />
                                                            <Key frame="613" value="41.2188" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" unit="0">
                                                            <Key frame="13" value="16.8728" />
                                                            <Key frame="26" value="16.8728" />
                                                            <Key frame="38" value="16.8728" />
                                                            <Key frame="51" value="16.6091" />
                                                            <Key frame="63" value="16.697" />
                                                            <Key frame="76" value="16.7849" />
                                                            <Key frame="88" value="16.8728" />
                                                            <Key frame="101" value="16.697" />
                                                            <Key frame="113" value="12.5661" />
                                                            <Key frame="126" value="10.1051" />
                                                            <Key frame="138" value="9.48991" />
                                                            <Key frame="151" value="7.55628" />
                                                            <Key frame="163" value="7.11683" />
                                                            <Key frame="176" value="8.17153" />
                                                            <Key frame="188" value="8.08364" />
                                                            <Key frame="201" value="8.08364" />
                                                            <Key frame="213" value="8.17153" />
                                                            <Key frame="226" value="9.05044" />
                                                            <Key frame="238" value="8.78677" />
                                                            <Key frame="251" value="8.17153" />
                                                            <Key frame="263" value="12.9177" />
                                                            <Key frame="276" value="13.2692" />
                                                            <Key frame="288" value="13.3571" />
                                                            <Key frame="301" value="13.5329" />
                                                            <Key frame="313" value="13.7087" />
                                                            <Key frame="326" value="11.5993" />
                                                            <Key frame="338" value="-13.5377" />
                                                            <Key frame="351" value="-18" />
                                                            <Key frame="363" value="-18" />
                                                            <Key frame="376" value="-18" />
                                                            <Key frame="388" value="-18" />
                                                            <Key frame="401" value="-5.62747" />
                                                            <Key frame="413" value="12.0388" />
                                                            <Key frame="426" value="29.7929" />
                                                            <Key frame="438" value="36.0332" />
                                                            <Key frame="451" value="30.8476" />
                                                            <Key frame="463" value="30.4081" />
                                                            <Key frame="476" value="30.496" />
                                                            <Key frame="488" value="36.3848" />
                                                            <Key frame="501" value="31.0234" />
                                                            <Key frame="513" value="13.1813" />
                                                            <Key frame="526" value="9.13833" />
                                                            <Key frame="538" value="12.4782" />
                                                            <Key frame="551" value="25.0467" />
                                                            <Key frame="563" value="25.3104" />
                                                            <Key frame="576" value="25.4862" />
                                                            <Key frame="588" value="25.5741" />
                                                            <Key frame="601" value="24.4315" />
                                                            <Key frame="613" value="25.2225" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" unit="0">
                                                            <Key frame="13" value="-36.3896" />
                                                            <Key frame="26" value="-36.3896" />
                                                            <Key frame="38" value="-36.4775" />
                                                            <Key frame="51" value="-36.4775" />
                                                            <Key frame="63" value="-36.3896" />
                                                            <Key frame="76" value="-36.4775" />
                                                            <Key frame="88" value="-36.4775" />
                                                            <Key frame="101" value="-36.4775" />
                                                            <Key frame="113" value="-36.4775" />
                                                            <Key frame="126" value="-36.5654" />
                                                            <Key frame="138" value="-36.6533" />
                                                            <Key frame="151" value="-104.5" />
                                                            <Key frame="163" value="-104.5" />
                                                            <Key frame="176" value="-104.5" />
                                                            <Key frame="188" value="-104.5" />
                                                            <Key frame="201" value="-104.5" />
                                                            <Key frame="213" value="-104.5" />
                                                            <Key frame="226" value="-104.5" />
                                                            <Key frame="238" value="-104.5" />
                                                            <Key frame="251" value="-104.5" />
                                                            <Key frame="263" value="-99.5837" />
                                                            <Key frame="276" value="-99.5837" />
                                                            <Key frame="288" value="-99.6716" />
                                                            <Key frame="301" value="-99.6716" />
                                                            <Key frame="313" value="-99.6716" />
                                                            <Key frame="326" value="-98.0896" />
                                                            <Key frame="338" value="-94.7497" />
                                                            <Key frame="351" value="-93.1676" />
                                                            <Key frame="363" value="-93.2555" />
                                                            <Key frame="376" value="-93.2555" />
                                                            <Key frame="388" value="-93.1676" />
                                                            <Key frame="401" value="-93.3434" />
                                                            <Key frame="413" value="-93.3434" />
                                                            <Key frame="426" value="-93.4313" />
                                                            <Key frame="438" value="-97.6501" />
                                                            <Key frame="451" value="-98.7048" />
                                                            <Key frame="463" value="-99.2322" />
                                                            <Key frame="476" value="-104.5" />
                                                            <Key frame="488" value="-104.5" />
                                                            <Key frame="501" value="-104.5" />
                                                            <Key frame="513" value="-104.5" />
                                                            <Key frame="526" value="-104.5" />
                                                            <Key frame="538" value="-104.5" />
                                                            <Key frame="551" value="-104.5" />
                                                            <Key frame="563" value="-104.5" />
                                                            <Key frame="576" value="-104.5" />
                                                            <Key frame="588" value="-104.5" />
                                                            <Key frame="601" value="-104.5" />
                                                            <Key frame="613" value="-104.5" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" unit="0">
                                                            <Key frame="13" value="12.7467" />
                                                            <Key frame="26" value="12.7467" />
                                                            <Key frame="38" value="12.7467" />
                                                            <Key frame="51" value="12.7467" />
                                                            <Key frame="63" value="12.7467" />
                                                            <Key frame="76" value="12.8346" />
                                                            <Key frame="88" value="12.7467" />
                                                            <Key frame="101" value="12.7467" />
                                                            <Key frame="113" value="12.7467" />
                                                            <Key frame="126" value="12.7467" />
                                                            <Key frame="138" value="12.8346" />
                                                            <Key frame="151" value="12.8346" />
                                                            <Key frame="163" value="12.7467" />
                                                            <Key frame="176" value="14.6803" />
                                                            <Key frame="188" value="17.0534" />
                                                            <Key frame="201" value="17.7565" />
                                                            <Key frame="213" value="42.7178" />
                                                            <Key frame="226" value="79.896" />
                                                            <Key frame="238" value="85.8726" />
                                                            <Key frame="251" value="86.0484" />
                                                            <Key frame="263" value="86.1363" />
                                                            <Key frame="276" value="85.4332" />
                                                            <Key frame="288" value="82.4448" />
                                                            <Key frame="301" value="76.3803" />
                                                            <Key frame="313" value="71.81" />
                                                            <Key frame="326" value="70.5795" />
                                                            <Key frame="338" value="68.4701" />
                                                            <Key frame="351" value="66.6243" />
                                                            <Key frame="363" value="66.1849" />
                                                            <Key frame="376" value="63.7239" />
                                                            <Key frame="388" value="63.7239" />
                                                            <Key frame="401" value="63.5481" />
                                                            <Key frame="413" value="63.1087" />
                                                            <Key frame="426" value="62.9329" />
                                                            <Key frame="438" value="62.6692" />
                                                            <Key frame="451" value="60.9114" />
                                                            <Key frame="463" value="59.7688" />
                                                            <Key frame="476" value="54.7589" />
                                                            <Key frame="488" value="51.4191" />
                                                            <Key frame="501" value="50.628" />
                                                            <Key frame="513" value="50.628" />
                                                            <Key frame="526" value="48.255" />
                                                            <Key frame="538" value="48.1671" />
                                                            <Key frame="551" value="48.0792" />
                                                            <Key frame="563" value="48.0792" />
                                                            <Key frame="576" value="47.9913" />
                                                            <Key frame="588" value="48.0792" />
                                                            <Key frame="601" value="48.255" />
                                                            <Key frame="613" value="47.5518" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" unit="0">
                                                            <Key frame="13" value="11.9509" />
                                                            <Key frame="26" value="11.9509" />
                                                            <Key frame="38" value="11.9509" />
                                                            <Key frame="51" value="11.9509" />
                                                            <Key frame="63" value="11.9509" />
                                                            <Key frame="76" value="11.863" />
                                                            <Key frame="88" value="11.7751" />
                                                            <Key frame="101" value="11.7751" />
                                                            <Key frame="113" value="11.7751" />
                                                            <Key frame="126" value="13.0056" />
                                                            <Key frame="138" value="14.0603" />
                                                            <Key frame="151" value="20.3006" />
                                                            <Key frame="163" value="64.1586" />
                                                            <Key frame="176" value="58.4456" />
                                                            <Key frame="188" value="57.7425" />
                                                            <Key frame="201" value="57.1272" />
                                                            <Key frame="213" value="53.3479" />
                                                            <Key frame="226" value="38.7579" />
                                                            <Key frame="238" value="36.209" />
                                                            <Key frame="251" value="36.1211" />
                                                            <Key frame="263" value="36.1211" />
                                                            <Key frame="276" value="34.3633" />
                                                            <Key frame="288" value="21.0916" />
                                                            <Key frame="301" value="12.0388" />
                                                            <Key frame="313" value="7.99575" />
                                                            <Key frame="326" value="6.4137" />
                                                            <Key frame="338" value="4.2164" />
                                                            <Key frame="351" value="2.107" />
                                                            <Key frame="363" value="-0.353968" />
                                                            <Key frame="376" value="0.788627" />
                                                            <Key frame="388" value="0.788627" />
                                                            <Key frame="401" value="0.788627" />
                                                            <Key frame="413" value="0.524941" />
                                                            <Key frame="426" value="0.524941" />
                                                            <Key frame="438" value="0.524941" />
                                                            <Key frame="451" value="0.261268" />
                                                            <Key frame="463" value="-1.145" />
                                                            <Key frame="476" value="2.0191" />
                                                            <Key frame="488" value="2.63435" />
                                                            <Key frame="501" value="2.72224" />
                                                            <Key frame="513" value="2.72224" />
                                                            <Key frame="526" value="2.89802" />
                                                            <Key frame="538" value="31.7265" />
                                                            <Key frame="551" value="39.3731" />
                                                            <Key frame="563" value="53.7873" />
                                                            <Key frame="576" value="59.1487" />
                                                            <Key frame="588" value="59.1487" />
                                                            <Key frame="601" value="60.1155" />
                                                            <Key frame="613" value="60.6429" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" unit="1">
                                                            <Key frame="13" value="0.306" />
                                                            <Key frame="26" value="0.306" />
                                                            <Key frame="38" value="0.306" />
                                                            <Key frame="51" value="0.306" />
                                                            <Key frame="63" value="0.306" />
                                                            <Key frame="76" value="0.306" />
                                                            <Key frame="88" value="0.306" />
                                                            <Key frame="101" value="0.3064" />
                                                            <Key frame="113" value="0.306" />
                                                            <Key frame="126" value="0.306" />
                                                            <Key frame="138" value="0.306" />
                                                            <Key frame="151" value="0.306" />
                                                            <Key frame="163" value="0.306" />
                                                            <Key frame="176" value="0.306" />
                                                            <Key frame="188" value="0.306" />
                                                            <Key frame="201" value="0.306" />
                                                            <Key frame="213" value="0.306" />
                                                            <Key frame="226" value="0.306" />
                                                            <Key frame="238" value="0.306" />
                                                            <Key frame="251" value="0.306" />
                                                            <Key frame="263" value="0.306" />
                                                            <Key frame="276" value="0.306" />
                                                            <Key frame="288" value="0.3064" />
                                                            <Key frame="301" value="0.306" />
                                                            <Key frame="313" value="0.306" />
                                                            <Key frame="326" value="0.306" />
                                                            <Key frame="338" value="0.306" />
                                                            <Key frame="351" value="0.306" />
                                                            <Key frame="363" value="0.306" />
                                                            <Key frame="376" value="0.306" />
                                                            <Key frame="388" value="0.306" />
                                                            <Key frame="401" value="0.312" />
                                                            <Key frame="413" value="0.3184" />
                                                            <Key frame="426" value="0.3216" />
                                                            <Key frame="438" value="0.3216" />
                                                            <Key frame="451" value="0.326" />
                                                            <Key frame="463" value="0.326" />
                                                            <Key frame="476" value="0.326" />
                                                            <Key frame="488" value="0.326" />
                                                            <Key frame="501" value="0.326" />
                                                            <Key frame="513" value="0.326" />
                                                            <Key frame="526" value="0.326" />
                                                            <Key frame="538" value="0.326" />
                                                            <Key frame="551" value="0.326" />
                                                            <Key frame="563" value="0.326" />
                                                            <Key frame="576" value="0.326" />
                                                            <Key frame="588" value="0.326" />
                                                            <Key frame="601" value="0.326" />
                                                            <Key frame="613" value="0.326" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" unit="0">
                                                            <Key frame="13" value="89.652" />
                                                            <Key frame="26" value="89.652" />
                                                            <Key frame="38" value="89.652" />
                                                            <Key frame="51" value="89.652" />
                                                            <Key frame="63" value="89.652" />
                                                            <Key frame="76" value="52.2101" />
                                                            <Key frame="88" value="-2.72224" />
                                                            <Key frame="101" value="-1.93121" />
                                                            <Key frame="113" value="-1.93121" />
                                                            <Key frame="126" value="-0.876518" />
                                                            <Key frame="138" value="-1.31597" />
                                                            <Key frame="151" value="-0.612832" />
                                                            <Key frame="163" value="4.92435" />
                                                            <Key frame="176" value="6.06693" />
                                                            <Key frame="188" value="-13.2692" />
                                                            <Key frame="201" value="-52.9084" />
                                                            <Key frame="213" value="-58.7093" />
                                                            <Key frame="226" value="-54.9299" />
                                                            <Key frame="238" value="-51.5022" />
                                                            <Key frame="251" value="-51.5022" />
                                                            <Key frame="263" value="-51.2385" />
                                                            <Key frame="276" value="-9.13833" />
                                                            <Key frame="288" value="27.8641" />
                                                            <Key frame="301" value="44.6514" />
                                                            <Key frame="313" value="49.6612" />
                                                            <Key frame="326" value="49.6612" />
                                                            <Key frame="338" value="49.837" />
                                                            <Key frame="351" value="51.1554" />
                                                            <Key frame="363" value="53.089" />
                                                            <Key frame="376" value="88.4215" />
                                                            <Key frame="388" value="92.7282" />
                                                            <Key frame="401" value="93.6071" />
                                                            <Key frame="413" value="93.6071" />
                                                            <Key frame="426" value="93.6071" />
                                                            <Key frame="438" value="93.6071" />
                                                            <Key frame="451" value="93.8708" />
                                                            <Key frame="463" value="112.24" />
                                                            <Key frame="476" value="116.635" />
                                                            <Key frame="488" value="116.195" />
                                                            <Key frame="501" value="116.195" />
                                                            <Key frame="513" value="116.107" />
                                                            <Key frame="526" value="117.514" />
                                                            <Key frame="538" value="102.133" />
                                                            <Key frame="551" value="74.7104" />
                                                            <Key frame="563" value="56.341" />
                                                            <Key frame="576" value="42.8936" />
                                                            <Key frame="588" value="84.8179" />
                                                            <Key frame="601" value="47.4639" />
                                                            <Key frame="613" value="63.8997" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" unit="0">
                                                            <Key frame="13" value="-9.58261" />
                                                            <Key frame="26" value="-9.58261" />
                                                            <Key frame="38" value="-9.58261" />
                                                            <Key frame="51" value="-9.49471" />
                                                            <Key frame="63" value="-9.49471" />
                                                            <Key frame="76" value="-9.31893" />
                                                            <Key frame="88" value="-7.56109" />
                                                            <Key frame="101" value="-7.29742" />
                                                            <Key frame="113" value="-6.85796" />
                                                            <Key frame="126" value="-6.3306" />
                                                            <Key frame="138" value="-5.18802" />
                                                            <Key frame="151" value="-4.39699" />
                                                            <Key frame="163" value="-4.74855" />
                                                            <Key frame="176" value="-4.39699" />
                                                            <Key frame="188" value="-3.86964" />
                                                            <Key frame="201" value="1.0523" />
                                                            <Key frame="213" value="-0.00240423" />
                                                            <Key frame="226" value="-13.0104" />
                                                            <Key frame="238" value="-16.5261" />
                                                            <Key frame="251" value="-16.5261" />
                                                            <Key frame="263" value="-16.5261" />
                                                            <Key frame="276" value="-20.7449" />
                                                            <Key frame="288" value="8.52309" />
                                                            <Key frame="301" value="13.2692" />
                                                            <Key frame="313" value="11.5114" />
                                                            <Key frame="326" value="11.5114" />
                                                            <Key frame="338" value="12.1267" />
                                                            <Key frame="351" value="12.0388" />
                                                            <Key frame="363" value="-24.5242" />
                                                            <Key frame="376" value="-52.0343" />
                                                            <Key frame="388" value="-38.5869" />
                                                            <Key frame="401" value="-37.708" />
                                                            <Key frame="413" value="-37.3564" />
                                                            <Key frame="426" value="-36.829" />
                                                            <Key frame="438" value="-36.3896" />
                                                            <Key frame="451" value="-35.247" />
                                                            <Key frame="463" value="-27.952" />
                                                            <Key frame="476" value="-10.3736" />
                                                            <Key frame="488" value="-9.75839" />
                                                            <Key frame="501" value="-9.31893" />
                                                            <Key frame="513" value="-9.23104" />
                                                            <Key frame="526" value="-18.6354" />
                                                            <Key frame="538" value="-33.9286" />
                                                            <Key frame="551" value="-19.2507" />
                                                            <Key frame="563" value="-9.75839" />
                                                            <Key frame="576" value="-9.6705" />
                                                            <Key frame="588" value="-9.6705" />
                                                            <Key frame="601" value="-9.40682" />
                                                            <Key frame="613" value="-9.75839" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" unit="0">
                                                            <Key frame="13" value="16.3455" />
                                                            <Key frame="26" value="16.3455" />
                                                            <Key frame="38" value="16.2576" />
                                                            <Key frame="51" value="16.2576" />
                                                            <Key frame="63" value="16.2576" />
                                                            <Key frame="76" value="16.3455" />
                                                            <Key frame="88" value="16.3455" />
                                                            <Key frame="101" value="16.3455" />
                                                            <Key frame="113" value="16.3455" />
                                                            <Key frame="126" value="31.6386" />
                                                            <Key frame="138" value="104.5" />
                                                            <Key frame="151" value="104.5" />
                                                            <Key frame="163" value="104.5" />
                                                            <Key frame="176" value="96.8543" />
                                                            <Key frame="188" value="77.7818" />
                                                            <Key frame="201" value="54.4026" />
                                                            <Key frame="213" value="56.3362" />
                                                            <Key frame="226" value="67.7621" />
                                                            <Key frame="238" value="68.2016" />
                                                            <Key frame="251" value="68.1137" />
                                                            <Key frame="263" value="68.2016" />
                                                            <Key frame="276" value="68.4652" />
                                                            <Key frame="288" value="51.59" />
                                                            <Key frame="301" value="50.3596" />
                                                            <Key frame="313" value="50.2717" />
                                                            <Key frame="326" value="50.2717" />
                                                            <Key frame="338" value="50.2717" />
                                                            <Key frame="351" value="50.3596" />
                                                            <Key frame="363" value="50.2717" />
                                                            <Key frame="376" value="50.008" />
                                                            <Key frame="388" value="62.0492" />
                                                            <Key frame="401" value="62.137" />
                                                            <Key frame="413" value="62.137" />
                                                            <Key frame="426" value="62.137" />
                                                            <Key frame="438" value="62.137" />
                                                            <Key frame="451" value="65.389" />
                                                            <Key frame="463" value="102.567" />
                                                            <Key frame="476" value="104.5" />
                                                            <Key frame="488" value="104.5" />
                                                            <Key frame="501" value="104.5" />
                                                            <Key frame="513" value="104.5" />
                                                            <Key frame="526" value="104.5" />
                                                            <Key frame="538" value="104.5" />
                                                            <Key frame="551" value="104.5" />
                                                            <Key frame="563" value="104.5" />
                                                            <Key frame="576" value="104.5" />
                                                            <Key frame="588" value="104.5" />
                                                            <Key frame="601" value="104.5" />
                                                            <Key frame="613" value="104.5" />
                                                        </ActuatorCurve>
                                                    </ActuatorList>
                                                </Timeline>
                                            </Box>
                                            <Box name="Move To (1)" id="5" localization="8" tooltip="Make the robot move to a configured point relative to its current location." x="859" y="226">
                                                <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.motion = ALProxy("ALMotion")
        self.positionErrorThresholdPos = 0.01
        self.positionErrorThresholdAng = 0.03

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.moveToward(0.0, 0.0, 0.0)

    def onInput_onStart(self):
        import almath
        # The command position estimation will be set to the sensor position
        # when the robot starts moving, so we use sensors first and commands later.
        initPosition = almath.Pose2D(self.motion.getRobotPosition(True))
        targetDistance = almath.Pose2D(self.getParameter("Distance X (m)"),
            self.getParameter("Distance Y (m)"),
            self.getParameter("Theta (deg)") * almath.PI / 180)
        expectedEndPosition = initPosition * targetDistance
        enableArms = self.getParameter("Arms movement enabled")
        self.motion.setMoveArmsEnabled(enableArms, enableArms)
        self.motion.moveTo(self.getParameter("Distance X (m)"),
            self.getParameter("Distance Y (m)"),
            self.getParameter("Theta (deg)") * almath.PI / 180)

        # The move is finished so output
        realEndPosition = almath.Pose2D(self.motion.getRobotPosition(False))
        positionError = realEndPosition.diff(expectedEndPosition)
        positionError.theta = almath.modulo2PI(positionError.theta)
        if (abs(positionError.x) < self.positionErrorThresholdPos
            and abs(positionError.y) < self.positionErrorThresholdPos
            and abs(positionError.theta) < self.positionErrorThresholdAng):
            self.onArrivedAtDestination()
        else:
            self.onStoppedBeforeArriving(positionError.toVector())

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onArrivedAtDestination" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot arrives at its destination." id="4" />
                                                <Output name="onStoppedBeforeArriving" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot stops before arriving to its destination. Returns a vector [x (m), y (m), theta(rad)] with the remaining distance up to the destination. This distance is expressed in the ROBOT frame." id="5" />
                                                <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0.2" min="-5" max="10" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="6" />
                                                <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-5" max="5" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="7" />
                                                <Parameter name="Theta (deg)" inherits_from_parent="0" content_type="2" value="90" default_value="0" min="-180" max="180" tooltip="The orientation in degrees for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="8" />
                                                <Parameter name="Arms movement enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Enables natural motion of the arms." id="9" />
                                                <Resource name="Legs" type="Lock" timeout="0" />
                                            </Box>
                                            <Box name="Goto (name)" id="6" localization="8" tooltip="Jump to the frame name set in parameters." x="1069" y="171">
                                                <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onInput_onGo(self):
        self.getParentTimeline().goTo(self.getParameter("Frame name"))]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onGo" type="1" type_size="1" nature="1" inner="0" tooltip="Parent timeline gotoTimeline when a signal is received on this input." id="2" />
                                                <Parameter name="Frame name" inherits_from_parent="0" content_type="3" value="menu" default_value="" custom_choice="0" tooltip="Name of the frame you want to go to." id="3" />
                                            </Box>
                                            <Box name="Random Eyes" id="7" localization="8" tooltip="The color of the eyes changes randomly.&#x0A;&#x0A;Note: It is a never ending box. You have to call the onStop input to stop it." x="516" y="407">
                                                <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import random

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False
        self.leds = ALProxy("ALLeds")

    def onUnload(self):
        #puts code for box cleanup here
        self.bMustStop = True

    def onInput_onStart(self):
        #self.onStopped() # activate output of the box
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        self.bMustStop = False
        while( not self.bMustStop ):
            rRandTime = random.uniform(0.0,2.0)
            self.leds.fadeRGB("FaceLeds", 256*random.randint(0,255) + 256*256*random.randint(0,255) + random.randint(0,255), rRandTime)
            time.sleep(random.uniform(0.0,3.0))
        self.bIsRunning = False
        self.onStopped()

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is stopped." id="4" />
                                            </Box>
                                            <Link inputowner="12" indexofinput="2" outputowner="14" indexofoutput="4" />
                                            <Link inputowner="1" indexofinput="2" outputowner="13" indexofoutput="4" />
                                            <Link inputowner="2" indexofinput="2" outputowner="3" indexofoutput="4" />
                                            <Link inputowner="5" indexofinput="2" outputowner="4" indexofoutput="4" />
                                            <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="5" />
                                            <Link inputowner="4" indexofinput="2" outputowner="1" indexofoutput="5" />
                                            <Link inputowner="13" indexofinput="2" outputowner="0" indexofoutput="1" />
                                            <Link inputowner="14" indexofinput="2" outputowner="0" indexofoutput="1" />
                                            <Link inputowner="6" indexofinput="2" outputowner="5" indexofoutput="5" />
                                            <Link inputowner="6" indexofinput="2" outputowner="5" indexofoutput="4" />
                                            <Link inputowner="7" indexofinput="2" outputowner="0" indexofoutput="1" />
                                            <Link inputowner="7" indexofinput="3" outputowner="5" indexofoutput="5" />
                                            <Link inputowner="7" indexofinput="3" outputowner="5" indexofoutput="4" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="marche" index="48">
                                        <Diagram>
                                            <Box name="Goto (name)" id="6" localization="8" tooltip="Jump to the frame name set in parameters." x="614" y="91">
                                                <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onInput_onGo(self):
        self.getParentTimeline().goTo(self.getParameter("Frame name"))]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onGo" type="1" type_size="1" nature="1" inner="0" tooltip="Parent timeline gotoTimeline when a signal is received on this input." id="2" />
                                                <Parameter name="Frame name" inherits_from_parent="0" content_type="3" value="menu" default_value="" custom_choice="0" tooltip="Name of the frame you want to go to." id="3" />
                                            </Box>
                                            <Box name="Move To" id="2" localization="8" tooltip="Make the robot move to a configured point relative to its current location." x="412" y="99">
                                                <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.motion = ALProxy("ALMotion")
        self.positionErrorThresholdPos = 0.01
        self.positionErrorThresholdAng = 0.03

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.moveToward(0.0, 0.0, 0.0)

    def onInput_onStart(self):
        import almath
        # The command position estimation will be set to the sensor position
        # when the robot starts moving, so we use sensors first and commands later.
        initPosition = almath.Pose2D(self.motion.getRobotPosition(True))
        targetDistance = almath.Pose2D(self.getParameter("Distance X (m)"),
            self.getParameter("Distance Y (m)"),
            self.getParameter("Theta (deg)") * almath.PI / 180)
        expectedEndPosition = initPosition * targetDistance
        enableArms = self.getParameter("Arms movement enabled")
        self.motion.setMoveArmsEnabled(enableArms, enableArms)
        self.motion.moveTo(self.getParameter("Distance X (m)"),
            self.getParameter("Distance Y (m)"),
            self.getParameter("Theta (deg)") * almath.PI / 180)

        # The move is finished so output
        realEndPosition = almath.Pose2D(self.motion.getRobotPosition(False))
        positionError = realEndPosition.diff(expectedEndPosition)
        positionError.theta = almath.modulo2PI(positionError.theta)
        if (abs(positionError.x) < self.positionErrorThresholdPos
            and abs(positionError.y) < self.positionErrorThresholdPos
            and abs(positionError.theta) < self.positionErrorThresholdAng):
            self.onArrivedAtDestination()
        else:
            self.onStoppedBeforeArriving(positionError.toVector())

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onArrivedAtDestination" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot arrives at its destination." id="4" />
                                                <Output name="onStoppedBeforeArriving" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot stops before arriving to its destination. Returns a vector [x (m), y (m), theta(rad)] with the remaining distance up to the destination. This distance is expressed in the ROBOT frame." id="5" />
                                                <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="2" default_value="0.2" min="-5" max="10" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="6" />
                                                <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-5" max="5" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="7" />
                                                <Parameter name="Theta (deg)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-180" max="180" tooltip="The orientation in degrees for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="8" />
                                                <Parameter name="Arms movement enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Enables natural motion of the arms." id="9" />
                                                <Resource name="Legs" type="Lock" timeout="0" />
                                            </Box>
                                            <Link inputowner="6" indexofinput="2" outputowner="2" indexofoutput="4" />
                                            <Link inputowner="6" indexofinput="2" outputowner="2" indexofoutput="5" />
                                            <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="tourne" index="56">
                                        <Diagram>
                                            <Box name="Move To" id="2" localization="8" tooltip="Make the robot move to a configured point relative to its current location." x="325" y="97">
                                                <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.motion = ALProxy("ALMotion")
        self.positionErrorThresholdPos = 0.01
        self.positionErrorThresholdAng = 0.03

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.moveToward(0.0, 0.0, 0.0)

    def onInput_onStart(self):
        import almath
        # The command position estimation will be set to the sensor position
        # when the robot starts moving, so we use sensors first and commands later.
        initPosition = almath.Pose2D(self.motion.getRobotPosition(True))
        targetDistance = almath.Pose2D(self.getParameter("Distance X (m)"),
            self.getParameter("Distance Y (m)"),
            self.getParameter("Theta (deg)") * almath.PI / 180)
        expectedEndPosition = initPosition * targetDistance
        enableArms = self.getParameter("Arms movement enabled")
        self.motion.setMoveArmsEnabled(enableArms, enableArms)
        self.motion.moveTo(self.getParameter("Distance X (m)"),
            self.getParameter("Distance Y (m)"),
            self.getParameter("Theta (deg)") * almath.PI / 180)

        # The move is finished so output
        realEndPosition = almath.Pose2D(self.motion.getRobotPosition(False))
        positionError = realEndPosition.diff(expectedEndPosition)
        positionError.theta = almath.modulo2PI(positionError.theta)
        if (abs(positionError.x) < self.positionErrorThresholdPos
            and abs(positionError.y) < self.positionErrorThresholdPos
            and abs(positionError.theta) < self.positionErrorThresholdAng):
            self.onArrivedAtDestination()
        else:
            self.onStoppedBeforeArriving(positionError.toVector())

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onArrivedAtDestination" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot arrives at its destination." id="4" />
                                                <Output name="onStoppedBeforeArriving" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot stops before arriving to its destination. Returns a vector [x (m), y (m), theta(rad)] with the remaining distance up to the destination. This distance is expressed in the ROBOT frame." id="5" />
                                                <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0.2" min="-5" max="10" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="6" />
                                                <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-5" max="5" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="7" />
                                                <Parameter name="Theta (deg)" inherits_from_parent="0" content_type="2" value="90" default_value="0" min="-180" max="180" tooltip="The orientation in degrees for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="8" />
                                                <Parameter name="Arms movement enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Enables natural motion of the arms." id="9" />
                                                <Resource name="Legs" type="Lock" timeout="0" />
                                            </Box>
                                            <Box name="Goto (name)" id="6" localization="8" tooltip="Jump to the frame name set in parameters." x="512" y="106">
                                                <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onInput_onGo(self):
        self.getParentTimeline().goTo(self.getParameter("Frame name"))]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onGo" type="1" type_size="1" nature="1" inner="0" tooltip="Parent timeline gotoTimeline when a signal is received on this input." id="2" />
                                                <Parameter name="Frame name" inherits_from_parent="0" content_type="3" value="menu" default_value="" custom_choice="0" tooltip="Name of the frame you want to go to." id="3" />
                                            </Box>
                                            <Link inputowner="6" indexofinput="2" outputowner="2" indexofoutput="4" />
                                            <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="pas" index="60">
                                        <Diagram>
                                            <Box name="Move To" id="9" localization="8" tooltip="Make the robot move to a configured point relative to its current location." x="503" y="12">
                                                <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.motion = ALProxy("ALMotion")
        self.positionErrorThresholdPos = 0.01
        self.positionErrorThresholdAng = 0.03

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.moveToward(0.0, 0.0, 0.0)

    def onInput_onStart(self):
        import almath
        # The command position estimation will be set to the sensor position
        # when the robot starts moving, so we use sensors first and commands later.
        initPosition = almath.Pose2D(self.motion.getRobotPosition(True))
        targetDistance = almath.Pose2D(self.getParameter("Distance X (m)"),
            self.getParameter("Distance Y (m)"),
            self.getParameter("Theta (deg)") * almath.PI / 180)
        expectedEndPosition = initPosition * targetDistance
        enableArms = self.getParameter("Arms movement enabled")
        self.motion.setMoveArmsEnabled(enableArms, enableArms)
        self.motion.moveTo(self.getParameter("Distance X (m)"),
            self.getParameter("Distance Y (m)"),
            self.getParameter("Theta (deg)") * almath.PI / 180)

        # The move is finished so output
        realEndPosition = almath.Pose2D(self.motion.getRobotPosition(False))
        positionError = realEndPosition.diff(expectedEndPosition)
        positionError.theta = almath.modulo2PI(positionError.theta)
        if (abs(positionError.x) < self.positionErrorThresholdPos
            and abs(positionError.y) < self.positionErrorThresholdPos
            and abs(positionError.theta) < self.positionErrorThresholdAng):
            self.onArrivedAtDestination()
        else:
            self.onStoppedBeforeArriving(positionError.toVector())

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onArrivedAtDestination" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot arrives at its destination." id="4" />
                                                <Output name="onStoppedBeforeArriving" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot stops before arriving to its destination. Returns a vector [x (m), y (m), theta(rad)] with the remaining distance up to the destination. This distance is expressed in the ROBOT frame." id="5" />
                                                <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0.2" min="-5" max="10" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="6" />
                                                <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0.5" default_value="0" min="-5" max="5" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="7" />
                                                <Parameter name="Theta (deg)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-180" max="180" tooltip="The orientation in degrees for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="8" />
                                                <Parameter name="Arms movement enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Enables natural motion of the arms." id="9" />
                                                <Resource name="Legs" type="Lock" timeout="0" />
                                            </Box>
                                            <Box name="Goto (name)" id="2" localization="8" tooltip="Jump to the frame name set in parameters." x="757" y="43">
                                                <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onInput_onGo(self):
        self.getParentTimeline().goTo(self.getParameter("Frame name"))]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onGo" type="1" type_size="1" nature="1" inner="0" tooltip="Parent timeline gotoTimeline when a signal is received on this input." id="2" />
                                                <Parameter name="Frame name" inherits_from_parent="0" content_type="3" value="menu" default_value="" custom_choice="0" tooltip="Name of the frame you want to go to." id="3" />
                                            </Box>
                                            <Link inputowner="2" indexofinput="2" outputowner="9" indexofoutput="5" />
                                            <Link inputowner="2" indexofinput="2" outputowner="9" indexofoutput="4" />
                                            <Link inputowner="9" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="cherche" index="72">
                                        <Diagram>
                                            <Box name="Face Detection" id="1" localization="8" tooltip="Detect people&apos;s face and return the number of detected faces.&#x0A;&#x0A;Note: Detect even faces that are not registered in the faces database (that&#x0A;you can teach him with the Learn Face box)." x="573" y="147">
                                                <bitmap>media/images/box/interaction/face.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Input name="FaceDetected" type="0" type_size="1" nature="4" stm_value_name="FaceDetected" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="4" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is stopped." id="5" />
                                                <Output name="numberOfFaces" type="2" type_size="1" nature="2" inner="0" tooltip="Number of detected faces. This output is stimulated each time the number of&#x0A;detected faces change." id="6" />
                                                <Output name="onNoFace" type="1" type_size="1" nature="2" inner="0" tooltip="No face is detected." id="7" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram>
                                                                <Box name="Count Det. Faces" id="3" localization="8" tooltip="Process face detection extractor data (FaceDetected) to count the number&#x0A;of detected faces and notify when there is no face detected.&#x0A;&#x0A;An output (either one or the other) is stimulated each time the number of&#x0A;detected faces change." x="174" y="71">
                                                                    <bitmap>media/images/box/interaction/reco_face.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nFacesDetected = -1

    def onUnload(self):
        #puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(len(p) > 0):
            if(self.nFacesDetected != len(p[1]) -1): # an additional array has been placed at the end for time
                self.nFacesDetected = len(p[1]) -1  # filtered info and has to be substracted when counting faces
                if(self.nFacesDetected != 0):
                    self.onFaceDetected( self.nFacesDetected )
                else:
                    self.onNoFace()
        else:
            if(self.nFacesDetected != 0):
                self.nFacesDetected = 0
                self.onNoFace()

    def onInput_onStop(self):
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input. It must be the&#x0A;FaceDetected extractor data." id="2" />
                                                                    <Output name="onFaceDetected" type="2" type_size="1" nature="1" inner="0" tooltip="Number of detected faces." id="3" />
                                                                    <Output name="onNoFace" type="1" type_size="1" nature="1" inner="0" tooltip="No face is detected." id="4" />
                                                                </Box>
                                                                <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="4" />
                                                                <Link inputowner="0" indexofinput="6" outputowner="3" indexofoutput="3" />
                                                                <Link inputowner="0" indexofinput="7" outputowner="3" indexofoutput="4" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                            </Box>
                                            <Box name="Say" id="4" localization="8" tooltip="Say some text. Note that you must open the box to enter the text." x="1102" y="203">
                                                <bitmap>media/images/box/interaction/say.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                                                <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="87" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram>
                                                                <Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="456" y="63">
                                                                    <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                                    <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                                </Box>
                                                                <Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="158" y="65">
                                                                    <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Arabic" : "  ",
			"Czech" : " Ahoj ",
			"Danish" : " Hej ",
			"German" : " Hallo ",
			"Greek" : "  ",
			"English" : " Bonjour moi c\'est nao et je vais vous presenter polytech annecy. C\'est une ecole d\'ingenieur qui comporte une prepa integrer et trois specialiter S N I, I D U et M M ",
			"Spanish" : " Hola ",
			"Finnish" : " Hei ",
			"French" : " Bonjour moi c\'est nao et je vais vous presenter polytech annecy. C\'est une ecole d\'ingenieur qui comporte une prepa integrer et trois specialiter S N I, I D U et M M ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Dutch" : " Hallo ",
			"Norwegian" : "  ",
			"Polish" : " Cześć ",
			"Brazilian" : " Olá ",
			"Portuguese" : " Olá ",
			"Russian" : " Bonjour moi c\'est nao et je vais vous presenter polytech annecy. C\'est une ecole d\'ingenieur qui comporte une prepa integrer et trois specialiter S N I, I D U et M M ",
			"Swedish" : " Hallå ",
			"Turkish" : " Merhaba ",
			"Chinese" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <arabic>
                                                                            <![CDATA[]]>
</arabic>
                                                                        <czech>
                                                                            <![CDATA[Ahoj]]>
</czech>
                                                                        <danish>
                                                                            <![CDATA[Hej]]>
</danish>
                                                                        <german>
                                                                            <![CDATA[Hallo]]>
</german>
                                                                        <greek>
                                                                            <![CDATA[]]>
</greek>
                                                                        <english>
                                                                            <![CDATA[Bonjour moi c'est nao et je vais vous presenter polytech annecy. C'est une ecole d'ingenieur qui comporte une prepa integrer et trois specialiter S N I, I D U et M M]]>
</english>
                                                                        <spanish>
                                                                            <![CDATA[Hola]]>
</spanish>
                                                                        <finnish>
                                                                            <![CDATA[Hei]]>
</finnish>
                                                                        <french>
                                                                            <![CDATA[Bonjour moi c'est nao et je vais vous presenter polytech annecy. C'est une ecole d'ingenieur qui comporte une prepa integrer et trois specialiter S N I, I D U et M M]]>
</french>
                                                                        <italian>
                                                                            <![CDATA[Ciao]]>
</italian>
                                                                        <japanese>
                                                                            <![CDATA[こんにちは]]>
</japanese>
                                                                        <korean>
                                                                            <![CDATA[안녕하세요]]>
</korean>
                                                                        <dutch>
                                                                            <![CDATA[Hallo]]>
</dutch>
                                                                        <norwegian>
                                                                            <![CDATA[]]>
</norwegian>
                                                                        <polish>
                                                                            <![CDATA[Cześć]]>
</polish>
                                                                        <brazilian>
                                                                            <![CDATA[Olá]]>
</brazilian>
                                                                        <portuguese>
                                                                            <![CDATA[Olá]]>
</portuguese>
                                                                        <russian>
                                                                            <![CDATA[Bonjour moi c'est nao et je vais vous presenter polytech annecy. C'est une ecole d'ingenieur qui comporte une prepa integrer et trois specialiter S N I, I D U et M M]]>
</russian>
                                                                        <swedish>
                                                                            <![CDATA[Hallå]]>
</swedish>
                                                                        <turkish>
                                                                            <![CDATA[Merhaba]]>
</turkish>
                                                                        <chinese>
                                                                            <![CDATA[]]>
</chinese>
                                                                        <language>-1</language>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                    <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                </Box>
                                                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                                <Resource name="Speech" type="Lock" timeout="0" />
                                            </Box>
                                            <Box name="Delay" id="14" localization="8" tooltip="Wait a moment before triggering the output. &#x0A;Can be stopped anytime. &#x0A;Multiple inputs will trigger multiple outputs." x="857" y="211">
                                                <bitmap>media/images/box/wait.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.delayed = []

    def onUnload(self):
        self.cancelDelays()

    def cancelDelays(self):
        cancel_list = list(self.delayed)
        for d in cancel_list:
            d.cancel()

    def cleanDelay(self, fut, fut_ref):
        self.delayed.remove(fut)

    def triggerOutput(self):
        self.timerOutput()

    def onInput_onStart(self):
        import qi
        import functools
        delay_future = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))
        # keep the async operation in an array for cancel
        # and remove it when it is finished in the callback
        self.delayed.append(delay_future)
        bound_clean = functools.partial(self.cleanDelay, delay_future)
        delay_future.addCallback(bound_clean)

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.delayed:
            self.timerOutput()
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Delay box with the configured timeout value." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                                                <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once delay set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                                                <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                                                <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently delaying at least one signal and cancelled, output will be stimulated." id="6" />
                                            </Box>
                                            <Box name="Goto (name)" id="2" localization="8" tooltip="Jump to the frame name set in parameters." x="1299" y="204">
                                                <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onInput_onGo(self):
        self.getParentTimeline().goTo(self.getParameter("Frame name"))]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onGo" type="1" type_size="1" nature="1" inner="0" tooltip="Parent timeline gotoTimeline when a signal is received on this input." id="2" />
                                                <Parameter name="Frame name" inherits_from_parent="0" content_type="3" value="menu" default_value="" custom_choice="0" tooltip="Name of the frame you want to go to." id="3" />
                                            </Box>
                                            <Box name="Subscribe to Event" id="7" localization="8" tooltip="Subscribes to an event in NAOqi&apos;s shared memory.&#x0A;When subscribed, the output will be triggered every time the event is raised." x="323" y="310">
                                                <bitmap>media/images/box/sensors/STM.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        pass

    def onLoad(self):
        self.BIND_PYTHON(self.getName(), "onEventCallback")
        self.memory = ALProxy("ALMemory")

    def onUnload(self):
        self.memory = None

    def onInput_onStart(self):
        self.memory.subscribeToEvent(self.getParameter("key"), self.getName(), "onEventCallback")

    def onInput_onStop(self):
        self.onStopped()

    def onEventCallback(self, key, value, message):
        self.onEvent(value)]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="" id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished. It contains the retrieved value from ALMemory." id="4" />
                                                <Output name="onError" type="3" type_size="1" nature="1" inner="0" tooltip="Output when error is raised by the behavior. Contains the error message." id="5" />
                                                <Output name="onEvent" type="0" type_size="1" nature="2" inner="0" tooltip="" id="6" />
                                                <Parameter name="key" inherits_from_parent="0" content_type="3" value="MyApplication/MyData" default_value="MyApplication/MyData" custom_choice="0" tooltip="" id="7" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="1" indexofoutput="7" />
                                            <Link inputowner="1" indexofinput="3" outputowner="1" indexofoutput="6" />
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                            <Link inputowner="4" indexofinput="2" outputowner="14" indexofoutput="4" />
                                            <Link inputowner="14" indexofinput="2" outputowner="1" indexofoutput="6" />
                                            <Link inputowner="2" indexofinput="2" outputowner="4" indexofoutput="4" />
                                            <Link inputowner="1" indexofinput="3" outputowner="7" indexofoutput="6" />
                                            <Link inputowner="14" indexofinput="3" outputowner="7" indexofoutput="6" />
                                            <Link inputowner="4" indexofinput="3" outputowner="7" indexofoutput="6" />
                                            <Link inputowner="7" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="python" index="81">
                                        <Diagram>
                                            <Box name="Permier box pytho" id="1" localization="8" tooltip="" x="362" y="154">
                                                <bitmap>media/images/box/box-python-script.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self,p):
        p = int(p[0])+int(p[1])
        self.nombre(str(p))
        #self.onStopped() #activate the output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="2" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Output name="nombre" type="3" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                            </Box>
                                            <Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="655" y="175">
                                                <bitmap>media/images/box/interaction/say.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                <Resource name="Speech" type="Lock" timeout="0" />
                                            </Box>
                                            <Box name="envois2 nombre" id="5" localization="8" tooltip="" x="192" y="136">
                                                <bitmap>media/images/box/box-python-script.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        #self.onStopped(p) #activate the output of the box
        self.sortie(["2","4"])
        pass

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped(p) #activate the output of the box]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="3" type_size="2" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Output name="sortie" type="3" type_size="2" nature="2" inner="0" tooltip="" id="5" />
                                            </Box>
                                            <Box name="Number Edit" id="3" localization="8" tooltip="Send the number you entered when the input is stimulated." plugin="numberedit_plugin" x="121" y="335">
                                                <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped(8)]]>
</content>
                                                </script>
                                                <pluginContent>
                                                    <number>8</number>
                                                </pluginContent>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the number on the output." id="2" />
                                                <Output name="onStopped" type="2" type_size="1" nature="2" inner="0" tooltip="The number you entered." id="3" />
                                            </Box>
                                            <Box name="Number Edit (1)" id="4" localization="8" tooltip="Send the number you entered when the input is stimulated." plugin="numberedit_plugin" x="123" y="393">
                                                <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped(3)]]>
</content>
                                                </script>
                                                <pluginContent>
                                                    <number>3</number>
                                                </pluginContent>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the number on the output." id="2" />
                                                <Output name="onStopped" type="2" type_size="1" nature="2" inner="0" tooltip="The number you entered." id="3" />
                                            </Box>
                                            <Box name="Wait For Signals" id="7" localization="8" tooltip="Wait for both inputs to be stimulated before stimulating its output." x="366" y="551">
                                                <bitmap>media/images/box/wait.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.ok = [False]*2
        self.tab = [False]*2

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onStart(self, nInput, p):
        self.ok[nInput] = True
        self.tab[nInput] = p
        bOutput = True
        for bOk in self.ok:
            bOutput = bOutput and bOk
        if( bOutput ):
            self.ok = [False]*2
            self.signalsReceived(self.tab)

    def onInput_signal1(self, p):
        self.onStart(0, p)

    def onInput_signal2(self, p):
        self.onStart(1, p)]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="signal1" type="2" type_size="1" nature="1" inner="0" tooltip="First signal to wait." id="2" />
                                                <Input name="signal2" type="2" type_size="1" nature="1" inner="0" tooltip="Second signal to wait." id="3" />
                                                <Output name="signalsReceived" type="2" type_size="2" nature="2" inner="0" tooltip="Signal sent when both inputs have been stimulated." id="4" />
                                            </Box>
                                            <Box name="Say Text (1)" id="8" localization="8" tooltip="Say the text received on its input." x="769" y="326">
                                                <bitmap>media/images/box/interaction/say.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                <Resource name="Speech" type="Lock" timeout="0" />
                                            </Box>
                                            <Box name="Permier box pytho (1)" id="9" localization="8" tooltip="" x="577" y="326">
                                                <bitmap>media/images/box/box-python-script.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self,p):
        p = int(p[0])+int(p[1])
        self.nombre(str(p))
        #self.onStopped() #activate the output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="2" type_size="2" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Output name="nombre" type="3" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                            </Box>
                                            <Box name="fusioneur de nombre" id="6" localization="8" tooltip="" x="368" y="366">
                                                <bitmap>media/images/box/box-python-script.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tab = [False]*2

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onStart(self, nInput, p):
        self.tab[nInput] = p
        if( self.tab[0] != False and self.tab[1] != False):
            tab = self.tab
            self.tab = [False]*2
            self.sortie(tab)

    def onInput_nombre1(self, p):
        self.onStart(0, p)

    def onInput_nombre2(self, p):
        self.onStart(1, p)]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="nombre1" type="2" type_size="1" nature="1" inner="0" tooltip="" id="2" />
                                                <Input name="nombre2" type="2" type_size="1" nature="1" inner="0" tooltip="" id="3" />
                                                <Output name="sortie" type="2" type_size="2" nature="2" inner="0" tooltip="" id="4" />
                                            </Box>
                                            <Box name="Goto (name)" id="10" localization="8" tooltip="Jump to the frame name set in parameters." x="1128" y="350">
                                                <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onInput_onGo(self):
        self.getParentTimeline().goTo(self.getParameter("Frame name"))]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onGo" type="1" type_size="1" nature="1" inner="0" tooltip="Parent timeline gotoTimeline when a signal is received on this input." id="2" />
                                                <Parameter name="Frame name" inherits_from_parent="0" content_type="3" value="menu" default_value="" custom_choice="0" tooltip="Name of the frame you want to go to." id="3" />
                                            </Box>
                                            <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="5" />
                                            <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                            <Link inputowner="1" indexofinput="2" outputowner="5" indexofoutput="5" />
                                            <Link inputowner="8" indexofinput="2" outputowner="9" indexofoutput="5" />
                                            <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="1" />
                                            <Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="1" />
                                            <Link inputowner="6" indexofinput="2" outputowner="3" indexofoutput="3" />
                                            <Link inputowner="9" indexofinput="2" outputowner="6" indexofoutput="4" />
                                            <Link inputowner="6" indexofinput="3" outputowner="4" indexofoutput="3" />
                                            <Link inputowner="10" indexofinput="2" outputowner="8" indexofoutput="4" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="lie le texte" index="88">
                                        <Diagram>
                                            <Box name="Get Attached File" id="5" localization="8" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="519" y="87">
                                                <bitmap>media/images/box/folder.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.framemanager = ALProxy("ALFrameManager")

    def onInput_onStart(self):
        self.onStopped(self.framemanager.getBehaviorPath(self.behaviorId) + self.getParameter("File name"))]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" />
                                                <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" />
                                                <Parameter name="File name" inherits_from_parent="1" content_type="4" value="/../texte.txt" default_value="" tooltip="Name of the file which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" />
                                            </Box>
                                            <Box name="Say Text" id="3" localization="8" tooltip="Say the text received on its input." x="1098" y="245">
                                                <bitmap>media/images/box/interaction/say.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                <Resource name="Speech" type="Lock" timeout="0" />
                                            </Box>
                                            <Box name="Goto (name)" id="1" localization="8" tooltip="Jump to the frame name set in parameters." x="1270" y="186">
                                                <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onInput_onGo(self):
        self.getParentTimeline().goTo(self.getParameter("Frame name"))]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onGo" type="1" type_size="1" nature="1" inner="0" tooltip="Parent timeline gotoTimeline when a signal is received on this input." id="2" />
                                                <Parameter name="Frame name" inherits_from_parent="0" content_type="3" value="menu" default_value="" custom_choice="0" tooltip="Name of the frame you want to go to." id="3" />
                                            </Box>
                                            <Box name="envois text (3)" id="4" localization="8" tooltip="" x="799" y="182">
                                                <bitmap>media/images/box/box-python-script.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        pass


    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, p):
        filin = open(p, "r")
        res = ''
        lignes = filin.readlines()

        filin.close()
        for i in range(len(lignes)):
            res = res + lignes[i]
        self.log(res)
        self.sortie(res)
        pass

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="sortie" type="3" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                            </Box>
                                            <Box name="Get Attached File (1)" id="2" localization="8" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="577" y="350">
                                                <bitmap>media/images/box/folder.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.framemanager = ALProxy("ALFrameManager")

    def onInput_onStart(self):
        self.onStopped(self.framemanager.getBehaviorPath(self.behaviorId) + self.getParameter("File name"))]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" />
                                                <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" />
                                                <Parameter name="File name" inherits_from_parent="1" content_type="4" value="/../mot reconu.txt" default_value="" tooltip="Name of the file which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" />
                                            </Box>
                                            <Link inputowner="4" indexofinput="2" outputowner="5" indexofoutput="3" />
                                            <Link inputowner="3" indexofinput="2" outputowner="4" indexofoutput="4" />
                                            <Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="3" />
                                            <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="rec" index="95">
                                        <Diagram>
                                            <Box name="Rec. Sound File" id="4" localization="8" tooltip="Record a sound on the robot. You can choose to record only with one&#x0A;microphone (the front head microphone) in ogg format, or with four microphones&#x0A;(front, sides and rear head&#x0A;microphones) in wav format." x="828" y="72">
                                                <bitmap>media/images/box/interaction/rec_sound.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        try:
            self.ad = ALProxy("ALAudioDevice")
        except Exception as e:
            self.ad = None
            self.logger.error(e)
        self.filepath = ""

    def onLoad(self):
        self.bIsRecording = False
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False
        if( self.bIsRecording ):
            self.ad.stopMicrophonesRecording()
            self.bIsRecording = False

    def onInput_onStart(self, p):
        if(self.bIsRunning):
            return
        self.bIsRunning = True
        sExtension = self.toExtension( self.getParameter("Microphones used") )
        self.filepath = p + sExtension
        if self.ad:
            self.ad.startMicrophonesRecording( self.filepath )
            self.bIsRecording = True
        else:
            self.logger.warning("No sound recorded")

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped(self.filepath)

    def toExtension(self, sMicrophones):
        if( sMicrophones == "Front head microphone only (.ogg)" ):
            return ".ogg"
        else:
            return ".wav"]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Launches the recording of the sound. The data received on this input must be the&#x0A;filename of the sound." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the recording of the sound." id="3" />
                                                <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Returns the absolute path of the output sound file at the end of the recording" id="4" />
                                                <Parameter name="Microphones used" inherits_from_parent="1" content_type="3" value="Front, sides and rear head microphones (.wav)" default_value="Front, sides and rear head microphones (.wav)" custom_choice="0" tooltip="Microphones used to record the sound.&#x0A;&#x0A;Note: If you use only the front head microphone the file will be saved in ogg format. If you use the&#x0A;front, sides and rear head microphones it will be saved in wav format." id="5">
                                                    <Choice value="Front head microphone only (.ogg)" />
                                                    <Choice value="Front, sides and rear head microphones (.wav)" />
                                                </Parameter>
                                            </Box>
                                            <Box name="Sound Loc." id="1" localization="8" tooltip="Every time a sound is detected, this box sends on its outputs:&#x0A;- the location of the sound source in relation to robot&apos;s head position.&#x0A;- robot&apos;s head position in relation to the rest of the body in the robot&apos;s space.&#x0A;&#x0A;V1.1.0" x="378" y="270">
                                                <bitmap>media/images/box/interaction/target_sound.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            proxy = ALProxy("ALAudioSourceLocalization")
            proxy.setParameter( "Sensibility", self.getParameter("Volume sensitivity (%)")/100. )
        except Exception as e:
            self.logger.error(e)

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Input name="ALAudioSourceLocalization/SoundLocated" type="0" type_size="1" nature="4" stm_value_name="ALAudioSourceLocalization/SoundLocated" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="4" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is stopped." id="5" />
                                                <Output name="sourceLocation" type="2" type_size="2" nature="2" inner="0" tooltip="Location of the detected sound source including two angles (in radians):&#x0A;- azimutal (horizontal) angle&#x0A;- elevation (vertical) angle&#x0A;Both related to robot&apos;s head position." id="6" />
                                                <Output name="headPosition" type="2" type_size="6" nature="2" inner="0" tooltip="Head position when the sound is detected. It contains six values:&#x0A;[x,y,z,wx,wy,wz]. The first three represents the translation of the head&#x0A;related to the robot&apos;s space. The last three represents the orientation of the head.&#x0A;&#x0A;Note: If module ALMotion is not loaded, this output returns -1.&#x0A; " id="7" />
                                                <Parameter name="Threshold to be sure of the location (%)" inherits_from_parent="0" content_type="1" value="50" default_value="50" min="0" max="100" tooltip="If a sound is localized with a threshold higher than this value, then the sound&#x0A;location will be sent on the output. Else, the robot will consider that the sound is not&#x0A;localized at the right location and he will not take it into account." id="8" />
                                                <Parameter name="Volume sensitivity (%)" inherits_from_parent="0" content_type="1" value="90" default_value="90" min="0" max="100" tooltip="Sensitivity to the volume of the sound heard. Higher this parameter is, less the&#x0A;sound have to be loud to be detected." id="9" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram>
                                                                <Box name="ProcessSoundLoc" id="1" localization="8" tooltip="Process the sound localization extractor to filter and give the most interesting data." x="147" y="164">
                                                                    <bitmap>media/images/box/interaction/target_sound.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        pass

    def onUnload(self):
        pass

    def onInput_onStart(self, p):
        if p[1][2] >= self.getParameter("Threshold to be sure of the location (%)")/100.:
            self.onLocation( [ p[1][0],p[1][1] ] )
            self.onHeadPosition( [ p[2][0] , p[2][1], p[2][2], p[2][3], p[2][4], p[2][5] ] )]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="0" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="onLocation" type="2" type_size="2" nature="2" inner="0" tooltip="Location of the detected sound source including two angles (in radians):&#x0A;- azimutal (horizontal) angle&#x0A;- elevation (vertical) angle&#x0A;Both related to robot&apos;s head position." id="3" />
                                                                    <Output name="onHeadPosition" type="2" type_size="6" nature="2" inner="0" tooltip="Head position when the sound is detected. It contains six values:&#x0A;[x,y,z,wx,wy,wz]. The first three represents the translation of the head&#x0A;related to the robot&apos;s space. The last three represents the orientation of the head.&#x0A;&#x0A;Note: If module ALMotion is not loaded, this output returns -1." id="4" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="4" />
                                                                <Link inputowner="0" indexofinput="7" outputowner="1" indexofoutput="4" />
                                                                <Link inputowner="0" indexofinput="6" outputowner="1" indexofoutput="3" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                            </Box>
                                            <Box name="Delay" id="14" localization="8" tooltip="Wait a moment before triggering the output. &#x0A;Can be stopped anytime. &#x0A;Multiple inputs will trigger multiple outputs." x="609" y="195">
                                                <bitmap>media/images/box/wait.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.delayed = []

    def onUnload(self):
        self.cancelDelays()

    def cancelDelays(self):
        cancel_list = list(self.delayed)
        for d in cancel_list:
            d.cancel()

    def cleanDelay(self, fut, fut_ref):
        self.delayed.remove(fut)

    def triggerOutput(self):
        self.timerOutput()

    def onInput_onStart(self):
        import qi
        import functools
        delay_future = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))
        # keep the async operation in an array for cancel
        # and remove it when it is finished in the callback
        self.delayed.append(delay_future)
        bound_clean = functools.partial(self.cleanDelay, delay_future)
        delay_future.addCallback(bound_clean)

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.delayed:
            self.timerOutput()
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Delay box with the configured timeout value." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                                                <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once delay set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                                                <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="2" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                                                <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently delaying at least one signal and cancelled, output will be stimulated." id="6" />
                                            </Box>
                                            <Box name="Delay (1)" id="2" localization="8" tooltip="Wait a moment before triggering the output. &#x0A;Can be stopped anytime. &#x0A;Multiple inputs will trigger multiple outputs." x="625" y="337">
                                                <bitmap>media/images/box/wait.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.delayed = []

    def onUnload(self):
        self.cancelDelays()

    def cancelDelays(self):
        cancel_list = list(self.delayed)
        for d in cancel_list:
            d.cancel()

    def cleanDelay(self, fut, fut_ref):
        self.delayed.remove(fut)

    def triggerOutput(self):
        self.timerOutput()

    def onInput_onStart(self):
        import qi
        import functools
        delay_future = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))
        # keep the async operation in an array for cancel
        # and remove it when it is finished in the callback
        self.delayed.append(delay_future)
        bound_clean = functools.partial(self.cleanDelay, delay_future)
        delay_future.addCallback(bound_clean)

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.delayed:
            self.timerOutput()
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Delay box with the configured timeout value." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                                                <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once delay set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                                                <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="0.5" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                                                <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently delaying at least one signal and cancelled, output will be stimulated." id="6" />
                                            </Box>
                                            <Box name="Get Attached File" id="15" localization="8" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="416" y="59">
                                                <bitmap>media/images/box/folder.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.framemanager = ALProxy("ALFrameManager")

    def onInput_onStart(self):
        self.onStopped(self.framemanager.getBehaviorPath(self.behaviorId) + self.getParameter("File name"))]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" />
                                                <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" />
                                                <Parameter name="File name" inherits_from_parent="1" content_type="4" value="teste" default_value="" tooltip="Name of the file which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" />
                                            </Box>
                                            <Box name="Play Sound File" id="3" localization="8" tooltip="Play the sound." x="1345" y="101">
                                                <bitmap>media/images/box/interaction/play_music.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.player = ALProxy('ALAudioPlayer')
        self.playerStop = ALProxy('ALAudioPlayer', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.post.playFileInLoop(p,self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            else :
               id = self.player.post.playFileFromPosition(p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            self.ids.append(id)
            self.player.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                <Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" />
                                                <Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" />
                                                <Parameter name="Balance L/R" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" />
                                                <Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" />
                                            </Box>
                                            <Link inputowner="14" indexofinput="3" outputowner="1" indexofoutput="6" />
                                            <Link inputowner="4" indexofinput="3" outputowner="14" indexofoutput="4" />
                                            <Link inputowner="1" indexofinput="3" outputowner="14" indexofoutput="4" />
                                            <Link inputowner="15" indexofinput="2" outputowner="0" indexofoutput="1" />
                                            <Link inputowner="4" indexofinput="2" outputowner="15" indexofoutput="3" />
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                            <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" />
                                            <Link inputowner="3" indexofinput="2" outputowner="4" indexofoutput="4" />
                                            <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="6" />
                                            <Link inputowner="14" indexofinput="2" outputowner="2" indexofoutput="4" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="vocniv1" index="108">
                                        <Diagram>
                                            <Box name="liste de mot" id="15" localization="8" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="182" y="25">
                                                <bitmap>media/images/box/folder.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.framemanager = ALProxy("ALFrameManager")

    def onInput_onStart(self):
        self.onStopped(self.framemanager.getBehaviorPath(self.behaviorId) + self.getParameter("File name"))]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" />
                                                <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" />
                                                <Parameter name="File name" inherits_from_parent="1" content_type="4" value="/../QuestionReponse.txt" default_value="" tooltip="Name of the file which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" />
                                            </Box>
                                            <Box name="Speech Reco." id="14" localization="8" tooltip="Recognize a word from a list of words set in the box parameters.&#x0A;&#x0A;V1.1.0&#x0A;" x="616" y="126">
                                                <bitmap>media/images/box/interaction/ear.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        try:
            self.asr = ALProxy("ALSpeechRecognition")
        except Exception as e:
            self.asr = None
            self.logger.error(e)
        self.memory = ALProxy("ALMemory")

    def onLoad(self):
        from threading import Lock
        self.bIsRunning = False
        self.mutex = Lock()
        self.hasPushed = False
        self.hasSubscribed = False
        self.BIND_PYTHON(self.getName(), "onWordRecognized")

    def onUnload(self):
        from threading import Lock
        self.mutex.acquire()
        try:
            if (self.bIsRunning):
                if (self.hasSubscribed):
                    self.memory.unsubscribeToEvent("WordRecognized", self.getName())
                if (self.hasPushed and self.asr):
                    self.asr.popContexts()
        except RuntimeError, e:
            self.mutex.release()
            raise e
        self.bIsRunning = False;
        self.mutex.release()

    def onInput_onStart(self, p):
        from threading import Lock
        self.mutex.acquire()

        #self.log(self.getParameter("Word list"))

        if(self.bIsRunning):
            self.mutex.release()
            return
        self.bIsRunning = True
        try:
            if self.asr:
                self.asr.setVisualExpression(self.getParameter("Visual expression"))
                self.asr.pushContexts()
            self.hasPushed = True
            if self.asr:
                self.asr.setVocabulary( p.split(';'), self.getParameter("Enable word spotting") )
            self.memory.subscribeToEvent("WordRecognized", self.getName(), "onWordRecognized")
            self.hasSubscribed = True
        except RuntimeError, e:
            self.mutex.release()
            self.onUnload()
            raise e
        self.mutex.release()

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()

    def onWordRecognized(self, key, value, message):
        if(len(value) > 1 and value[1] >= self.getParameter("Confidence threshold (%)")/100.):
            self.wordRecognized(value[0]) #~ activate output of the box
        else:
            self.onNothing()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Output name="wordRecognized" type="3" type_size="1" nature="2" inner="0" tooltip="Word recognized with a confidence higher than the threshold set in the box parameters." id="5" />
                                                <Output name="onNothing" type="1" type_size="1" nature="2" inner="0" tooltip="Nothing has been understood." id="6" />
                                                <Parameter name="Word list" inherits_from_parent="0" content_type="3" value="" default_value="yes;no" custom_choice="0" tooltip="Try to recognize a word from a list of words set in the box parameters." id="7" />
                                                <Parameter name="Confidence threshold (%)" inherits_from_parent="0" content_type="1" value="44" default_value="30" min="0" max="100" tooltip="If the confidence associated with the word recognized is below this threshold, the robot will consider that it is not recognized." id="8" />
                                                <Parameter name="Visual expression" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="Use the LEDs to show feedbacks from the robot during the recognition.&#x0A;&#x0A;For example:&#x0A;- Eyes leds get blue and turn when the speech recognition is launched.&#x0A;- They get yellow when the robot hears someone talking and analyses what it heard.&#x0A;- They flash in green when the robot understood and flash in red otherwise." id="9" />
                                                <Parameter name="Enable word spotting" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="If this option is not activated the robot will only understand exact expressions. If it is, he will spot the exact expressions even in the middle of a sentence.&#x0A;&#x0A;!!Warning!! This option is only available with the speech recognition module using Nuance (ie in Atom version of the robot)." id="10" />
                                                <Resource name="Speech recognition" type="Lock" timeout="0" />
                                            </Box>
                                            <Box name="List Question" id="22" localization="8" tooltip="" x="392" y="69">
                                                <bitmap>media/images/box/box-python-script.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        pass


    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, p):
        EnUneChaine = ''
        tabLinge =[]
        with open(p, "r") as f:
            tabLinge = f.readlines()
        #self.log(tabLinge)
        f.close()

        ListeQuestion = []

        for i in range (len(tabLinge)):
            #print (tabLinge[i][0])
            if (tabLinge[i][0]=='$'):
                for j in range(len(tabLinge[i].split('$'))):
                    if (tabLinge[i].split('$')[j] != ''):
                        ListeQuestion.append(tabLinge[i].split('$')[j])


        for i in range (len(ListeQuestion)):
            ListeQuestion[i] = ListeQuestion[i].replace('\n', '')
            EnUneChaine = EnUneChaine+ListeQuestion[i]+';'
        #print(ListeQuestion)
        #print(EnUneChaine)
        self.log(EnUneChaine)
        self.sortie(EnUneChaine)
        pass

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="sortie" type="3" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                            </Box>
                                            <Box name="Say Text (1)" id="2" localization="8" tooltip="Say the text received on its input." x="1462" y="75">
                                                <bitmap>media/images/box/interaction/say.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                <Resource name="Speech" type="Lock" timeout="0" />
                                            </Box>
                                            <Box name="ReponceAction" id="1" localization="8" tooltip="" x="861" y="58">
                                                <bitmap>media/images/box/box-python-script.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tab = [False]*2


    def onUnload(self):
        #put clean-up code here
        pass

    def onStart(self, nInput, p):
        self.tab[nInput] = p
        if(self.tab[0] != False and self.tab[1] != False):
            tab = self.tab
            self.log(tab)
            ReponceAction=[]
            NumLigne=-1
            with open(tab[1], "r") as f:
                lines = f.readlines()
            f.close()
            word = '$'+ tab[0]
            for line in lines:
                if line.find(word) != -1:
                    #print('Line Number:', lines.index(line))
                    NumLigne = lines.index(line)
                    #print('Line:', line)
            ReponceAction.append(lines[NumLigne+1])
            ReponceAction.append(lines[NumLigne+2])
            ReponceAction[0] = ReponceAction[0].replace('$', '')
            ReponceAction[0] = ReponceAction[0].replace('\n', '')
            ReponceAction[1] = ReponceAction[1].replace('$', '')
            ReponceAction[1] = ReponceAction[1].replace('\n', '')
            #print(ReponceAction)
            self.tab = [False]*2
            self.log(ReponceAction)
            self.sortie(ReponceAction)


    def onInput_onStart(self, p):
        self.onStart(0, p)

    def onInput_fichier(self, p):
        self.onStart(1, p)

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Input name="fichier" type="3" type_size="1" nature="1" inner="0" tooltip="" id="4" />
                                                <Output name="sortie" type="3" type_size="2" nature="2" inner="0" tooltip="" id="5" />
                                            </Box>
                                            <Box name="Double to simple" id="3" localization="8" tooltip="" x="1156" y="103">
                                                <bitmap>media/images/box/box-python-script.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tab = [False]*2
        self.tab[1] = 2


    def onUnload(self):
        #put clean-up code here
        pass

    def onStart(self, nInput, p):
        self.tab[nInput] = p
        if(self.tab[0] != False and self.tab[1] != 2):
            tab = self.tab
            self.log(tab)
            ligne = tab[0]
            num = tab[1]
            Reponce = ligne[num]
            self.tab = [False]*2
            self.sortie(Reponce)


    def onInput_onStart(self, p):
        self.onStart(0, p)

    def onInput_fichier(self, p):
        self.onStart(1, p)

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="2" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Input name="fichier" type="2" type_size="1" nature="1" inner="0" tooltip="" id="4" />
                                                <Output name="sortie" type="3" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                            </Box>
                                            <Box name="Number Edit" id="25" localization="8" tooltip="Send the number you entered when the input is stimulated." plugin="numberedit_plugin" x="877" y="251">
                                                <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped(0)]]>
</content>
                                                </script>
                                                <pluginContent>
                                                    <number>0</number>
                                                </pluginContent>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the number on the output." id="2" />
                                                <Output name="onStopped" type="2" type_size="1" nature="2" inner="0" tooltip="The number you entered." id="3" />
                                            </Box>
                                            <Box name="Double to simple 2" id="4" localization="8" tooltip="" x="696" y="375">
                                                <bitmap>media/images/box/box-python-script.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tab = [False]*2
        self.tab[1] = 2


    def onUnload(self):
        #put clean-up code here
        pass

    def onStart(self, nInput, p):
        self.tab[nInput] = p
        if(self.tab[0] != False and self.tab[1] != 2):
            tab = self.tab
            self.log(tab)
            ligne = tab[0]
            num = tab[1]
            Reponce = ligne[num]
            self.tab = [False]*2
            self.sortie(Reponce)


    def onInput_onStart(self, p):
        self.onStart(0, p)

    def onInput_fichier(self, p):
        self.onStart(1, p)

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="2" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Input name="fichier" type="2" type_size="1" nature="1" inner="0" tooltip="" id="4" />
                                                <Output name="sortie" type="3" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                            </Box>
                                            <Box name="Number Edit (1)" id="5" localization="8" tooltip="Send the number you entered when the input is stimulated." plugin="numberedit_plugin" x="489" y="467">
                                                <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped(1)]]>
</content>
                                                </script>
                                                <pluginContent>
                                                    <number>1</number>
                                                </pluginContent>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the number on the output." id="2" />
                                                <Output name="onStopped" type="2" type_size="1" nature="2" inner="0" tooltip="The number you entered." id="3" />
                                            </Box>
                                            <Box name="Switch Case" id="6" localization="8" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;matching output, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="887" y="364">
                                                <bitmap>media/images/box/interaction/choice.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("Coucou\r")):
			self.output_1(p)
		elif(p == self.typeConversion("Dance\r")):
			self.output_2(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
</content>
                                                </script>
                                                <pluginContent>
                                                    <keywords>
                                                        <keyword>&quot;Coucou\r&quot;</keyword>
                                                        <keyword>&quot;Dance\r&quot;</keyword>
                                                        <keyword></keyword>
                                                        <keyword></keyword>
                                                    </keywords>
                                                </pluginContent>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="0" type_size="1" nature="1" inner="0" tooltip="Value to test." id="2" />
                                                <Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
                                                <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
                                                <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" />
                                                <Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="6" />
                                            </Box>
                                            <Box name="Hello" id="7" localization="8" tooltip="Simple hello animation.&#x0A;&#x0A;!!Warning!! There is no speech in this box. It is a just an animation box with some&#x0A;leds animation." x="1252" y="335">
                                                <bitmap>media/images/box/movement/move.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="115">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="FaceLeds" index="1">
                                                            <Diagram>
                                                                <Box name="Light_AskForAttentionEyes" id="1" localization="8" tooltip="Set an animated gaze which calls for attention (purple eyes).&#x0A;&#x0A;Note: It is a never ending box. You must call onStop to stop it.&#x0A;&#x0A;*** state: 5a_release ***&#x0A;*** ref box in: 5a_release\Leds\Light_AskForAttentionEyes\Light_AskForAttentionEyes.xar ***&#x0A;*** last modification date(svn): Version it! ***" x="281" y="144">
                                                                    <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self, False)

  def onLoad(self):
    self.bIsRunning = False;
    self.leds = ALProxy("ALLeds")

  def onUnload(self):
    self.onInput_onStop(); # will stop current loop execution

  def onInput_onStart(self):
    #self.logger.info( self.getName() + ": start - begin" );

    if( self.bIsRunning ):
      #print( self.getName() + ": already started => nothing" );
      return;

    self.bIsRunning = True;
    self.bMustStop = False;

    rDuration = 0.2;
    self.leds.post.fadeRGB( "FaceLedsTop", 0xff00ff, rDuration );
    self.leds.post.fadeRGB( "FaceLedsInternal", 0xff00ff, rDuration );
    self.leds.post.fadeRGB( "FaceLedsBottom", 0xff00ff, rDuration );
    self.leds.fadeRGB( "FaceLedsExternal", 0xff00ff, rDuration );

    while( not self.bMustStop ):
      rTime = 0.1;
      self.leds.post.fadeRGB( "FaceLedsTop", 0xffffff, rTime );
      self.leds.fadeRGB( "FaceLedsBottom", 0xffffff, rTime );
      if( self.bMustStop ):
        break;
      rTime = 0.3
      self.leds.post.fadeRGB( "FaceLedsTop", 0xff00ff, rTime );
      self.leds.fadeRGB( "FaceLedsBottom", 0xff00ff, rTime );


    # end while
    self.bIsRunning = False;
    self.onStopped();

  def onInput_onStop(self):
    self.bMustStop = True; # will stop current loop execution]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                    <ActuatorList model="Nao">
                                                        <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" unit="-1">
                                                            <Key frame="20" value="-7.73688" />
                                                            <Key frame="39" value="-20.1296" />
                                                            <Key frame="56" value="-23.8211" />
                                                            <Key frame="70" value="-23.9968" />
                                                            <Key frame="87" value="-29.7977" />
                                                            <Key frame="115" value="-21.5359" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="20" value="16.9607" />
                                                            <Key frame="39" value="-9.75839" />
                                                            <Key frame="56" value="-19.5144" />
                                                            <Key frame="70" value="-3.43018" />
                                                            <Key frame="87" value="-11.0768" />
                                                            <Key frame="115" value="-0.617646" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="18" value="64.0707" />
                                                            <Key frame="37" value="53.1721" />
                                                            <Key frame="54" value="53.8752" />
                                                            <Key frame="68" value="49.3927" />
                                                            <Key frame="85" value="51.4143" />
                                                            <Key frame="113" value="48.2502" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="18" value="20.8279" />
                                                            <Key frame="37" value="13.0056" />
                                                            <Key frame="54" value="11.6872" />
                                                            <Key frame="68" value="12.4782" />
                                                            <Key frame="85" value="14.2361" />
                                                            <Key frame="113" value="13.0056" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" unit="-1">
                                                            <Key frame="18" value="-46.0577" />
                                                            <Key frame="37" value="-39.6416" />
                                                            <Key frame="54" value="-38.9384" />
                                                            <Key frame="68" value="-34.9833" />
                                                            <Key frame="85" value="-43.1572" />
                                                            <Key frame="113" value="-38.4111" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="18" value="-79.0123" />
                                                            <Key frame="37" value="-73.9145" />
                                                            <Key frame="54" value="-67.7621" />
                                                            <Key frame="68" value="-71.5415" />
                                                            <Key frame="85" value="-75.5845" />
                                                            <Key frame="113" value="-67.85" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" unit="-1">
                                                            <Key frame="37" value="8.4352" />
                                                            <Key frame="113" value="6.85315" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" unit="-1">
                                                            <Key frame="37" value="0.238207" />
                                                            <Key frame="113" value="0.240025" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="16" value="14.153" />
                                                            <Key frame="35" value="-67.1469" />
                                                            <Key frame="52" value="-62.4007" />
                                                            <Key frame="66" value="-72.2446" />
                                                            <Key frame="83" value="-65.8285" />
                                                            <Key frame="111" value="58.4504" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="16" value="-13.8893" />
                                                            <Key frame="35" value="-54.6711" />
                                                            <Key frame="52" value="-26.3699" />
                                                            <Key frame="66" value="-55.0226" />
                                                            <Key frame="83" value="-18.8112" />
                                                            <Key frame="111" value="-14.3288" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" unit="-1">
                                                            <Key frame="16" value="-17.9323" />
                                                            <Key frame="35" value="32.3418" />
                                                            <Key frame="52" value="22.41" />
                                                            <Key frame="66" value="19.949" />
                                                            <Key frame="83" value="21.8826" />
                                                            <Key frame="93" value="56" />
                                                            <Key frame="111" value="47.3712" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="16" value="79.3686" />
                                                            <Key frame="35" value="13.8893" />
                                                            <Key frame="42" value="20" />
                                                            <Key frame="52" value="53.5285" />
                                                            <Key frame="60" value="39" />
                                                            <Key frame="66" value="11" />
                                                            <Key frame="76" value="15" />
                                                            <Key frame="83" value="40.5205" />
                                                            <Key frame="93" value="58.4" />
                                                            <Key frame="111" value="72.5131" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" unit="-1">
                                                            <Key frame="35" value="-17.9323" />
                                                            <Key frame="83" value="-17.405" />
                                                            <Key frame="111" value="10.4567" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" unit="-1">
                                                            <Key frame="35" value="0.853478" />
                                                            <Key frame="83" value="0.854933" />
                                                            <Key frame="111" value="0.425116" />
                                                        </ActuatorCurve>
                                                    </ActuatorList>
                                                </Timeline>
                                                <Resource name="Head" type="Lock" timeout="0" />
                                                <Resource name="Arms" type="Lock" timeout="0" />
                                                <Resource name="Left eye leds" type="Lock" timeout="0" />
                                                <Resource name="Right eye leds" type="Lock" timeout="0" />
                                            </Box>
                                            <Box name="Tai Chi Chuan" id="8" localization="8" tooltip="Tai Chi Chuan dance." x="1268" y="451">
                                                <bitmap>media/images/box/movement/dance.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram>
                                                                <Box name="Tai Chi Chuan" id="1" localization="8" tooltip="Tai Chi Chuan dance." x="304" y="110">
                                                                    <bitmap>media/images/box/movement/dance.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                    <Timeline enable="1" fps="5" start_frame="1" end_frame="-1" size="250">
                                                                        <BehaviorLayer name="LED">
                                                                            <BehaviorKeyframe name="keyframe15" index="15">
                                                                                <Diagram>
                                                                                    <Box name="Light_ConcentratedEyes" id="1" localization="8" tooltip="Set an animated gaze which expresses concentration." x="231" y="105">
                                                                                        <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self, False)

  def onLoad(self):
    self.bIsRunning = False;
    self.leds = ALProxy("ALLeds")

  def onUnload(self):
    self.onInput_onStop(); # will stop current loop execution

  def onInput_onStart(self):
    #self.log( self.getName() + ": start - begin" );

    if( self.bIsRunning ):
      #print( self.getName() + ": already started => nothing" );
      return;

    self.bIsRunning = True;
    self.bMustStop = False;

    rDuration = 1.0;
    self.leds.post.fadeRGB( "FaceLedsTop", 0x0000ff, rDuration );
    self.leds.post.fadeRGB( "FaceLedsInternal", 0x00ff00, rDuration );
    self.leds.post.fadeRGB( "FaceLedsBottom", 0x0000ff, rDuration );
    self.leds.fadeRGB( "FaceLedsExternal", 0x0000ff, rDuration );

    while( not self.bMustStop ):
      rTime=1.0
      self.leds.fadeRGB( "FaceLedsInternal", 0x000000, rTime );
      if( self.bMustStop ):
        break;
      self.leds.fadeRGB( "FaceLedsInternal", 0x00ff00, rDuration );


    # end while
    self.bIsRunning = False;
    self.onStopped();

  def onInput_onStop(self):
    self.bMustStop = True; # will stop current loop execution]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                    </Box>
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                        <BehaviorLayer name="music">
                                                                            <BehaviorKeyframe name="keyframe12" index="12">
                                                                                <Diagram>
                                                                                    <Box name="Play Sound" id="2" localization="8" tooltip="Play a sound file. Select the file in parameters. The format of the file can be&#x0A;wav, mp3, or ogg.&#x0A;&#x0A;Note: There can be some delay to play mp3 files. We advise you to use wav if&#x0A;you want a fast play of the file." x="115" y="51">
                                                                                        <bitmap>media/images/box/interaction/play_music.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                                                        <Parameter name="File name" inherits_from_parent="0" content_type="4" value="/swiftswords_ext.mp3" default_value="" tooltip="Name of the file you want to play.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="5" />
                                                                                        <Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" />
                                                                                        <Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" />
                                                                                        <Parameter name="Balance L/R" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" />
                                                                                        <Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" />
                                                                                        <Timeline enable="0">
                                                                                            <BehaviorLayer name="behavior_layer1">
                                                                                                <BehaviorKeyframe name="keyframe1" index="1">
                                                                                                    <Diagram>
                                                                                                        <Box name="Play Sound File" id="2" localization="8" tooltip="Play the sound." x="442" y="70">
                                                                                                            <bitmap>media/images/box/interaction/play_music.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.player = ALProxy('ALAudioPlayer')
        self.playerStop = ALProxy('ALAudioPlayer', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.post.playFileInLoop(p,self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            else :
               id = self.player.post.playFileFromPosition(p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            self.ids.append(id)
            self.player.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                                            <Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" />
                                                                                                            <Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" />
                                                                                                            <Parameter name="Balance L/R" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" />
                                                                                                            <Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" />
                                                                                                        </Box>
                                                                                                        <Box name="Get Attached File" id="1" localization="8" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="216" y="71">
                                                                                                            <bitmap>media/images/box/folder.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.framemanager = ALProxy("ALFrameManager")

    def onInput_onStart(self):
        self.onStopped(self.framemanager.getBehaviorPath(self.behaviorId) + self.getParameter("File name"))]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" />
                                                                                                            <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" />
                                                                                                            <Parameter name="File name" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Name of the file which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" />
                                                                                                        </Box>
                                                                                                        <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                                                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                        <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                        <ActuatorList model="">
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" unit="0">
                                                                                <Key frame="15" value="0" />
                                                                                <Key frame="25" value="4.82967e-06" />
                                                                                <Key frame="35" value="4.82968e-06" />
                                                                                <Key frame="45" value="4.82968e-06" />
                                                                                <Key frame="55" value="-2.73208e-05" />
                                                                                <Key frame="65" value="18" />
                                                                                <Key frame="75" value="-17" />
                                                                                <Key frame="85" value="-68" />
                                                                                <Key frame="95" value="-16" />
                                                                                <Key frame="105" value="12" />
                                                                                <Key frame="118" value="90" />
                                                                                <Key frame="131" value="12" />
                                                                                <Key frame="142" value="8" />
                                                                                <Key frame="152" value="0" />
                                                                                <Key frame="162" value="-8" />
                                                                                <Key frame="172" value="16" />
                                                                                <Key frame="185" value="-12" />
                                                                                <Key frame="198" value="-90" />
                                                                                <Key frame="211" value="-12" />
                                                                                <Key frame="222" value="-8" />
                                                                                <Key frame="231" value="0" />
                                                                                <Key frame="250" value="-0.178186" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" unit="0">
                                                                                <Key frame="15" value="0" />
                                                                                <Key frame="25" value="5.12931e-06" />
                                                                                <Key frame="35" value="-2.73208e-05" />
                                                                                <Key frame="45" value="5.0962e-06" />
                                                                                <Key frame="55" value="6.01466e-06" />
                                                                                <Key frame="65" value="19" />
                                                                                <Key frame="75" value="18" />
                                                                                <Key frame="85" value="5.26559e-06" />
                                                                                <Key frame="95" value="-19" />
                                                                                <Key frame="105" value="8" />
                                                                                <Key frame="118" value="-5" />
                                                                                <Key frame="131" value="8" />
                                                                                <Key frame="142" value="22" />
                                                                                <Key frame="152" value="32" />
                                                                                <Key frame="162" value="22" />
                                                                                <Key frame="172" value="-19" />
                                                                                <Key frame="185" value="8" />
                                                                                <Key frame="198" value="-5" />
                                                                                <Key frame="211" value="8" />
                                                                                <Key frame="222" value="22" />
                                                                                <Key frame="231" value="0" />
                                                                                <Key frame="250" value="-10.901" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" unit="0">
                                                                                <Key frame="15" value="90" />
                                                                                <Key frame="25" value="110" />
                                                                                <Key frame="35" value="120" />
                                                                                <Key frame="45" value="90" />
                                                                                <Key frame="55" value="0" />
                                                                                <Key frame="65" value="21" />
                                                                                <Key frame="75" value="20" />
                                                                                <Key frame="85" value="11" />
                                                                                <Key frame="95" value="-46" />
                                                                                <Key frame="105" value="-10" />
                                                                                <Key frame="118" value="-17" />
                                                                                <Key frame="131" value="-10" />
                                                                                <Key frame="142" value="30" />
                                                                                <Key frame="152" value="27" />
                                                                                <Key frame="162" value="19" />
                                                                                <Key frame="172" value="-27" />
                                                                                <Key frame="185" value="4" />
                                                                                <Key frame="198" value="-4" />
                                                                                <Key frame="211" value="4" />
                                                                                <Key frame="222" value="19" />
                                                                                <Key frame="231" value="97" />
                                                                                <Key frame="250" value="87.6256" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" unit="0">
                                                                                <Key frame="15" value="10" />
                                                                                <Key frame="25" value="20" />
                                                                                <Key frame="35" value="10" />
                                                                                <Key frame="45" value="10" />
                                                                                <Key frame="55" value="10" />
                                                                                <Key frame="65" value="40" />
                                                                                <Key frame="75" value="0" />
                                                                                <Key frame="85" value="5" />
                                                                                <Key frame="95" value="10" />
                                                                                <Key frame="105" value="23" />
                                                                                <Key frame="118" value="66" />
                                                                                <Key frame="131" value="23" />
                                                                                <Key frame="142" value="23" />
                                                                                <Key frame="152" value="10" />
                                                                                <Key frame="162" value="0" />
                                                                                <Key frame="172" value="23" />
                                                                                <Key frame="185" value="0" />
                                                                                <Key frame="198" value="0" />
                                                                                <Key frame="211" value="0" />
                                                                                <Key frame="222" value="12" />
                                                                                <Key frame="231" value="54" />
                                                                                <Key frame="250" value="6.15001" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" unit="0">
                                                                                <Key frame="15" value="-90" />
                                                                                <Key frame="25" value="-90" />
                                                                                <Key frame="35" value="-90" />
                                                                                <Key frame="45" value="-90" />
                                                                                <Key frame="55" value="-90" />
                                                                                <Key frame="65" value="-22" />
                                                                                <Key frame="75" value="0" />
                                                                                <Key frame="85" value="0" />
                                                                                <Key frame="95" value="0" />
                                                                                <Key frame="105" value="0" />
                                                                                <Key frame="118" value="0" />
                                                                                <Key frame="131" value="0" />
                                                                                <Key frame="142" value="0" />
                                                                                <Key frame="152" value="12" />
                                                                                <Key frame="162" value="11" />
                                                                                <Key frame="172" value="-24" />
                                                                                <Key frame="185" value="-24" />
                                                                                <Key frame="198" value="-5" />
                                                                                <Key frame="211" value="-24" />
                                                                                <Key frame="222" value="11" />
                                                                                <Key frame="227" value="-21.7" />
                                                                                <Key frame="231" value="-14" />
                                                                                <Key frame="250" value="-67.7669" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" unit="0">
                                                                                <Key frame="15" value="0" />
                                                                                <Key frame="25" value="-40" />
                                                                                <Key frame="35" value="-60" />
                                                                                <Key frame="45" value="0" />
                                                                                <Key frame="55" value="0" />
                                                                                <Key frame="65" value="-95" />
                                                                                <Key frame="75" value="-55" />
                                                                                <Key frame="85" value="-85" />
                                                                                <Key frame="95" value="-58" />
                                                                                <Key frame="105" value="-58" />
                                                                                <Key frame="118" value="0" />
                                                                                <Key frame="131" value="-58" />
                                                                                <Key frame="142" value="-58" />
                                                                                <Key frame="152" value="-51" />
                                                                                <Key frame="162" value="-49" />
                                                                                <Key frame="172" value="-64" />
                                                                                <Key frame="185" value="-49" />
                                                                                <Key frame="198" value="-72" />
                                                                                <Key frame="211" value="-49" />
                                                                                <Key frame="222" value="-49" />
                                                                                <Key frame="227" value="-57" />
                                                                                <Key frame="231" value="-81.4" />
                                                                                <Key frame="250" value="-22.2342" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" unit="0">
                                                                                <Key frame="15" value="-88" />
                                                                                <Key frame="250" value="7.99575" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" unit="1">
                                                                                <Key frame="15" value="0" />
                                                                                <Key frame="250" value="0.2984" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" unit="0">
                                                                                <Key frame="15" value="90" />
                                                                                <Key frame="25" value="110" />
                                                                                <Key frame="35" value="120" />
                                                                                <Key frame="45" value="90" />
                                                                                <Key frame="55" value="0" />
                                                                                <Key frame="65" value="10" />
                                                                                <Key frame="75" value="35" />
                                                                                <Key frame="85" value="60" />
                                                                                <Key frame="95" value="-27" />
                                                                                <Key frame="105" value="4" />
                                                                                <Key frame="118" value="-4" />
                                                                                <Key frame="131" value="4" />
                                                                                <Key frame="142" value="19" />
                                                                                <Key frame="152" value="27" />
                                                                                <Key frame="162" value="30" />
                                                                                <Key frame="172" value="-46" />
                                                                                <Key frame="185" value="-10" />
                                                                                <Key frame="198" value="-17" />
                                                                                <Key frame="211" value="-10" />
                                                                                <Key frame="222" value="30" />
                                                                                <Key frame="231" value="97" />
                                                                                <Key frame="250" value="86.8394" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" unit="0">
                                                                                <Key frame="15" value="-10" />
                                                                                <Key frame="25" value="-10" />
                                                                                <Key frame="35" value="-20" />
                                                                                <Key frame="45" value="-10" />
                                                                                <Key frame="55" value="-9.99896" />
                                                                                <Key frame="65" value="-4" />
                                                                                <Key frame="75" value="-48" />
                                                                                <Key frame="85" value="-87" />
                                                                                <Key frame="95" value="-23" />
                                                                                <Key frame="105" value="0" />
                                                                                <Key frame="118" value="0" />
                                                                                <Key frame="131" value="0" />
                                                                                <Key frame="142" value="0" />
                                                                                <Key frame="152" value="-10" />
                                                                                <Key frame="162" value="-23" />
                                                                                <Key frame="172" value="-10" />
                                                                                <Key frame="185" value="-23" />
                                                                                <Key frame="198" value="-66" />
                                                                                <Key frame="211" value="-23" />
                                                                                <Key frame="222" value="-32" />
                                                                                <Key frame="231" value="-54" />
                                                                                <Key frame="250" value="-5.71537" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" unit="0">
                                                                                <Key frame="15" value="90" />
                                                                                <Key frame="25" value="90" />
                                                                                <Key frame="35" value="90" />
                                                                                <Key frame="45" value="90" />
                                                                                <Key frame="55" value="90" />
                                                                                <Key frame="65" value="11" />
                                                                                <Key frame="75" value="20" />
                                                                                <Key frame="85" value="90" />
                                                                                <Key frame="95" value="24" />
                                                                                <Key frame="105" value="24" />
                                                                                <Key frame="118" value="5" />
                                                                                <Key frame="131" value="24" />
                                                                                <Key frame="142" value="-11" />
                                                                                <Key frame="152" value="-12" />
                                                                                <Key frame="162" value="0" />
                                                                                <Key frame="172" value="0" />
                                                                                <Key frame="185" value="0" />
                                                                                <Key frame="198" value="0" />
                                                                                <Key frame="211" value="0" />
                                                                                <Key frame="222" value="0" />
                                                                                <Key frame="227" value="19.6" />
                                                                                <Key frame="231" value="14" />
                                                                                <Key frame="250" value="66.4437" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" unit="0">
                                                                                <Key frame="15" value="0" />
                                                                                <Key frame="25" value="40" />
                                                                                <Key frame="35" value="60" />
                                                                                <Key frame="45" value="1.47493e-05" />
                                                                                <Key frame="55" value="0" />
                                                                                <Key frame="65" value="71" />
                                                                                <Key frame="75" value="94" />
                                                                                <Key frame="85" value="4" />
                                                                                <Key frame="95" value="64" />
                                                                                <Key frame="105" value="49" />
                                                                                <Key frame="118" value="72" />
                                                                                <Key frame="131" value="49" />
                                                                                <Key frame="142" value="49" />
                                                                                <Key frame="152" value="51" />
                                                                                <Key frame="162" value="58" />
                                                                                <Key frame="172" value="58" />
                                                                                <Key frame="185" value="58" />
                                                                                <Key frame="198" value="2" />
                                                                                <Key frame="211" value="58" />
                                                                                <Key frame="222" value="58" />
                                                                                <Key frame="227" value="64.9" />
                                                                                <Key frame="231" value="78.3" />
                                                                                <Key frame="250" value="22.6785" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" unit="0">
                                                                                <Key frame="15" value="88" />
                                                                                <Key frame="250" value="9.40201" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" unit="1">
                                                                                <Key frame="15" value="0" />
                                                                                <Key frame="250" value="0.302" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" unit="0">
                                                                                <Key frame="15" value="5.75265e-06" />
                                                                                <Key frame="25" value="0" />
                                                                                <Key frame="35" value="-17.4" />
                                                                                <Key frame="45" value="0" />
                                                                                <Key frame="55" value="0" />
                                                                                <Key frame="65" value="-37.1" />
                                                                                <Key frame="75" value="-35" />
                                                                                <Key frame="85" value="-60" />
                                                                                <Key frame="95" value="-60" />
                                                                                <Key frame="105" value="-60" />
                                                                                <Key frame="118" value="-60" />
                                                                                <Key frame="131" value="-60" />
                                                                                <Key frame="142" value="-60" />
                                                                                <Key frame="152" value="-50" />
                                                                                <Key frame="162" value="-42.5" />
                                                                                <Key frame="172" value="0" />
                                                                                <Key frame="185" value="5.75265e-06" />
                                                                                <Key frame="198" value="30" />
                                                                                <Key frame="211" value="5.75265e-06" />
                                                                                <Key frame="217" value="-31.8" />
                                                                                <Key frame="222" value="-37.5" />
                                                                                <Key frame="231" value="-60" />
                                                                                <Key frame="250" value="1.93121" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" unit="0">
                                                                                <Key frame="15" value="3" />
                                                                                <Key frame="25" value="7" />
                                                                                <Key frame="35" value="10" />
                                                                                <Key frame="45" value="-6" />
                                                                                <Key frame="55" value="-6" />
                                                                                <Key frame="65" value="10" />
                                                                                <Key frame="75" value="-15" />
                                                                                <Key frame="85" value="3.6" />
                                                                                <Key frame="95" value="7.5" />
                                                                                <Key frame="105" value="0" />
                                                                                <Key frame="118" value="0" />
                                                                                <Key frame="131" value="0" />
                                                                                <Key frame="142" value="5" />
                                                                                <Key frame="152" value="0" />
                                                                                <Key frame="162" value="-13.8" />
                                                                                <Key frame="167" value="-31.9" />
                                                                                <Key frame="172" value="-24.3" />
                                                                                <Key frame="185" value="-20" />
                                                                                <Key frame="198" value="0" />
                                                                                <Key frame="211" value="-20" />
                                                                                <Key frame="222" value="-17.9" />
                                                                                <Key frame="231" value="0" />
                                                                                <Key frame="250" value="-2.89802" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" unit="0">
                                                                                <Key frame="15" value="0" />
                                                                                <Key frame="25" value="0" />
                                                                                <Key frame="35" value="-20" />
                                                                                <Key frame="45" value="0" />
                                                                                <Key frame="55" value="0" />
                                                                                <Key frame="65" value="-40" />
                                                                                <Key frame="75" value="-35" />
                                                                                <Key frame="85" value="-60" />
                                                                                <Key frame="95" value="-60" />
                                                                                <Key frame="105" value="-60" />
                                                                                <Key frame="118" value="-60" />
                                                                                <Key frame="131" value="-60" />
                                                                                <Key frame="142" value="-60" />
                                                                                <Key frame="152" value="-50" />
                                                                                <Key frame="162" value="-42.5" />
                                                                                <Key frame="172" value="-7" />
                                                                                <Key frame="185" value="-50" />
                                                                                <Key frame="198" value="0" />
                                                                                <Key frame="211" value="-50" />
                                                                                <Key frame="222" value="-37.5" />
                                                                                <Key frame="231" value="-60" />
                                                                                <Key frame="250" value="12.3951" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" unit="0">
                                                                                <Key frame="15" value="-3" />
                                                                                <Key frame="25" value="-7" />
                                                                                <Key frame="35" value="-10" />
                                                                                <Key frame="45" value="6" />
                                                                                <Key frame="55" value="6" />
                                                                                <Key frame="65" value="-10" />
                                                                                <Key frame="75" value="10" />
                                                                                <Key frame="85" value="24.1" />
                                                                                <Key frame="95" value="30.3" />
                                                                                <Key frame="105" value="35" />
                                                                                <Key frame="118" value="35" />
                                                                                <Key frame="131" value="35" />
                                                                                <Key frame="142" value="20" />
                                                                                <Key frame="152" value="0" />
                                                                                <Key frame="162" value="-15" />
                                                                                <Key frame="167" value="14.4" />
                                                                                <Key frame="172" value="15" />
                                                                                <Key frame="185" value="8" />
                                                                                <Key frame="198" value="40" />
                                                                                <Key frame="211" value="8" />
                                                                                <Key frame="222" value="-15" />
                                                                                <Key frame="231" value="0" />
                                                                                <Key frame="250" value="2.37549" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" unit="0">
                                                                                <Key frame="15" value="-6.2" />
                                                                                <Key frame="25" value="-6.9" />
                                                                                <Key frame="35" value="-7.5" />
                                                                                <Key frame="45" value="-6.9" />
                                                                                <Key frame="55" value="-8.2" />
                                                                                <Key frame="65" value="-9.6" />
                                                                                <Key frame="75" value="-5.7" />
                                                                                <Key frame="85" value="0" />
                                                                                <Key frame="95" value="0" />
                                                                                <Key frame="105" value="0" />
                                                                                <Key frame="118" value="0" />
                                                                                <Key frame="131" value="0" />
                                                                                <Key frame="142" value="0" />
                                                                                <Key frame="152" value="0" />
                                                                                <Key frame="162" value="0" />
                                                                                <Key frame="172" value="0" />
                                                                                <Key frame="185" value="0" />
                                                                                <Key frame="198" value="0" />
                                                                                <Key frame="211" value="0" />
                                                                                <Key frame="222" value="-3.9" />
                                                                                <Key frame="231" value="0" />
                                                                                <Key frame="250" value="-11.1598" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" unit="0">
                                                                                <Key frame="15" value="0" />
                                                                                <Key frame="25" value="0" />
                                                                                <Key frame="35" value="40" />
                                                                                <Key frame="45" value="-5.69182e-06" />
                                                                                <Key frame="55" value="-5.69182e-06" />
                                                                                <Key frame="65" value="80" />
                                                                                <Key frame="75" value="70" />
                                                                                <Key frame="85" value="120" />
                                                                                <Key frame="95" value="120" />
                                                                                <Key frame="105" value="120" />
                                                                                <Key frame="118" value="120" />
                                                                                <Key frame="131" value="120" />
                                                                                <Key frame="142" value="120.9" />
                                                                                <Key frame="152" value="100" />
                                                                                <Key frame="162" value="85" />
                                                                                <Key frame="172" value="7" />
                                                                                <Key frame="185" value="100" />
                                                                                <Key frame="198" value="0" />
                                                                                <Key frame="211" value="100" />
                                                                                <Key frame="222" value="75" />
                                                                                <Key frame="231" value="120" />
                                                                                <Key frame="250" value="-5.10013" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" unit="0">
                                                                                <Key frame="15" value="5.75266e-06" />
                                                                                <Key frame="25" value="0" />
                                                                                <Key frame="35" value="0" />
                                                                                <Key frame="45" value="0" />
                                                                                <Key frame="55" value="0" />
                                                                                <Key frame="65" value="-40" />
                                                                                <Key frame="75" value="-10" />
                                                                                <Key frame="85" value="0" />
                                                                                <Key frame="95" value="0" />
                                                                                <Key frame="105" value="5.75266e-06" />
                                                                                <Key frame="118" value="30" />
                                                                                <Key frame="131" value="5.75266e-06" />
                                                                                <Key frame="142" value="-42.5" />
                                                                                <Key frame="152" value="-50" />
                                                                                <Key frame="162" value="-60" />
                                                                                <Key frame="172" value="-60" />
                                                                                <Key frame="185" value="-60" />
                                                                                <Key frame="198" value="-60" />
                                                                                <Key frame="211" value="-60" />
                                                                                <Key frame="222" value="-60" />
                                                                                <Key frame="231" value="-60" />
                                                                                <Key frame="250" value="2.11181" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" unit="0">
                                                                                <Key frame="15" value="-3" />
                                                                                <Key frame="25" value="7.5" />
                                                                                <Key frame="35" value="25.1" />
                                                                                <Key frame="45" value="6" />
                                                                                <Key frame="55" value="6" />
                                                                                <Key frame="65" value="16.9" />
                                                                                <Key frame="75" value="35.6" />
                                                                                <Key frame="85" value="45" />
                                                                                <Key frame="95" value="42.6" />
                                                                                <Key frame="105" value="25" />
                                                                                <Key frame="118" value="0" />
                                                                                <Key frame="131" value="20" />
                                                                                <Key frame="142" value="15" />
                                                                                <Key frame="152" value="0" />
                                                                                <Key frame="162" value="-10" />
                                                                                <Key frame="172" value="-10" />
                                                                                <Key frame="185" value="-2.43316" />
                                                                                <Key frame="198" value="-1.29234" />
                                                                                <Key frame="211" value="-0.747952" />
                                                                                <Key frame="222" value="-0.118362" />
                                                                                <Key frame="231" value="0" />
                                                                                <Key frame="250" value="1.67234" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" unit="0">
                                                                                <Key frame="15" value="0" />
                                                                                <Key frame="25" value="0" />
                                                                                <Key frame="35" value="0" />
                                                                                <Key frame="45" value="0" />
                                                                                <Key frame="55" value="0" />
                                                                                <Key frame="65" value="-40" />
                                                                                <Key frame="75" value="-10" />
                                                                                <Key frame="85" value="-6" />
                                                                                <Key frame="95" value="-7" />
                                                                                <Key frame="105" value="-50" />
                                                                                <Key frame="118" value="0" />
                                                                                <Key frame="131" value="-50" />
                                                                                <Key frame="142" value="-42.5" />
                                                                                <Key frame="152" value="-50" />
                                                                                <Key frame="162" value="-60" />
                                                                                <Key frame="172" value="-60" />
                                                                                <Key frame="185" value="-60" />
                                                                                <Key frame="198" value="-60" />
                                                                                <Key frame="211" value="-60" />
                                                                                <Key frame="222" value="-60" />
                                                                                <Key frame="231" value="-60" />
                                                                                <Key frame="250" value="12.3024" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" unit="0">
                                                                                <Key frame="15" value="3" />
                                                                                <Key frame="25" value="-7" />
                                                                                <Key frame="35" value="-25.1" />
                                                                                <Key frame="45" value="-6" />
                                                                                <Key frame="55" value="-6" />
                                                                                <Key frame="65" value="-20" />
                                                                                <Key frame="75" value="-45" />
                                                                                <Key frame="85" value="-31" />
                                                                                <Key frame="95" value="-8" />
                                                                                <Key frame="105" value="-8" />
                                                                                <Key frame="118" value="-40" />
                                                                                <Key frame="131" value="-8" />
                                                                                <Key frame="142" value="15" />
                                                                                <Key frame="152" value="0" />
                                                                                <Key frame="162" value="-20" />
                                                                                <Key frame="172" value="-30.9" />
                                                                                <Key frame="185" value="-35" />
                                                                                <Key frame="198" value="-35" />
                                                                                <Key frame="211" value="-35" />
                                                                                <Key frame="222" value="-30.5" />
                                                                                <Key frame="231" value="0" />
                                                                                <Key frame="250" value="-1.22808" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipYawPitch" recordable="1" mute="0" unit="0">
                                                                                <Key frame="15" value="-6.2" />
                                                                                <Key frame="25" value="-6.9" />
                                                                                <Key frame="35" value="-7.5" />
                                                                                <Key frame="45" value="-6.9" />
                                                                                <Key frame="55" value="-8.2" />
                                                                                <Key frame="65" value="-9.6" />
                                                                                <Key frame="250" value="-11.1598" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" unit="0">
                                                                                <Key frame="15" value="0" />
                                                                                <Key frame="25" value="0" />
                                                                                <Key frame="35" value="0" />
                                                                                <Key frame="45" value="0" />
                                                                                <Key frame="55" value="0" />
                                                                                <Key frame="65" value="80" />
                                                                                <Key frame="75" value="20" />
                                                                                <Key frame="85" value="7" />
                                                                                <Key frame="95" value="7" />
                                                                                <Key frame="105" value="100" />
                                                                                <Key frame="118" value="0" />
                                                                                <Key frame="131" value="100" />
                                                                                <Key frame="142" value="85" />
                                                                                <Key frame="152" value="100" />
                                                                                <Key frame="162" value="120" />
                                                                                <Key frame="172" value="120" />
                                                                                <Key frame="185" value="120" />
                                                                                <Key frame="198" value="120" />
                                                                                <Key frame="211" value="120" />
                                                                                <Key frame="222" value="120" />
                                                                                <Key frame="231" value="120" />
                                                                                <Key frame="250" value="-5.2711" />
                                                                            </ActuatorCurve>
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                    <Resource name="All motors" type="Lock" timeout="0" />
                                                                </Box>
                                                                <Box name="Stand Up" id="2" localization="8" tooltip="The robot tries to stand up from any position for a number of tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." x="136" y="61">
                                                                    <bitmap>media/images/box/movement/stand.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated when the robot succeed in standing up." id="4" />
                                                                    <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot failed to stand up after n tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." id="5" />
                                                                    <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of stand up before stimulating the failure output." id="6" />
                                                                    <Timeline enable="0">
                                                                        <BehaviorLayer name="StandUpBehavior">
                                                                            <BehaviorKeyframe name="DetectRobotPose" index="1">
                                                                                <Diagram>
                                                                                    <Box name="Goto Posture" id="2" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="331" y="92">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nTries = 0
        self.postureProxy = ALProxy("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureProxy.stopMove()

    def onInput_onStart(self):
        if(self.nTries != self.getParameter("Maximum of tries")):
            self.nTries = self.getParameter("Maximum of tries")
            self.postureProxy.setMaxTryNumber(self.nTries)

        result = self.postureProxy.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                                                                        <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                                                                        <Parameter name="Name" inherits_from_parent="0" content_type="3" value="Stand" default_value="Stand" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                                                                            <Choice value="Crouch" />
                                                                                            <Choice value="LyingBack" />
                                                                                            <Choice value="LyingBelly" />
                                                                                            <Choice value="Sit" />
                                                                                            <Choice value="SitRelax" />
                                                                                            <Choice value="StandInit" />
                                                                                            <Choice value="Stand" />
                                                                                            <Choice value="StandZero" />
                                                                                        </Parameter>
                                                                                        <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="80" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                                                                                        <Parameter name="Maximum of tries" inherits_from_parent="1" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of go to posture before stimulating the failure output." id="8" />
                                                                                        <Resource name="All motors" type="Lock" timeout="0" />
                                                                                        <Resource name="Stiffness" type="Lock" timeout="0" />
                                                                                    </Box>
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                                    <Link inputowner="0" indexofinput="5" outputowner="2" indexofoutput="5" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                    </Timeline>
                                                                    <Resource name="All motors" type="Lock" timeout="0" />
                                                                </Box>
                                                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="4" />
                                                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="5" />
                                                                <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="4" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                                <Resource name="All motors" type="Lock" timeout="0" />
                                                <Resource name="Left eye leds" type="Lock" timeout="0" />
                                                <Resource name="Right eye leds" type="Lock" timeout="0" />
                                                <Resource name="Audio player" type="Lock" timeout="0" />
                                            </Box>
                                            <Link inputowner="22" indexofinput="2" outputowner="15" indexofoutput="3" />
                                            <Link inputowner="15" indexofinput="2" outputowner="0" indexofoutput="1" />
                                            <Link inputowner="14" indexofinput="2" outputowner="22" indexofoutput="4" />
                                            <Link inputowner="1" indexofinput="2" outputowner="14" indexofoutput="5" />
                                            <Link inputowner="1" indexofinput="4" outputowner="15" indexofoutput="3" />
                                            <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="5" />
                                            <Link inputowner="3" indexofinput="4" outputowner="25" indexofoutput="3" />
                                            <Link inputowner="25" indexofinput="2" outputowner="0" indexofoutput="1" />
                                            <Link inputowner="14" indexofinput="3" outputowner="1" indexofoutput="5" />
                                            <Link inputowner="4" indexofinput="4" outputowner="5" indexofoutput="3" />
                                            <Link inputowner="6" indexofinput="2" outputowner="4" indexofoutput="5" />
                                            <Link inputowner="4" indexofinput="2" outputowner="1" indexofoutput="5" />
                                            <Link inputowner="8" indexofinput="2" outputowner="6" indexofoutput="5" />
                                            <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="1" />
                                            <Link inputowner="2" indexofinput="2" outputowner="3" indexofoutput="5" />
                                            <Link inputowner="7" indexofinput="2" outputowner="6" indexofoutput="4" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <BehaviorLayer name="behavior_layer2">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram />
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                            </Timeline>
                        </Box>
                        <Box name="Stand Up" id="8" localization="8" tooltip="the robot tries to stand up from any position for a number of tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." x="251" y="268">
                            <bitmap>media/images/box/movement/stand.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated when the robot succeed in standing up." id="4" />
                            <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot failed to stand up after n tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." id="5" />
                            <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of stand up before stimulating the failure output." id="6" />
                            <Timeline enable="0">
                                <BehaviorLayer name="StandUpBehavior">
                                    <BehaviorKeyframe name="DetectRobotPose" index="1">
                                        <Diagram>
                                            <Box name="Goto Posture" id="2" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="331" y="92">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nTries = 0
        self.postureProxy = ALProxy("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureProxy.stopMove()

    def onInput_onStart(self):
        if(self.nTries != self.getParameter("Maximum of tries")):
            self.nTries = self.getParameter("Maximum of tries")
            self.postureProxy.setMaxTryNumber(self.nTries)

        result = self.postureProxy.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                                <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                                <Parameter name="Name" inherits_from_parent="0" content_type="3" value="Stand" default_value="Stand" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                                    <Choice value="Crouch" />
                                                    <Choice value="LyingBack" />
                                                    <Choice value="LyingBelly" />
                                                    <Choice value="Sit" />
                                                    <Choice value="SitRelax" />
                                                    <Choice value="StandInit" />
                                                    <Choice value="Stand" />
                                                    <Choice value="StandZero" />
                                                </Parameter>
                                                <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="80" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                                                <Parameter name="Maximum of tries" inherits_from_parent="1" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of go to posture before stimulating the failure output." id="8" />
                                                <Resource name="All motors" type="Lock" timeout="0" />
                                                <Resource name="Stiffness" type="Lock" timeout="0" />
                                            </Box>
                                            <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                            <Link inputowner="0" indexofinput="5" outputowner="2" indexofoutput="5" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                            </Timeline>
                            <Resource name="All motors" type="Lock" timeout="0" />
                        </Box>
                        <Link inputowner="0" indexofinput="4" outputowner="12" indexofoutput="4" />
                        <Link inputowner="12" indexofinput="2" outputowner="0" indexofoutput="2" />
                    </Diagram>
                </BehaviorKeyframe>
            </BehaviorLayer>
        </Timeline>
    </Box>
</ChoregrapheProject>
